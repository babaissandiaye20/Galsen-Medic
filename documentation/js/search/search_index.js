var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.875,1,3.744]],["body/controllers/AppController.html",[0,3.132,1,6.254,2,2.628,3,0.073,4,0.064,5,0.064,6,5.977,7,0.252,8,2.507,9,8.148,10,0.603,11,0.006,12,0.293,13,6.702,14,2.062,15,0.687,16,0.155,17,1.58,18,6.056,19,5.977,20,0.073,21,0.432,22,3.063,23,2.476,24,2.136,25,6.702,26,0.005,27,0.005]],["title/modules/AppModule.html",[28,1.734,29,3.744]],["body/modules/AppModule.html",[1,4.517,2,1.897,3,0.034,4,0.03,5,0.03,11,0.006,16,0.184,17,0.743,18,5.183,19,2.811,20,0.034,21,0.203,26,0.003,27,0.003,28,2.093,29,7.626,30,1.476,31,1.476,32,1.552,33,1.552,34,1.476,35,2.898,36,1.552,37,2.811,38,2.811,39,2.811,40,5.183,41,5.449,42,5.449,43,5.449,44,5.449,45,5.183,46,5.449,47,5.449,48,5.449,49,5.449,50,5.449,51,4.579,52,5.449,53,5.449,54,5.183,55,4.955,56,3.138,57,4.695,58,4.955,59,4.955,60,4.051,61,5.183,62,2.382,63,1.552,64,1.513,65,3.152,66,4.267,67,4.517,68,4.267,69,4.267,70,2.845,71,3.152,72,1.476,73,2.811,74,3.152,75,3.152,76,3.152,77,3.152,78,2.811,79,2.285,80,2.811,81,3.152,82,2.419,83,2.419,84,3.152,85,2.174,86,1.92,87,2.419,88,2.811,89,2.285,90,3.152,91,3.152,92,1.686,93,2.285,94,3.152,95,3.152,96,1.854,97,2.285,98,3.152,99,3.152,100,3.152,101,3.152,102,3.152,103,3.152,104,3.152,105,3.152,106,3.152,107,3.881,108,4.267,109,2.587,110,2.811,111,3.152,112,1.995,113,2.285,114,3.152,115,3.152,116,3.152,117,3.152,118,0.529,119,3.152]],["title/injectables/AppService.html",[18,3.364,120,1.188]],["body/injectables/AppService.html",[3,0.076,4,0.067,5,0.067,7,0.261,8,2.561,9,8.244,11,0.006,12,0.303,14,2.135,15,0.701,16,0.132,17,1.636,18,5.739,20,0.076,21,0.448,24,2.211,26,0.005,27,0.005,120,2.026,121,2.667,122,6.189,123,6.939,124,6.939,125,6.939]],["title/injectables/AsyncContextInterceptor.html",[120,1.188,126,4.003]],["body/injectables/AsyncContextInterceptor.html",[3,0.062,4,0.055,5,0.055,7,0.215,8,2.267,11,0.006,12,0.249,14,1.756,16,0.155,17,1.345,20,0.062,21,0.368,24,2.348,26,0.005,27,0.005,120,1.794,121,2.193,126,6.047,127,6.572,128,6.047,129,5.09,130,7.368,131,7.368,132,7.077,133,5.916,134,8.623,135,5.707,136,1.787,137,1.787,138,0.232,139,0.581,140,4.38,141,8.16,142,7.368,143,5.09,144,4.38,145,5.09,146,4.138,147,3.012,148,3.146,149,5.707,150,5.09,151,4.684,152,5.707,153,5.707,154,5.707,155,6.572,156,5.09,157,7.368,158,4.684,159,3.477,160,5.707,161,5.09,162,7.368,163,3.477,164,5.707,165,5.707,166,5.707]],["title/injectables/AsyncContextMiddleware.html",[120,1.188,167,4.003]],["body/injectables/AsyncContextMiddleware.html",[3,0.061,4,0.054,5,0.054,7,0.21,8,2.233,11,0.006,12,0.243,14,1.715,16,0.153,17,1.314,20,0.061,21,0.359,26,0.005,27,0.005,120,1.767,121,2.142,128,5.955,133,6.196,136,1.745,137,1.745,138,0.226,139,0.567,140,4.278,144,4.278,145,4.972,146,4.041,147,2.279,148,4.711,151,4.575,159,3.396,167,5.955,168,6.472,169,4.972,170,7.257,171,7.257,172,8.068,173,5.894,174,8.546,175,5.574,176,3.073,177,4.278,178,7.257,179,3.844,180,3.278,181,4.592,182,5.574,183,4.422,184,4.972,185,4.972,186,2.745,187,3.171,188,5.574,189,5.574,190,5.569,191,3.675,192,3.396,193,5.574,194,4.972,195,2.982,196,4.575,197,5.574,198,4.041,199,4.041,200,5.574]],["title/controllers/AuthController.html",[0,1.875,201,3.744]],["body/controllers/AuthController.html",[0,1.441,2,1.471,3,0.041,4,0.036,5,0.036,7,0.141,8,1.696,10,0.648,11,0.006,12,0.315,14,2.216,15,0.551,16,0.157,17,0.884,20,0.041,21,0.242,22,1.714,24,2.295,26,0.003,27,0.003,136,2.255,137,2.255,138,0.292,139,0.733,147,1.533,148,2.067,176,3.038,186,1.847,201,4.23,202,3.344,203,2.067,204,3.75,205,3.865,206,4.915,207,4.915,208,4.915,209,4.915,210,3.75,211,6.169,212,5.511,213,3.75,214,5.511,215,3.684,216,5.911,217,3.351,218,5.911,219,4.523,220,3.75,221,3.547,222,3.75,223,5.534,224,3.75,225,5.511,226,3.744,227,2.787,228,3.358,229,4.915,230,3.989,231,3.75,232,5.528,233,3.292,234,4.915,235,5.911,236,3.75,237,3.75,238,3.75,239,6.424,240,5.511,241,2.714,242,4.915,243,2.405,244,3.75,245,3.75,246,5.511,247,3.344,248,5.817,249,5.511,250,3.75,251,5.511,252,3.75,253,2.133,254,3.135,255,2.205,256,3.75,257,4.506,258,3.344,259,1.8,260,3.077,261,3.344,262,4.915,263,2.878,264,3.488,265,2.006,266,2.133,267,2.067,268,4.676,269,5.015,270,0.374,271,3.75,272,3.75,273,3.75,274,4.389,275,4.23,276,3.75,277,3.75,278,3.75,279,3.75,280,3.241,281,3.75,282,3.75,283,1.413,284,3.75,285,3.75,286,3.75,287,3.75,288,3.241,289,3.75,290,3.75,291,3.75,292,3.75]],["title/modules/AuthModule.html",[28,1.734,40,3.364]],["body/modules/AuthModule.html",[2,2.464,3,0.049,4,0.043,5,0.043,11,0.006,16,0.178,17,1.061,20,0.049,21,0.29,26,0.004,27,0.004,28,2.573,30,2.942,31,2.108,32,2.217,33,2.217,34,2.108,35,3.564,36,3.564,40,6.706,56,3.563,62,3.094,63,2.217,64,2.161,70,3.695,72,2.108,78,6.455,79,3.264,186,4.202,201,5.554,205,1.922,257,6.463,258,4.016,264,2.849,265,2.408,266,2.561,293,4.016,294,4.016,295,4.016,296,5.626,297,6.186,298,3.416,299,5.4,300,4.502,301,4.502,302,4.016,303,7.237,304,3.695,305,6.283,306,3.264,307,4.502,308,6.427,309,2.058,310,3.695,311,4.502,312,3.105,313,4.502,314,4.016,315,4.016,316,4.502,317,4.502,318,4.502,319,4.502,320,4.502,321,2.482,322,4.016,323,4.502,324,4.502,325,4.502]],["title/injectables/AuthService.html",[120,1.188,257,3.364]],["body/injectables/AuthService.html",[3,0.036,4,0.032,5,0.032,7,0.124,8,1.54,11,0.006,12,0.334,14,2.235,15,0.766,16,0.162,17,0.777,20,0.036,21,0.213,24,2.438,26,0.003,27,0.003,79,2.39,120,1.219,121,1.267,136,2.395,137,2.395,138,0.311,139,0.778,147,3.348,191,3.3,195,1.763,205,3.879,206,4.464,207,4.464,208,4.464,209,4.464,211,5.763,216,2.705,217,2.527,218,4.108,221,3.578,226,1.714,227,3.417,230,1.714,234,2.94,235,4.108,239,2.94,241,1.623,247,4.464,248,5.267,257,3.452,261,2.94,262,4.464,263,2.53,264,3.168,288,4.675,296,5.241,298,3.182,299,4.841,302,2.94,304,2.705,308,6.523,309,1.507,310,2.705,314,5.397,326,2.94,327,4.033,328,5.005,329,2.184,330,3.297,331,7.089,332,3.297,333,5.005,334,1.049,335,3.297,336,3.297,337,5.005,338,3.297,339,3.614,340,5.005,341,3.297,342,3.297,343,5.005,344,3.297,345,1.875,346,4.108,347,3.297,348,3.017,349,3.297,350,2.53,351,3.297,352,3.297,353,3.297,354,1.623,355,3.297,356,5.005,357,3.297,358,2.53,359,3.297,360,3.297,361,2.98,362,3.244,363,2.94,364,2.174,365,5.005,366,3.297,367,3.297,368,3.297,369,3.297,370,3.297,371,3.297,372,3.297,373,2.53,374,2.53,375,3.297,376,2.39,377,3.297,378,3.297,379,4.464,380,3.297,381,3.297,382,3.297,383,3.559,384,2.39,385,2.705,386,3.297,387,3.297,388,3.841,389,5.005,390,2.94,391,3.297,392,2.273,393,2.94,394,3.297,395,1.667]],["title/injectables/BlacklistService.html",[120,1.188,296,3.216]],["body/injectables/BlacklistService.html",[3,0.061,4,0.053,5,0.053,7,0.209,8,2.229,11,0.006,12,0.352,14,2.229,15,0.765,16,0.138,17,1.31,20,0.061,21,0.359,22,2.541,23,2.054,24,2.309,26,0.005,27,0.005,56,3.565,72,2.603,120,1.764,121,2.137,136,2.523,137,2.523,138,0.327,139,0.82,147,2.273,205,3.875,221,2.738,230,4.438,296,4.777,329,2.426,348,2.483,379,7.615,396,4.959,397,7.245,398,7.245,399,2.974,400,5.56,401,3.766,402,7.245,403,1.467,404,5.56,405,7.245,406,5.56,407,4.996,408,5.56,409,2.603,410,5.945,411,5.56]],["title/classes/ChangePasswordDto.html",[21,0.315,211,3.536]],["body/classes/ChangePasswordDto.html",[3,0.069,4,0.061,5,0.061,7,0.237,10,0.706,11,0.006,12,0.343,15,0.754,16,0.149,20,0.069,21,0.506,26,0.005,27,0.005,138,0.319,211,5.693,270,0.629,412,0.642,413,7.624,414,5.178,415,0.815,416,8.549,417,8.549,418,5.177,419,6.309,420,6.309,421,6.309,422,6.309,423,1.11,424,4.444,425,5.178,426,2.579,427,3.677,428,6.309,429,6.309,430,5.627]],["title/classes/ChangePrivilegeDto.html",[21,0.315,431,3.536]],["body/classes/ChangePrivilegeDto.html",[3,0.071,4,0.062,5,0.062,7,0.244,10,0.583,11,0.006,12,0.283,16,0.152,20,0.071,21,0.515,26,0.005,27,0.005,138,0.263,233,3.649,243,3.484,270,0.646,334,1.384,412,0.659,415,0.829,418,4.272,423,1.037,424,4.149,426,2.649,427,3.034,431,5.788,432,7.12,433,4.101,434,5.967,435,7.12,436,7.12,437,1.339,438,6.48,439,5.779,440,7.12,441,4.469]],["title/injectables/CloudinaryService.html",[120,1.188,442,3.536]],["body/injectables/CloudinaryService.html",[3,0.041,4,0.036,5,0.063,7,0.246,8,1.7,11,0.006,12,0.336,14,2.015,15,0.732,16,0.124,17,0.887,20,0.041,21,0.243,24,2.449,26,0.003,27,0.003,120,1.345,121,1.446,136,2.05,137,2.05,138,0.266,139,0.666,146,2.728,147,1.538,163,2.293,205,3.71,215,1.806,217,3.209,241,1.853,327,3.224,329,2.858,348,2.467,361,2.721,362,3.432,376,4.006,384,4.006,395,1.903,407,5.541,410,4.535,415,0.573,437,0.631,442,4.006,443,3.356,444,6.435,445,4.535,446,5.025,447,5.025,448,5.525,449,5.525,450,3.763,451,6.548,452,3.088,453,4.429,454,6.537,455,3.763,456,4.516,457,4.317,458,4.241,459,6.435,460,6.435,461,3.088,462,3.763,463,5.525,464,3.763,465,6.435,466,3.25,467,2.595,468,3.356,469,3.763,470,3.763,471,3.763,472,3.763,473,3.763,474,3.763,475,3.763,476,3.763,477,3.763,478,3.763,479,3.763,480,5.572,481,3.356,482,3.811,483,3.356,484,5.84,485,3.763,486,3.763,487,3.763,488,3.763,489,3.763,490,3.356,491,3.763,492,3.763,493,5.525,494,3.763,495,2.481,496,3.763,497,3.763,498,3.356,499,3.763,500,3.763,501,3.356,502,3.763,503,3.763,504,2.728,505,3.088,506,3.356,507,3.356,508,3.356,509,3.356,510,3.356,511,4.928,512,3.763,513,2.293,514,3.763,515,3.763,516,3.356,517,3.088,518,3.356,519,3.356,520,3.356]],["title/classes/ConnectDeviseDto.html",[21,0.315,521,4.003]],["body/classes/ConnectDeviseDto.html",[3,0.067,4,0.059,5,0.059,7,0.231,10,0.695,11,0.006,12,0.337,15,0.747,16,0.117,20,0.067,21,0.396,26,0.005,27,0.005,138,0.36,139,0.902,259,4.055,270,0.613,334,1.339,412,0.625,415,0.802,423,1.097,437,1.417,521,6.34,522,1.417,523,4.239,524,5.57,525,1.233,526,1.866,527,1.778,528,6.147,529,2.146,530,1.133,531,2.146,532,6.147]],["title/classes/ConnectDisponibiliteDto.html",[21,0.315,533,4.003]],["body/classes/ConnectDisponibiliteDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,533,6.726,534,4.665,535,6.033]],["title/classes/ConnectDossierMedicalDto.html",[21,0.315,536,4.003]],["body/classes/ConnectDossierMedicalDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,536,6.726,537,5.192,538,6.033]],["title/classes/ConnectLogDto.html",[21,0.315,539,4.003]],["body/classes/ConnectLogDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,539,6.726,540,5.192,541,6.033]],["title/classes/ConnectMedecinSousServiceDto.html",[21,0.315,542,4.003]],["body/classes/ConnectMedecinSousServiceDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,542,6.726,543,5.192,544,6.765]],["title/classes/ConnectModePaiementDto.html",[21,0.315,545,4.003]],["body/classes/ConnectModePaiementDto.html",[3,0.067,4,0.059,5,0.059,7,0.231,10,0.695,11,0.006,12,0.337,15,0.747,16,0.117,20,0.067,21,0.396,26,0.005,27,0.005,138,0.36,139,0.902,259,4.055,270,0.613,334,1.339,412,0.625,415,0.802,423,1.097,437,1.417,522,1.417,525,1.233,526,1.866,527,1.778,529,2.146,530,1.133,531,2.146,545,6.34,546,4.718,547,2.308,548,6.147,549,5.482]],["title/classes/ConnectOrdonnanceDto.html",[21,0.315,550,4.003]],["body/classes/ConnectOrdonnanceDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,550,6.726,551,5.192,552,6.033]],["title/classes/ConnectPaiementDto.html",[21,0.315,553,4.003]],["body/classes/ConnectPaiementDto.html",[3,0.066,4,0.058,5,0.058,7,0.228,10,0.69,11,0.006,12,0.335,16,0.115,20,0.066,21,0.392,26,0.005,27,0.005,138,0.358,139,0.898,259,4.034,270,0.606,334,1.53,412,0.618,415,0.796,423,1.091,437,1.41,522,1.41,525,1.224,526,1.858,527,1.771,529,2.452,530,1.295,531,2.452,553,6.295,554,4.406,555,7.496,556,5.421,557,6.078]],["title/classes/ConnectPrivilegeDto.html",[21,0.315,558,4.003]],["body/classes/ConnectPrivilegeDto.html",[3,0.067,4,0.059,5,0.059,7,0.231,10,0.695,11,0.006,12,0.337,15,0.747,16,0.117,20,0.067,21,0.396,26,0.005,27,0.005,138,0.36,139,0.902,259,4.055,270,0.613,334,1.339,412,0.625,415,0.802,423,1.097,433,3.89,437,1.417,522,1.417,525,1.233,526,1.866,527,1.778,529,2.146,530,1.133,531,2.146,547,2.308,558,6.34,559,6.147,560,5.482]],["title/classes/ConnectReservationDto.html",[21,0.315,561,4.003]],["body/classes/ConnectReservationDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,561,6.726,562,4.665,563,6.033]],["title/classes/ConnectServiceDto.html",[21,0.315,564,4.003]],["body/classes/ConnectServiceDto.html",[3,0.067,4,0.059,5,0.059,7,0.231,10,0.695,11,0.006,12,0.337,15,0.747,16,0.117,20,0.067,21,0.396,26,0.005,27,0.005,138,0.36,139,0.902,259,4.055,270,0.613,334,1.339,412,0.625,415,0.802,423,1.097,437,1.417,522,1.417,525,1.233,526,1.866,527,1.778,529,2.146,530,1.133,531,2.146,547,2.308,564,6.34,565,3.89,566,5.045,567,5.045]],["title/classes/ConnectSousServiceDto.html",[21,0.315,568,4.003]],["body/classes/ConnectSousServiceDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,568,6.726,569,5.192,570,6.033]],["title/classes/ConnectStatutReservationDto.html",[21,0.315,571,4.003]],["body/classes/ConnectStatutReservationDto.html",[3,0.067,4,0.059,5,0.059,7,0.231,10,0.695,11,0.006,12,0.337,15,0.747,16,0.117,20,0.067,21,0.396,26,0.005,27,0.005,138,0.36,139,0.902,259,4.055,270,0.613,334,1.339,412,0.625,415,0.802,423,1.097,437,1.417,522,1.417,525,1.233,526,1.866,527,1.778,529,2.146,530,1.133,531,2.146,547,2.308,571,6.34,572,4.718,573,6.147,574,5.482]],["title/classes/ConnectTarifDto.html",[21,0.315,575,4.003]],["body/classes/ConnectTarifDto.html",[3,0.074,4,0.065,5,0.065,7,0.254,10,0.608,11,0.006,12,0.295,16,0.128,20,0.074,21,0.436,26,0.005,27,0.005,138,0.333,259,3.934,270,0.675,334,1.421,412,0.688,415,0.851,423,1.064,437,1.479,522,1.375,525,1.08,529,2.276,530,1.202,531,2.276,575,6.726,576,4.665,577,6.033]],["title/classes/ConnectUtilisateurDto.html",[21,0.315,223,3.364]],["body/classes/ConnectUtilisateurDto.html",[3,0.069,4,0.06,5,0.06,7,0.236,10,0.704,11,0.006,12,0.342,15,0.752,16,0.149,20,0.069,21,0.505,26,0.005,27,0.005,138,0.318,223,5.395,270,0.626,288,5.014,339,4.561,412,0.638,415,0.812,418,5.158,423,1.107,424,4.432,426,2.564,427,3.663,578,7.604,579,3.969,580,6.272,581,5.147,582,6.272,583,4.814,584,5.672,585,3.956,586,6.272,587,5.594]],["title/classes/ConnectUtilisateurDto-1.html",[21,0.263,223,2.815,283,1.538]],["body/classes/ConnectUtilisateurDto-1.html",[3,0.063,4,0.055,5,0.055,7,0.215,10,0.735,11,0.006,12,0.357,15,0.795,16,0.109,20,0.063,21,0.369,26,0.005,27,0.005,138,0.371,139,0.931,223,5.09,259,4.143,270,0.571,334,1.28,339,4.371,412,0.582,415,0.766,423,1.121,437,1.371,522,1.448,525,1.304,526,1.926,527,1.836,529,2.05,530,1.083,531,2.05,579,3.621,583,4.392,588,5.171,589,4.696,590,4.149]],["title/classes/CreateDeviseDto.html",[21,0.315,591,3.087]],["body/classes/CreateDeviseDto.html",[3,0.062,4,0.054,5,0.054,7,0.213,10,0.773,11,0.006,12,0.375,15,0.769,16,0.108,20,0.062,21,0.473,26,0.005,27,0.005,118,1.23,138,0.349,185,5.05,194,5.05,321,3.121,412,0.576,415,0.761,424,4.469,426,2.315,456,3.905,457,3.733,523,3.905,524,5.36,547,2.22,585,4.348,591,4.639,592,7.943,593,4.481,594,5.606,595,4.311,596,5.05,597,5.05,598,5.662,599,7.331,600,5.662,601,7.331,602,5.05,603,5.05,604,6.538,605,3.811,606,5.662,607,5.662,608,5.662,609,5.662,610,2.718,611,4.647,612,4.647,613,4.647]],["title/classes/CreateDeviseDto-1.html",[21,0.263,283,1.538,591,2.583]],["body/classes/CreateDeviseDto-1.html",[3,0.057,4,0.05,5,0.05,7,0.196,10,0.78,11,0.006,12,0.378,15,0.818,16,0.099,20,0.057,21,0.336,26,0.004,27,0.004,118,1.164,138,0.384,139,0.706,270,0.52,403,1.516,412,0.53,415,0.72,423,1.158,522,1.496,523,3.593,524,5.146,525,1.384,526,1.461,527,1.393,530,1.018,547,2.132,591,4.393,593,4.302,594,5.383,595,4.895,597,4.647,602,4.647,603,4.647,614,2.892,615,1.444,616,5.21,617,1.284,618,1.461,619,1.509,620,5.21]],["title/classes/CreateDisponibiliteDto.html",[21,0.315,621,3.087]],["body/classes/CreateDisponibiliteDto.html",[3,0.043,4,0.038,5,0.038,7,0.147,10,0.733,11,0.006,12,0.356,15,0.752,16,0.108,20,0.043,21,0.367,26,0.004,27,0.004,138,0.331,139,0.749,191,3.754,217,3.725,233,4.176,243,2.485,270,0.391,283,2.145,334,0.987,374,5.646,388,6.612,412,0.399,415,0.591,418,5.374,423,1.092,424,4.061,426,1.603,427,3.816,437,0.955,526,1.549,527,1.142,530,1.264,534,2.704,585,2.879,605,3.485,621,3.603,622,7.501,623,4.623,624,4.623,625,5.145,626,4.623,627,5.979,628,5.979,629,5.693,630,6.561,631,3.921,632,8.616,633,8.616,634,5.452,635,8.616,636,3.921,637,5.693,638,3.921,639,3.921,640,4.128,641,3.921,642,3.921,643,5.078,644,2.733,645,3.921,646,3.921,647,5.693,648,6.704,649,7.357,650,5.693,651,3.921,652,5.693,653,5.979,654,3.921,655,3.926,656,3.217,657,3.921,658,3.217,659,7.357]],["title/classes/CreateDisponibiliteDto-1.html",[21,0.263,283,1.538,621,2.583]],["body/classes/CreateDisponibiliteDto-1.html",[3,0.06,4,0.053,5,0.053,7,0.206,10,0.763,11,0.006,12,0.371,15,0.823,16,0.104,20,0.06,21,0.353,26,0.004,27,0.004,118,1.203,138,0.379,139,0.73,270,0.546,403,1.545,412,0.557,415,0.744,423,1.144,522,1.478,525,1.355,526,1.51,527,1.439,530,1.052,534,3.776,614,2.858,615,1.48,617,1.327,618,1.51,619,1.559,621,4.539,623,5.516,624,5.516,626,5.516,660,5.475,661,5.475,662,5.475,663,5.475]],["title/classes/CreateDossierMedicalDto.html",[21,0.315,664,4.003]],["body/classes/CreateDossierMedicalDto.html",[3,0.059,4,0.052,5,0.052,7,0.203,10,0.759,11,0.006,12,0.368,15,0.813,16,0.102,20,0.059,21,0.348,26,0.004,27,0.004,118,1.191,138,0.378,139,0.723,270,0.538,403,1.696,412,0.549,415,0.737,423,1.139,522,1.471,525,1.347,526,1.495,527,1.425,530,1.238,537,4.139,614,2.844,615,1.469,617,1.314,618,1.777,619,1.544,664,5.828,665,6.093,666,6.093,667,6.093,668,5.393,669,5.393,670,5.393,671,5.393]],["title/classes/CreateLogDto.html",[21,0.315,672,4.003]],["body/classes/CreateLogDto.html",[3,0.063,4,0.055,5,0.055,7,0.217,10,0.738,11,0.006,12,0.358,15,0.811,16,0.11,20,0.063,21,0.372,26,0.005,27,0.005,118,1.245,138,0.372,139,0.755,159,4.997,270,0.575,403,1.576,412,0.587,415,0.77,423,1.124,522,1.453,525,1.309,526,1.562,527,1.488,530,1.089,540,4.427,614,2.809,615,1.518,617,1.373,618,1.562,619,1.613,672,6.089,673,4.521,674,5.768,675,5.768,676,5.768]],["title/classes/CreateMedecinSousServiceDto.html",[21,0.315,677,3.216]],["body/classes/CreateMedecinSousServiceDto.html",[3,0.071,4,0.062,5,0.062,7,0.243,10,0.581,11,0.006,12,0.282,15,0.671,16,0.123,20,0.071,21,0.417,26,0.005,27,0.005,118,1.337,138,0.324,139,0.811,270,0.644,403,1.642,412,0.657,415,0.827,423,1.035,522,1.337,525,1.031,526,1.678,527,1.599,530,1.169,543,4.958,614,2.585,615,1.599,617,1.475,618,1.678,619,1.733,677,5.254,678,5.762]],["title/classes/CreateMedecinSousServiceDto-1.html",[21,0.263,283,1.538,677,2.692]],["body/classes/CreateMedecinSousServiceDto-1.html",[3,0.07,4,0.062,5,0.062,7,0.241,10,0.713,11,0.006,12,0.346,16,0.122,20,0.07,21,0.511,26,0.005,27,0.005,92,4.603,96,5.061,138,0.322,334,1.559,412,0.651,415,0.822,424,4.473,426,2.617,655,5.935,677,5.225,679,5.935,680,7.675,681,5.255,682,5.674,683,5.446,684,7.924,685,5.711,686,5.711]],["title/classes/CreateModePaiementDto.html",[21,0.315,687,3.216]],["body/classes/CreateModePaiementDto.html",[3,0.061,4,0.054,5,0.054,7,0.21,10,0.726,11,0.006,12,0.352,15,0.806,16,0.106,20,0.061,21,0.359,26,0.005,27,0.005,118,1.434,138,0.369,139,0.87,270,0.556,403,1.556,412,0.567,415,0.753,423,1.11,522,1.434,525,1.288,526,1.799,527,1.715,530,1.065,546,4.278,547,2.204,614,2.772,615,1.493,617,1.582,618,1.528,619,1.858,687,4.785,688,5.32,689,5.574,690,5.574,691,5.574]],["title/classes/CreateModePaiementDto-1.html",[21,0.263,283,1.538,687,2.692]],["body/classes/CreateModePaiementDto-1.html",[3,0.063,4,0.056,5,0.056,7,0.217,10,0.668,11,0.006,12,0.324,15,0.773,16,0.141,20,0.063,21,0.479,26,0.005,27,0.005,112,5.673,138,0.333,139,0.756,217,3.104,233,2.644,243,3.243,270,0.577,412,0.589,415,0.771,423,1.066,424,3.863,426,2.364,427,3.48,525,0.923,526,1.565,527,1.16,530,1.09,547,2.243,585,3.758,605,3.863,687,4.9,688,5.415,692,5.663,693,7.324,694,5.159,695,4.703,696,4.439,697,5.784,698,3.524,699,4.097,700,4.528,701,7.432,702,5.784,703,5.784,704,5.159]],["title/classes/CreateOrdonnanceDto.html",[21,0.315,705,4.003]],["body/classes/CreateOrdonnanceDto.html",[3,0.067,4,0.059,5,0.059,7,0.229,10,0.691,11,0.006,12,0.335,15,0.784,16,0.116,20,0.067,21,0.393,26,0.005,27,0.005,118,1.289,138,0.359,139,0.782,270,0.608,403,1.609,412,0.62,415,0.797,423,1.093,504,6.101,522,1.412,525,1.227,526,1.618,527,1.542,530,1.127,551,4.678,614,2.73,615,1.557,617,1.422,618,1.618,619,1.671,705,6.306,706,6.095,707,6.095]],["title/classes/CreatePaiementDto.html",[21,0.315,708,4.003]],["body/classes/CreatePaiementDto.html",[3,0.059,4,0.052,5,0.052,7,0.204,10,0.76,11,0.006,12,0.369,15,0.802,16,0.103,20,0.059,21,0.35,26,0.004,27,0.004,118,1.195,138,0.379,139,0.725,270,0.541,334,1.466,403,1.539,412,0.551,415,0.739,423,1.141,522,1.473,525,1.35,526,1.5,527,1.429,530,1.24,554,3.929,614,2.849,615,1.473,617,1.318,618,1.5,619,1.549,708,5.847,709,6.108,710,4.681,711,6.108,712,5.42,713,5.42,714,4.509,715,4.834,716,5.42]],["title/classes/CreatePrivilegeDto.html",[21,0.315,717,3.087]],["body/classes/CreatePrivilegeDto.html",[3,0.067,4,0.059,5,0.059,7,0.229,10,0.691,11,0.006,12,0.335,15,0.784,16,0.116,20,0.067,21,0.393,26,0.005,27,0.005,118,1.289,138,0.359,139,0.782,270,0.608,403,1.609,412,0.62,415,0.797,423,1.093,433,3.857,522,1.412,525,1.227,526,1.618,527,1.542,530,1.127,547,2.299,560,5.436,614,2.73,615,1.557,617,1.422,618,1.618,619,1.671,717,4.863,718,6.095]],["title/classes/CreatePrivilegeDto-1.html",[21,0.263,283,1.538,717,2.583]],["body/classes/CreatePrivilegeDto-1.html",[3,0.065,4,0.057,5,0.057,7,0.222,10,0.532,11,0.006,12,0.258,15,0.635,16,0.143,20,0.065,21,0.486,26,0.005,27,0.005,138,0.24,155,6.721,163,4.592,192,4.592,215,4.194,217,3.147,233,2.702,243,3.289,270,0.59,412,0.601,415,0.782,423,0.979,424,3.917,426,2.416,427,3.529,433,3.741,439,5.272,441,5.197,490,5.272,547,2.266,585,3.811,634,4.769,698,3.602,699,5.086,717,4.769,719,6.721,720,5.911,721,6.721,722,6.025,723,5.911,724,5.464,725,6.184,726,6.184,727,3.072]],["title/classes/CreateReservationDto.html",[21,0.315,728,4.003]],["body/classes/CreateReservationDto.html",[3,0.063,4,0.055,5,0.055,7,0.217,10,0.738,11,0.006,12,0.358,15,0.811,16,0.11,20,0.063,21,0.372,26,0.005,27,0.005,118,1.245,138,0.372,139,0.755,270,0.575,403,1.576,412,0.587,415,0.77,423,1.124,522,1.453,525,1.309,526,1.562,527,1.488,530,1.089,562,3.978,614,2.809,615,1.518,617,1.373,618,1.562,619,1.613,728,6.089,729,6.294,730,6.294,731,5.768,732,5.768,733,5.768]],["title/classes/CreateServiceDto.html",[21,0.315,734,3.216]],["body/classes/CreateServiceDto.html",[3,0.067,4,0.059,5,0.059,7,0.229,10,0.691,11,0.006,12,0.335,15,0.784,16,0.116,20,0.067,21,0.393,26,0.005,27,0.005,118,1.289,138,0.359,139,0.782,270,0.608,403,1.609,412,0.62,415,0.797,423,1.093,522,1.412,525,1.227,526,1.618,527,1.542,530,1.127,547,2.299,565,3.857,567,5.002,614,2.73,615,1.557,617,1.422,618,1.618,619,1.671,734,5.066,735,6.095]],["title/classes/CreateServiceDto-1.html",[21,0.263,283,1.538,734,2.692]],["body/classes/CreateServiceDto-1.html",[3,0.065,4,0.058,5,0.058,7,0.225,10,0.684,11,0.006,12,0.332,15,0.764,16,0.144,20,0.065,21,0.49,26,0.005,27,0.005,138,0.339,139,0.774,233,2.739,243,3.318,270,0.598,412,0.61,415,0.789,423,1.084,424,3.952,426,2.45,427,3.56,525,0.957,526,1.601,527,1.202,530,1.115,547,2.281,565,3.793,585,3.844,605,3.952,695,4.811,698,3.652,699,4.191,734,5.013,736,7.447,737,5.243,738,4.133,739,4.918,740,3.744,741,5.993,742,4.599,743,5.345,744,5.993]],["title/classes/CreateSousServiceDto.html",[21,0.315,745,3.216]],["body/classes/CreateSousServiceDto.html",[3,0.067,4,0.059,5,0.059,7,0.229,10,0.691,11,0.006,12,0.335,15,0.784,16,0.116,20,0.067,21,0.393,26,0.005,27,0.005,118,1.289,138,0.359,139,0.782,270,0.608,403,1.609,412,0.62,415,0.797,423,1.093,522,1.412,525,1.227,526,1.618,527,1.542,530,1.127,547,2.299,569,4.678,614,2.73,615,1.557,617,1.422,618,1.618,619,1.671,745,5.066,746,6.095,747,6.095]],["title/classes/CreateSousServiceDto-1.html",[21,0.263,283,1.538,745,2.692]],["body/classes/CreateSousServiceDto-1.html",[3,0.055,4,0.049,5,0.049,7,0.191,10,0.693,11,0.006,12,0.336,15,0.746,16,0.129,20,0.055,21,0.44,26,0.004,27,0.004,92,4.916,138,0.334,139,0.694,217,2.848,233,3.521,243,3.862,270,0.506,283,1.912,334,1.182,412,0.516,415,0.708,423,1.116,424,4.004,426,2.075,427,4.143,437,1.144,495,4.497,526,1.734,527,1.368,530,1.001,547,2.104,565,3.212,567,4.165,585,3.449,605,3.545,655,4.703,695,4.316,698,4.693,699,3.759,737,5.312,738,3.5,739,4.165,740,4.357,742,3.895,745,4.497,748,5.68,749,7.346,750,5.912,751,5.597,752,5.597,753,4.165,754,6.82,755,5.075,756,5.075,757,4.526]],["title/classes/CreateStatutReservationDto.html",[21,0.315,758,3.216]],["body/classes/CreateStatutReservationDto.html",[3,0.067,4,0.059,5,0.059,7,0.229,10,0.691,11,0.006,12,0.335,15,0.784,16,0.116,20,0.067,21,0.393,26,0.005,27,0.005,118,1.289,138,0.359,139,0.782,270,0.608,403,1.609,412,0.62,415,0.797,423,1.093,522,1.412,525,1.227,526,1.618,527,1.542,530,1.127,547,2.299,572,4.678,574,5.436,614,2.73,615,1.557,617,1.422,618,1.618,619,1.671,758,5.066,759,6.095]],["title/classes/CreateStatutReservationDto-1.html",[21,0.263,283,1.538,758,2.692]],["body/classes/CreateStatutReservationDto-1.html",[3,0.07,4,0.062,5,0.062,7,0.242,10,0.579,11,0.006,12,0.281,15,0.67,16,0.151,20,0.07,21,0.513,26,0.005,27,0.005,107,5.941,138,0.262,233,2.944,243,3.471,270,0.642,412,0.655,415,0.825,423,1.033,424,4.134,426,2.633,427,3.724,547,2.357,562,4.442,585,4.022,698,3.925,699,4.384,758,5.244,760,5.485,761,7.093,762,6.441,763,5.745,764,5.745]],["title/classes/CreateTarifDto.html",[21,0.315,765,3.087]],["body/classes/CreateTarifDto.html",[3,0.062,4,0.055,5,0.055,7,0.215,10,0.734,11,0.006,12,0.356,15,0.621,16,0.108,20,0.062,21,0.368,26,0.005,27,0.005,118,1.236,138,0.371,139,0.75,270,0.569,334,1.495,403,1.57,412,0.581,415,0.765,423,1.12,522,1.447,525,1.303,526,1.551,527,1.478,530,1.265,576,3.936,577,5.09,593,4.498,595,5.072,614,2.797,615,1.51,617,1.364,618,1.551,619,1.602,710,4.799,714,4.663,765,4.663,766,5.09,767,5.707]],["title/classes/CreateTarifDto-1.html",[21,0.263,283,1.538,765,2.583]],["body/classes/CreateTarifDto-1.html",[3,0.063,4,0.056,5,0.056,7,0.218,10,0.78,11,0.006,12,0.379,16,0.11,20,0.063,21,0.48,26,0.005,27,0.005,118,1.249,138,0.352,334,1.592,412,0.59,415,0.773,424,4.51,426,2.371,440,7.738,456,3.999,457,3.824,576,3.999,593,4.782,595,4.378,596,5.172,604,6.64,605,3.87,610,2.784,611,4.759,683,5.204,710,4.836,765,4.711,766,5.172,768,8.002,769,6.748,770,5.799,771,7.445,772,5.799,773,5.799,774,5.799,775,7.445]],["title/classes/CreateUtilisateurDto.html",[21,0.315,776,3.216]],["body/classes/CreateUtilisateurDto.html",[3,0.05,4,0.044,5,0.044,7,0.174,10,0.793,11,0.006,12,0.385,15,0.836,16,0.088,20,0.05,21,0.298,26,0.004,27,0.004,118,1.328,138,0.387,139,0.806,270,0.461,288,4.314,339,3.924,403,1.442,412,0.47,415,0.664,423,1.167,522,1.508,525,1.408,526,1.667,527,1.589,530,0.938,579,2.923,588,4.642,590,3.348,614,2.916,615,1.358,617,1.465,618,1.346,619,1.722,776,4.216,777,4.642,778,4.642,779,4.642,780,4.618,781,4.618,782,4.618,783,4.618,784,4.618,785,4.119]],["title/classes/CreateUtilisateurDto-1.html",[21,0.263,283,1.538,776,2.692]],["body/classes/CreateUtilisateurDto-1.html",[3,0.047,4,0.042,5,0.042,7,0.163,10,0.779,11,0.006,12,0.378,15,0.791,16,0.116,20,0.047,21,0.395,26,0.004,27,0.004,138,0.359,139,0.623,215,2.939,217,2.557,228,4.695,243,1.894,270,0.433,283,1.635,288,4.172,334,1.061,339,3.795,412,0.442,415,0.635,418,5.56,423,1.149,424,4.505,425,3.561,426,1.774,427,3.948,430,3.87,434,4.892,525,0.693,526,1.289,527,0.871,530,1.041,579,2.746,581,3.561,583,3.33,584,4.439,585,3.897,587,3.87,588,4.489,589,3.561,590,3.146,605,3.182,610,2.939,634,3.874,656,3.561,695,3.874,724,4.439,738,2.992,776,4.037,777,4.489,778,4.489,786,7.893,787,5.024,788,3.87,789,4.339,790,4.339,791,4.339,792,4.339,793,4.339,794,4.339,795,4.339,796,4.699,797,5.024,798,5.46,799,6.122,800,5.46,801,5.46,802,5.46,803,5.024,804,5.46,805,4.339,806,3.87,807,3.561,808,3.561,809,3.87,810,4.339,811,3.87,812,3.146,813,4.339]],["title/classes/Devise.html",[21,0.315,814,3.216]],["body/classes/Devise.html",[3,0.046,4,0.041,5,0.041,7,0.159,10,0.804,11,0.006,12,0.39,15,0.81,16,0.114,20,0.046,21,0.272,26,0.004,27,0.004,118,1.277,138,0.39,139,0.611,270,0.421,334,1.041,403,1.687,412,0.429,415,0.623,423,1.178,437,1.172,522,1.521,524,4.607,525,1.427,526,1.264,527,1.204,529,1.667,530,1.289,531,1.667,547,1.908,593,3.851,594,4.818,595,4.476,615,1.293,617,1.111,618,1.759,619,1.305,814,3.958,815,3.764,816,2.532,817,5.362,818,2.532,819,4.22,820,4.22,821,4.22,822,4.22,823,4.22,824,4.22,825,4.22,826,5.302,827,3.799,828,4.22,829,4.22,830,3.764]],["title/controllers/DeviseController.html",[0,1.875,67,3.744]],["body/controllers/DeviseController.html",[0,1.285,2,1.311,3,0.037,4,0.032,5,0.032,7,0.126,8,1.556,10,0.692,11,0.006,12,0.336,14,2.366,15,0.745,16,0.139,17,0.788,20,0.037,21,0.216,22,1.528,23,1.235,24,2.451,26,0.003,27,0.003,54,4.208,67,3.882,136,2.289,137,2.289,138,0.297,139,0.744,192,5.729,203,1.842,228,4.146,253,2.878,254,2.878,267,1.842,268,4.866,270,0.333,274,4.686,437,1.483,591,4.306,610,3.266,614,1.084,644,3.266,814,6.199,831,2.981,832,6.519,833,3.882,834,2.068,835,3.509,836,2.904,837,3.335,838,2.368,839,2.565,840,2.981,841,5.585,842,5.585,843,3.76,844,5.223,845,3.343,846,2.115,847,2.743,848,4.002,849,3.343,850,4.686,851,2.565,852,2.565,853,4.002,854,3.343,855,2.975,856,2.305,857,4.837,858,4.933,859,3.343,860,2.204,861,2.305,862,3.343,863,1.565,864,4.487,865,2.743,866,4.693,867,3.343,868,1.966,869,1.901,870,3.343,871,4.151,872,1.084,873,3.343,874,3.343,875,2.305,876,3.343,877,3.343,878,1.901,879,2.565,880,3.343,881,2.037,882,2.115,883,3.343,884,2.981,885,2.981,886,3.343,887,2.037,888,2.981,889,3.343]],["title/classes/DeviseDto.html",[21,0.315,890,4.003]],["body/classes/DeviseDto.html",[3,0.05,4,0.044,5,0.044,7,0.171,10,0.805,11,0.006,12,0.391,15,0.817,16,0.086,20,0.05,21,0.293,26,0.004,27,0.004,118,1.06,138,0.391,270,0.453,334,1.096,403,1.709,412,0.462,415,0.656,423,1.181,437,1.22,522,1.525,524,4.793,525,1.429,529,1.755,530,1.313,531,1.755,547,1.986,593,4.007,594,5.013,595,4.623,615,1.345,617,1.17,618,1.801,619,1.374,816,2.635,818,2.635,890,5.186,891,4.049,892,4.54,893,4.54,894,4.54,895,4.54,896,4.54,897,4.54,898,4.54,899,4.54]],["title/injectables/DeviseService.html",[54,3.364,120,1.188]],["body/injectables/DeviseService.html",[3,0.029,4,0.025,5,0.025,7,0.099,8,1.297,11,0.006,12,0.32,14,2.149,16,0.124,17,0.623,20,0.029,21,0.171,23,1.558,24,2.424,26,0.003,27,0.003,54,2.908,56,2.505,72,1.238,118,1.007,120,1.027,121,1.016,136,2.187,137,2.187,138,0.284,139,0.711,147,2.995,181,3.328,183,3.204,187,1.505,192,4.898,195,1.415,205,3.815,221,3.439,228,3.993,241,3.227,298,2.933,309,1.209,327,2.076,329,1.84,334,1.448,348,3.838,361,2.076,362,2.348,374,4.036,383,1.555,395,3.034,399,1.415,401,3.118,403,0.482,409,3.27,437,1.377,518,2.359,524,3.467,527,1.055,547,0.722,591,4.147,593,4.193,594,1.824,610,2.524,611,2.17,614,0.858,615,0.489,644,2.524,814,6.079,832,5.845,833,3.236,834,1.724,835,2.88,836,2.561,837,2.78,838,1.974,839,3.236,841,5.378,842,5.731,843,3.584,844,5.36,848,3.093,851,3.236,853,2.48,855,2.48,857,3.528,858,5.063,860,2.78,863,1.974,864,5.016,866,2.908,871,3.46,872,0.858,900,2.359,901,2.645,902,2.645,903,4.217,904,2.645,905,3.761,906,4.69,907,2.645,908,2.645,909,3.761,910,2.645,911,2.645,912,3.46,913,1.674,914,2.17,915,4.217,916,3.761,917,4.217,918,2.645,919,1.917,920,1.674,921,3.761,922,4.69,923,4.217,924,4.217,925,2.645,926,2.645,927,2.645,928,2.645,929,2.17,930,4.217,931,2.645,932,2.645,933,2.359,934,2.645,935,2.03,936,2.645,937,1.611,938,5.258,939,2.645,940,4.217,941,2.645,942,2.17,943,2.645,944,2.645,945,2.645]],["title/classes/Disponibilite.html",[21,0.315,946,3.536]],["body/classes/Disponibilite.html",[3,0.046,4,0.041,5,0.041,7,0.159,10,0.804,11,0.006,12,0.39,15,0.81,16,0.114,20,0.046,21,0.272,26,0.004,27,0.004,118,1.007,138,0.39,139,0.611,270,0.421,334,1.319,403,1.687,412,0.429,415,0.623,423,1.178,437,1.172,522,1.521,525,1.427,526,1.264,527,1.204,529,2.114,530,1.33,531,2.114,615,1.293,617,1.111,618,1.759,619,1.305,623,4.818,624,4.818,625,5.362,626,4.818,816,2.532,818,2.532,946,4.352,947,3.764,948,5.794,949,4.22,950,4.22,951,4.22,952,4.22,953,4.22,954,4.22,955,4.22,956,4.22,957,4.22,958,3.239]],["title/controllers/DisponibiliteController.html",[0,1.875,66,3.536]],["body/controllers/DisponibiliteController.html",[0,1.695,2,1.73,3,0.048,4,0.042,5,0.042,7,0.166,8,1.905,10,0.698,11,0.006,12,0.339,14,2.388,15,0.714,16,0.161,17,1.039,20,0.048,21,0.284,22,2.016,23,1.629,24,2.473,26,0.004,27,0.004,55,4.719,66,4.49,136,2.241,137,2.241,138,0.291,139,0.728,148,3.414,176,3.945,180,2.594,186,2.172,192,4.729,203,2.431,253,3.523,254,2.509,255,2.594,265,3.313,266,2.509,267,2.431,268,4.981,270,0.44,274,4.729,280,2.594,437,1.302,610,2.972,614,1.431,621,4.912,640,4.49,658,6.369,682,4.083,834,2.531,835,2.117,836,3.312,837,4.083,843,3.548,846,2.791,848,3.642,850,3.773,856,3.041,857,4.985,858,5.627,860,2.908,861,3.041,868,2.594,869,2.509,872,1.431,875,3.041,878,2.509,879,3.385,959,3.933,960,3.619,961,6.193,962,4.41,963,4.41,964,6.922,965,4.41,966,4.41,967,4.41,968,4.41,969,5.082,970,4.41,971,3.933,972,5.082,973,2.908,974,2.687,975,4.41,976,4.41,977,4.41,978,4.41,979,4.41,980,4.41,981,4.41,982,4.41]],["title/classes/DisponibiliteDto.html",[21,0.315,983,4.003]],["body/classes/DisponibiliteDto.html",[3,0.052,4,0.045,5,0.045,7,0.178,10,0.798,11,0.006,12,0.388,15,0.821,16,0.09,20,0.052,21,0.305,26,0.004,27,0.004,118,1.091,138,0.389,270,0.472,334,1.127,403,1.721,412,0.481,415,0.675,423,1.174,437,1.246,522,1.517,525,1.417,529,1.806,530,1.326,531,1.806,615,1.375,617,1.203,618,1.824,619,1.414,623,5.123,624,5.123,626,5.123,816,2.692,818,2.692,983,5.335,984,4.218,985,4.73,986,4.73,987,4.73,988,4.73,989,4.73,990,4.73,991,4.73]],["title/modules/DisponibiliteModule.html",[28,1.734,41,3.536]],["body/modules/DisponibiliteModule.html",[2,3.063,3,0.068,4,0.06,5,0.06,11,0.006,16,0.169,17,1.474,20,0.068,21,0.403,26,0.005,27,0.005,28,3.028,30,2.928,31,2.928,32,3.08,33,3.08,34,2.928,35,4.193,36,3.08,41,6.96,55,6.172,62,3.846,63,3.08,64,3.002,66,6.173,298,3.747,309,2.859,971,5.578,992,6.254,993,6.254,994,6.254,995,6.254]],["title/injectables/DisponibiliteService.html",[55,3.216,120,1.188]],["body/injectables/DisponibiliteService.html",[3,0.025,4,0.022,5,0.022,7,0.088,8,1.171,11,0.006,12,0.328,14,2.232,15,0.47,16,0.117,17,0.549,20,0.025,21,0.15,23,1.406,24,1.957,26,0.002,27,0.002,55,2.51,56,2.327,72,1.091,96,1.37,118,1.259,120,0.927,121,0.896,136,2.178,137,2.178,138,0.282,139,0.708,147,3.493,183,1.42,187,2.166,192,4.705,195,1.246,205,3.374,217,2.015,221,2.744,228,2.319,229,3.395,241,2.744,243,1.661,298,2.784,309,1.065,321,2.098,327,3.893,329,1.661,334,1.143,348,3.239,354,1.147,358,2.922,361,3.025,362,3.106,374,4.277,388,1.788,395,1.178,399,1.246,401,1.979,403,1.118,409,1.091,437,1.106,513,2.319,610,1.827,614,0.756,618,0.491,621,3.887,623,3.328,624,3.328,625,4.277,626,3.843,627,2.078,628,2.078,630,3.395,640,3.499,643,2.078,644,1.827,653,2.078,658,6.488,682,2.51,722,1.607,725,1.912,796,1.788,812,1.689,834,1.556,836,2.378,843,3.316,848,3.277,857,3.612,858,4.04,872,0.756,906,4.97,909,3.395,913,1.475,914,3.124,919,3.499,920,2.409,922,2.078,929,1.912,933,3.395,935,1.788,937,1.42,946,4.453,960,1.912,964,5.478,969,1.912,972,3.124,973,1.536,996,2.078,997,3.807,998,3.807,999,3.807,1000,3.807,1001,4.826,1002,3.807,1003,2.33,1004,3.807,1005,3.527,1006,2.33,1007,3.395,1008,3.807,1009,2.33,1010,3.807,1011,2.33,1012,6.142,1013,6.592,1014,2.33,1015,2.33,1016,2.078,1017,2.33,1018,2.33,1019,2.33,1020,3.395,1021,2.33,1022,3.807,1023,6.955,1024,4.826,1025,2.33,1026,2.33,1027,2.33,1028,4.826,1029,2.33,1030,2.33,1031,2.33,1032,2.33,1033,2.33,1034,2.33,1035,1.788,1036,1.689,1037,2.33,1038,2.33,1039,2.098,1040,1.788,1041,1.475,1042,1.37,1043,2.33,1044,2.33,1045,1.912,1046,1.475,1047,1.475,1048,1.788,1049,2.33,1050,2.33,1051,2.33,1052,2.33,1053,2.33,1054,2.33,1055,2.33,1056,2.33,1057,4.826,1058,2.33,1059,2.33,1060,2.33,1061,2.33,1062,2.33,1063,2.33,1064,2.33,1065,3.807,1066,2.33,1067,3.807,1068,2.33,1069,2.078,1070,2.33,1071,2.33,1072,2.078,1073,2.33,1074,2.33,1075,2.33,1076,2.33,1077,2.33,1078,2.33,1079,2.33,1080,2.33,1081,3.395,1082,3.807,1083,2.33,1084,2.33,1085,2.33,1086,2.922,1087,3.807,1088,2.33,1089,3.807,1090,3.807,1091,3.807,1092,3.807,1093,6.142,1094,2.33,1095,3.807,1096,2.33,1097,2.33,1098,2.33,1099,2.078,1100,2.33,1101,2.33,1102,3.807,1103,2.33,1104,3.807,1105,2.33,1106,2.33]],["title/classes/DossierMedical.html",[21,0.315,1107,3.744]],["body/classes/DossierMedical.html",[3,0.046,4,0.04,5,0.04,7,0.157,10,0.802,11,0.006,12,0.389,15,0.801,16,0.113,20,0.046,21,0.269,26,0.004,27,0.004,118,0.999,138,0.39,139,0.606,227,4.048,270,0.416,334,1.312,403,1.731,412,0.424,415,0.618,423,1.175,437,1.165,522,1.517,525,1.423,526,1.253,527,1.194,529,2.103,530,1.356,531,2.103,615,1.285,617,1.102,618,1.844,619,1.294,665,5.327,666,5.327,667,5.327,816,2.516,818,2.516,1107,4.569,1108,3.72,1109,6.191,1110,6.191,1111,4.171,1112,4.171,1113,4.171,1114,4.171,1115,4.171,1116,4.171,1117,4.171,1118,4.171,1119,4.171,1120,2.876]],["title/classes/DossierMedicalDto.html",[21,0.315,1121,4.003]],["body/classes/DossierMedicalDto.html",[3,0.051,4,0.045,5,0.045,7,0.175,10,0.795,11,0.006,12,0.386,15,0.813,16,0.089,20,0.051,21,0.301,26,0.004,27,0.004,118,1.081,138,0.388,270,0.466,334,1.117,403,1.758,412,0.475,415,0.669,423,1.17,437,1.238,522,1.512,525,1.412,529,1.789,530,1.358,531,1.789,615,1.365,617,1.192,618,1.898,619,1.401,665,5.662,666,5.662,667,5.662,816,2.674,818,2.674,1121,5.287,1122,4.163,1123,4.668,1124,4.668,1125,4.668,1126,4.668,1127,4.668,1128,4.668,1129,4.668]],["title/injectables/ExceptionService.html",[120,1.188,1130,3.364]],["body/injectables/ExceptionService.html",[3,0.044,4,0.039,5,0.039,7,0.152,8,1.787,11,0.006,12,0.37,14,2.532,15,0.792,16,0.129,17,0.95,20,0.044,21,0.375,22,1.842,23,1.489,24,2.517,26,0.004,27,0.004,120,1.414,121,1.549,133,2.922,136,2.655,137,2.655,138,0.344,139,0.863,147,3.364,173,5.139,177,3.093,190,3.093,217,1.683,298,2.983,327,3.354,329,1.759,361,1.985,362,3.527,426,1.648,482,2.78,634,4.31,1048,3.093,1130,4.006,1131,3.595,1132,5.809,1133,5.809,1134,5.809,1135,5.809,1136,5.809,1137,5.809,1138,4.031,1139,4.031,1140,5.809,1141,5.809,1142,4.031,1143,4.031,1144,5.809,1145,4.031,1146,8.843,1147,5.809,1148,4.031,1149,5.809,1150,4.031,1151,5.809,1152,7.564,1153,4.031,1154,4.458,1155,5.809,1156,4.031,1157,4.031,1158,4.031,1159,3.595,1160,3.595,1161,3.595,1162,3.308,1163,3.595,1164,3.595,1165,3.595,1166,3.595,1167,3.595,1168,7.452,1169,4.031,1170,4.031,1171,7.452,1172,4.031,1173,4.031,1174,4.031,1175,4.031,1176,4.031,1177,4.031,1178,4.031,1179,4.031,1180,4.031,1181,4.031,1182,4.031,1183,4.031,1184,4.031,1185,4.031]],["title/interfaces/FileStorageService.html",[466,2.869,1186,3.216]],["body/interfaces/FileStorageService.html",[3,0.062,4,0.055,5,0.078,7,0.214,8,2.263,11,0.006,12,0.356,14,2.508,15,0.815,20,0.089,26,0.005,27,0.005,136,2.552,137,2.552,138,0.331,139,0.829,147,2.327,407,6.3,437,0.955,445,6.037,446,6.255,447,6.255,452,4.671,453,5.036,454,7.012,458,5.645,461,4.671,466,4.326,467,3.925,495,3.753,1186,4.85,1187,4.369,1188,4.369,1189,6.037,1190,5.692,1191,5.077,1192,5.692,1193,4.482,1194,5.692,1195,4.369,1196,4.671]],["title/interfaces/FileUploadResult.html",[467,3.364,1186,3.216]],["body/interfaces/FileUploadResult.html",[3,0.07,4,0.062,5,0.076,7,0.242,11,0.006,15,0.82,20,0.094,26,0.005,27,0.005,138,0.323,147,2.633,407,5.951,415,0.825,437,1.512,446,4.943,447,4.943,453,4.384,454,6.104,458,4.943,466,3.788,467,5.485,495,5.941,1186,5.244,1187,4.943,1188,4.943,1189,5.286,1195,4.943,1196,5.286]],["title/classes/FindPrivilegeDto.html",[21,0.315,1197,4.003]],["body/classes/FindPrivilegeDto.html",[3,0.078,4,0.068,5,0.068,7,0.268,11,0.006,12,0.311,15,0.712,20,0.078,21,0.459,26,0.005,27,0.005,138,0.289,139,0.86,412,0.725,415,0.877,433,4.508,547,2.462,1197,6.937,1198,7.539,1199,7.123]],["title/classes/FindUtilisateurDto.html",[21,0.315,1200,4.003]],["body/classes/FindUtilisateurDto.html",[3,0.042,4,0.037,5,0.037,7,0.144,10,0.696,11,0.006,12,0.338,15,0.721,16,0.106,20,0.042,21,0.361,26,0.004,27,0.004,138,0.314,139,0.903,163,3.41,192,4.926,215,3.881,217,3.575,226,2.909,233,4.056,243,2.443,270,0.382,283,2.109,334,0.97,339,4.141,412,0.39,415,0.581,418,5.104,423,1.05,426,1.566,427,3.624,434,4.562,437,0.939,441,5.018,505,4.593,526,1.868,527,1.553,579,2.424,581,3.143,583,2.939,584,4.058,585,3.679,589,3.143,590,2.777,605,4.202,610,4.259,634,5.116,655,3.86,722,5.903,724,6.206,725,6.635,726,6.635,727,2.909,777,5.284,778,4.186,779,5.284,807,4.593,808,4.593,1200,4.593,1201,7.21,1202,5.597,1203,8.873,1204,3.83,1205,3.143,1206,3.143,1207,3.83,1208,3.83,1209,5.597,1210,5.597,1211,3.83,1212,6.615,1213,7.276,1214,3.83,1215,3.83,1216,3.83]],["title/injectables/JwtAuthGuard.html",[120,1.188,186,2.402]],["body/injectables/JwtAuthGuard.html",[3,0.092,4,0.051,5,0.051,7,0.201,8,2.174,11,0.006,12,0.345,14,2.174,16,0.15,17,1.262,20,0.058,21,0.345,22,2.447,23,1.978,24,2.252,26,0.004,27,0.004,120,1.72,121,2.057,132,6.904,136,2.477,137,2.477,138,0.287,139,0.805,140,4.108,186,3.48,196,4.393,198,3.881,199,3.881,265,4.5,298,3.596,306,3.881,309,2.447,312,3.691,321,2.95,329,2.336,345,4.02,361,2.636,362,2.39,385,5.799,722,3.691,1035,4.108,1039,4.821,1217,7.503,1218,4.393,1219,4.306,1220,6.302,1221,7.066,1222,6.302,1223,5.353,1224,4.774,1225,7.066,1226,5.353,1227,6.302,1228,5.353,1229,4.774,1230,4.393,1231,5.353,1232,5.353,1233,4.774,1234,3.387,1235,4.393]],["title/injectables/JwtStrategy.html",[120,1.188,297,3.536]],["body/injectables/JwtStrategy.html",[3,0.054,4,0.047,5,0.047,7,0.186,8,2.059,11,0.006,12,0.292,14,1.519,16,0.167,17,1.163,20,0.054,21,0.318,23,2.473,24,1.573,26,0.004,27,0.004,56,3.4,72,2.311,79,3.578,118,1.123,120,1.629,121,1.897,136,2.096,137,2.096,138,0.272,139,0.681,147,3.104,176,2.721,195,2.64,205,3.241,221,2.431,230,2.566,242,4.402,264,3.124,296,5.918,297,4.852,306,3.578,308,7.366,310,4.05,315,4.402,327,3.296,329,2.921,345,2.808,348,2.988,350,5.828,354,2.431,361,3.296,362,2.988,363,4.402,364,3.254,390,4.402,399,2.64,401,3.479,437,0.828,1039,4.186,1040,3.788,1042,2.903,1219,4.078,1230,4.05,1236,4.402,1237,6.693,1238,6.693,1239,4.936,1240,6.693,1241,4.936,1242,4.936,1243,4.936,1244,4.936,1245,4.402,1246,4.936,1247,4.936,1248,4.936,1249,4.936,1250,4.936,1251,6.693,1252,4.936,1253,4.936,1254,4.402,1255,4.936,1256,4.936]],["title/classes/Log.html",[21,0.315,86,2.972]],["body/classes/Log.html",[3,0.046,4,0.04,5,0.04,7,0.157,10,0.802,11,0.006,12,0.389,15,0.801,16,0.113,20,0.046,21,0.269,26,0.004,27,0.004,86,3.627,118,0.999,138,0.39,139,0.606,159,4.23,227,4.43,270,0.416,334,1.312,403,1.731,412,0.424,415,0.618,423,1.175,437,1.165,522,1.517,525,1.423,526,1.253,527,1.194,529,2.103,530,1.356,531,2.103,615,1.285,617,1.102,618,1.844,619,1.294,673,3.826,816,2.516,818,2.516,1120,2.876,1257,3.72,1258,5.697,1259,5.033,1260,4.171,1261,4.171,1262,4.171,1263,4.171,1264,4.171,1265,4.171,1266,4.171,1267,4.171,1268,4.171]],["title/controllers/LogController.html",[0,1.875,1269,3.744]],["body/controllers/LogController.html",[0,1.951,2,1.99,3,0.055,4,0.049,5,0.049,7,0.191,8,2.098,10,0.613,11,0.006,12,0.298,14,2.098,15,0.649,16,0.156,17,1.196,20,0.055,21,0.327,22,2.32,23,1.875,24,2.173,26,0.004,27,0.004,86,4.156,136,2.135,137,2.135,138,0.206,139,0.694,148,3.759,176,4.736,180,2.985,186,2.499,203,2.798,205,3.776,217,2.848,221,3.359,226,3.545,230,2.638,255,2.985,265,3.648,266,2.887,267,2.798,268,4.693,270,0.506,274,4.156,280,2.985,348,3.045,437,1.382,610,3.274,727,4.281,836,2.911,837,4.497,843,3.117,856,3.5,857,4.011,860,3.346,861,3.5,869,2.887,878,2.887,879,3.895,974,3.092,1007,7.346,1269,5.234,1270,4.526,1271,6.322,1272,4.526,1273,4.156,1274,4.316,1275,5.075,1276,5.075,1277,5.079,1278,4.526,1279,5.075,1280,3.212,1281,5.075,1282,4.526,1283,5.075,1284,5.075]],["title/classes/LogDto.html",[21,0.315,1285,4.003]],["body/classes/LogDto.html",[3,0.051,4,0.045,5,0.045,7,0.175,10,0.795,11,0.006,12,0.386,15,0.813,16,0.089,20,0.051,21,0.301,26,0.004,27,0.004,118,1.081,138,0.388,159,4.495,270,0.466,334,1.117,403,1.758,412,0.475,415,0.669,423,1.17,437,1.238,522,1.512,525,1.412,529,1.789,530,1.358,531,1.789,615,1.365,617,1.192,618,1.898,619,1.401,673,4.067,816,2.674,818,2.674,1258,6.054,1285,5.287,1286,4.163,1287,4.668,1288,4.668,1289,4.668,1290,4.668,1291,4.668,1292,4.668,1293,4.668]],["title/injectables/LogListener.html",[85,3.364,120,1.188]],["body/injectables/LogListener.html",[3,0.064,4,0.056,5,0.056,7,0.22,8,2.307,10,0.527,11,0.006,12,0.327,14,1.804,15,0.632,16,0.157,17,1.382,20,0.064,21,0.378,22,2.68,23,2.166,26,0.005,27,0.005,82,4.499,83,4.499,85,5.17,87,6.343,120,1.825,121,2.253,136,2.347,137,2.347,138,0.354,139,0.763,159,3.572,205,3.527,329,2.559,334,1.016,348,2.618,350,4.499,673,3.232,1259,4.25,1277,6.071,1294,7.371,1295,5.229,1296,7.497,1297,5.863,1298,5.863,1299,7.497,1300,6.686,1301,7.497,1302,5.863,1303,5.863,1304,5.863,1305,4.811,1306,5.863]],["title/modules/LogModule.html",[28,1.734,42,3.536]],["body/modules/LogModule.html",[2,2.827,3,0.06,4,0.053,5,0.053,11,0.006,16,0.172,17,1.3,20,0.06,21,0.356,26,0.005,27,0.005,28,2.855,30,2.583,31,2.583,32,2.717,33,2.717,34,2.583,35,3.954,36,3.954,42,7.056,45,6.247,62,3.55,63,2.717,64,2.648,70,4.239,73,4.921,85,6.247,86,3.362,87,4.234,88,4.921,215,2.648,298,3.626,309,2.522,1269,6.161,1277,6.383,1278,4.921,1307,4.921,1308,4.921,1309,5.517,1310,4.921,1311,5.517,1312,5.517,1313,4.921,1314,4.921]],["title/injectables/LogService.html",[120,1.188,1277,3.216]],["body/injectables/LogService.html",[3,0.041,4,0.036,5,0.036,7,0.142,8,1.704,11,0.006,12,0.336,14,2.224,15,0.467,16,0.125,17,0.89,20,0.041,21,0.244,23,2.047,24,1.765,26,0.003,27,0.003,56,3.018,72,1.768,86,4.689,120,1.349,121,1.451,136,2.41,137,2.41,138,0.338,139,0.783,147,2.264,158,3.099,159,3.375,177,4.252,181,2.39,183,2.301,192,2.301,195,2.02,205,3.713,215,3.149,219,3.099,221,2.728,226,2.88,298,3.328,309,1.726,321,2.081,322,3.368,327,3.79,329,2.418,334,1.253,345,2.148,348,2.93,350,2.898,361,3.231,362,2.93,364,2.49,373,2.898,399,2.02,401,3.41,409,1.768,437,1.101,513,2.301,610,2.659,615,1.025,617,1.025,673,3.054,722,2.604,727,2.88,740,1.86,812,2.738,836,2.364,837,3.653,843,2.532,848,2.221,860,3.653,913,2.39,937,2.301,1020,3.368,1035,2.898,1036,2.738,1039,4.434,1046,2.39,1047,2.39,1081,3.368,1233,3.368,1234,2.39,1235,3.099,1254,3.368,1258,3.099,1259,4.016,1271,5.384,1273,2.301,1274,2.39,1277,3.653,1300,4.941,1305,3.099,1313,3.368,1314,3.368,1315,3.368,1316,5.54,1317,3.82,1318,3.776,1319,5.54,1320,3.776,1321,5.54,1322,3.776,1323,3.776,1324,5.54,1325,3.776,1326,3.776,1327,3.776,1328,3.776,1329,3.776,1330,3.776,1331,3.776,1332,3.776,1333,3.776,1334,3.776,1335,3.776,1336,3.776,1337,3.776,1338,3.776,1339,3.776,1340,3.368,1341,3.776,1342,3.776,1343,3.776,1344,2.604,1345,3.776,1346,4.546,1347,3.776,1348,5.54,1349,3.776,1350,3.776,1351,3.776,1352,3.776,1353,3.776,1354,3.776,1355,3.776,1356,2.301]],["title/classes/MedecinSousService.html",[21,0.315,948,3.216]],["body/classes/MedecinSousService.html",[3,0.041,4,0.036,5,0.036,7,0.14,10,0.792,11,0.006,12,0.385,15,0.674,16,0.145,20,0.041,21,0.239,26,0.003,27,0.003,96,3.82,118,1.341,138,0.387,139,0.863,227,3.864,270,0.37,334,1.386,403,1.646,412,0.378,415,0.568,423,1.16,437,1.09,522,1.498,525,1.406,526,1.786,527,1.702,529,2.22,530,1.326,531,2.22,615,1.202,617,1.012,618,1.683,619,1.189,682,4.282,683,4.11,816,2.354,818,2.354,827,4.536,946,5.54,948,3.606,960,5.33,1086,4.985,1120,2.559,1357,3.31,1358,5.169,1359,3.711,1360,3.711,1361,3.711,1362,3.711,1363,3.711,1364,3.711,1365,3.711,1366,4.836,1367,3.711,1368,3.711,1369,3.711,1370,3.046,1371,3.711,1372,2.848]],["title/controllers/MedecinSousServiceController.html",[0,1.875,1373,3.744]],["body/controllers/MedecinSousServiceController.html",[0,1.201,2,1.225,3,0.034,4,0.03,5,0.03,7,0.117,8,1.478,10,0.638,11,0.006,12,0.31,14,2.182,15,0.696,16,0.142,17,0.736,20,0.034,21,0.201,22,1.428,23,1.154,24,2.26,26,0.003,27,0.003,92,5.049,96,3.865,97,5.43,136,2.058,137,2.058,138,0.267,139,0.669,148,3.622,176,4.552,180,3.443,186,1.539,203,1.722,226,4.383,230,3.687,232,6.18,233,3.854,241,3.236,253,2.733,254,2.733,255,1.837,265,2.57,266,1.777,267,1.722,268,4.563,269,5.748,270,0.312,274,4.322,275,5.444,280,4.172,395,3.323,437,1.309,610,2.306,614,1.014,640,6.579,644,2.306,677,4.333,679,5.165,740,4.56,834,1.964,835,2.306,836,2.805,838,2.25,843,2.196,846,1.977,850,4.563,853,2.826,855,2.826,863,1.463,868,1.837,869,1.777,872,1.014,875,2.155,878,1.777,881,1.904,882,1.977,887,1.904,937,2.927,974,1.904,1045,3.943,1273,2.927,1274,3.04,1280,4.489,1356,2.927,1373,3.687,1374,2.787,1375,2.497,1376,2.497,1377,3.124,1378,7.093,1379,4.804,1380,4.804,1381,3.687,1382,3.943,1383,3.124,1384,3.124,1385,3.687,1386,3.124,1387,3.124,1388,1.624,1389,3.124,1390,4.804,1391,3.124,1392,3.124,1393,1.624,1394,3.124,1395,3.124,1396,2.826,1397,3.124,1398,4.333,1399,3.124,1400,3.943,1401,2.927,1402,3.124,1403,3.313,1404,2.787,1405,3.124,1406,3.168,1407,3.124,1408,2.787,1409,2.787,1410,2.06,1411,2.787,1412,2.787,1413,2.06,1414,2.787]],["title/classes/MedecinSousServiceDto.html",[21,0.315,1415,4.003]],["body/classes/MedecinSousServiceDto.html",[3,0.059,4,0.052,5,0.052,7,0.203,10,0.76,11,0.006,12,0.369,15,0.759,16,0.103,20,0.059,21,0.349,26,0.004,27,0.004,118,1.193,138,0.378,270,0.539,334,1.233,403,1.757,412,0.55,415,0.738,423,1.14,437,1.334,522,1.472,525,1.348,529,1.976,530,1.367,531,1.976,615,1.471,617,1.316,618,1.897,619,1.547,816,2.881,818,2.881,1415,5.837,1416,4.822,1417,5.406,1418,5.406,1419,5.406,1420,5.406]],["title/injectables/MedecinSousServiceService.html",[120,1.188,1403,3.364]],["body/injectables/MedecinSousServiceService.html",[3,0.025,4,0.022,5,0.022,7,0.084,8,1.137,11,0.006,12,0.283,14,1.854,16,0.114,17,0.53,20,0.025,21,0.145,23,1.365,24,1.92,26,0.002,27,0.002,56,2.277,72,1.052,92,4.707,96,4.027,97,4.965,118,1.2,120,0.9,121,0.864,136,1.887,137,1.887,138,0.245,139,0.613,147,3.263,163,3.671,181,1.422,187,1.278,191,4.272,195,2.518,198,2.679,199,2.679,205,3.573,215,2.259,221,2.967,226,3.368,241,2.318,298,2.741,309,1.027,327,1.82,329,1.613,334,1.285,345,4.215,348,3.629,354,2.685,361,3.931,362,3.629,364,3.103,383,1.322,392,3.246,395,2.38,399,1.202,401,1.921,403,0.409,409,3.034,437,1.437,513,2.252,520,2.004,610,1.079,614,0.729,615,1.199,617,1.115,640,6.144,644,1.774,677,3.595,679,4.722,682,2.437,683,2.339,721,4.198,727,2.447,740,4.219,834,1.511,835,1.774,836,2.327,838,1.73,846,2.339,850,3.671,853,1.322,855,2.174,857,1.322,863,1.73,872,0.729,913,3.813,919,3.412,937,1.369,942,1.844,969,3.863,1005,4.689,1039,3.572,1040,4.185,1041,4.1,1042,3.811,1045,3.033,1072,2.004,1099,2.004,1206,1.844,1273,2.252,1356,1.369,1358,3.322,1375,1.921,1376,1.921,1382,1.844,1388,1.921,1393,1.921,1396,3.207,1398,3.595,1400,1.844,1401,1.369,1403,2.549,1406,1.482,1421,2.004,1422,2.247,1423,2.247,1424,2.247,1425,2.247,1426,2.247,1427,2.247,1428,2.679,1429,1.844,1430,5.453,1431,4.475,1432,4.475,1433,4.707,1434,4.707,1435,5.453,1436,2.247,1437,4.198,1438,2.247,1439,2.004,1440,2.247,1441,2.247,1442,2.247,1443,5.317,1444,5.453,1445,2.247,1446,2.247,1447,1.725,1448,2.247,1449,1.844,1450,2.247,1451,3.696,1452,3.696,1453,3.696,1454,3.696,1455,1.725,1456,3.696,1457,1.725]],["title/modules/MedecinSousserviceModule.html",[28,1.734,43,3.536]],["body/modules/MedecinSousserviceModule.html",[2,3.108,3,0.07,4,0.062,5,0.062,11,0.006,16,0.163,17,1.509,20,0.07,21,0.413,26,0.005,27,0.005,28,3.06,30,2.998,31,2.998,32,3.153,33,3.153,34,2.998,35,4.238,36,3.153,43,6.826,62,3.902,63,3.153,64,3.073,96,4.66,97,4.642,679,4.416,1373,6.605,1403,6.493,1404,5.711,1458,5.711,1459,5.711,1460,6.403,1461,6.403]],["title/classes/ModePaiement.html",[21,0.315,1462,3.744]],["body/classes/ModePaiement.html",[3,0.049,4,0.043,5,0.043,7,0.169,10,0.787,11,0.006,12,0.382,15,0.801,16,0.119,20,0.049,21,0.29,26,0.004,27,0.004,118,1.431,138,0.386,139,0.638,270,0.448,334,1.088,403,1.706,412,0.457,415,0.651,423,1.159,437,1.213,522,1.498,525,1.397,526,1.321,527,1.259,529,1.743,530,1.31,531,1.743,547,1.975,615,1.338,617,1.448,618,1.795,619,1.701,688,4.766,700,5.016,816,2.62,818,2.62,827,3.97,1462,4.815,1463,4.007,1464,7.229,1465,4.493,1466,4.493,1467,4.493,1468,4.493,1469,4.493,1470,4.493,1471,4.493,1472,4.007]],["title/controllers/ModePaiementController.html",[0,1.875,1473,3.744]],["body/controllers/ModePaiementController.html",[0,1.532,2,1.563,3,0.044,4,0.038,5,0.085,7,0.15,8,1.773,10,0.707,11,0.006,12,0.343,14,2.42,15,0.743,16,0.16,17,0.939,20,0.044,21,0.257,22,1.822,23,1.473,24,2.506,26,0.004,27,0.004,112,4.692,113,5.943,136,2.321,137,2.321,138,0.319,139,0.754,148,2.197,176,3.176,179,2.749,180,2.344,186,1.963,198,2.89,199,2.89,203,2.197,217,1.664,230,2.072,253,3.278,254,3.85,255,2.344,265,3.082,266,2.267,267,2.197,270,0.398,280,4.625,409,3.169,437,1.375,453,4.518,614,1.293,687,5.405,692,5.653,700,4.123,834,2.355,835,1.913,836,3.164,838,2.698,850,5.15,863,1.866,868,2.344,869,2.267,872,1.293,878,2.267,881,2.429,882,2.522,887,2.429,974,2.429,1193,3.511,1280,2.522,1375,2.995,1376,2.995,1388,2.072,1393,2.072,1410,2.628,1413,2.628,1473,4.422,1474,3.555,1475,3.271,1476,3.271,1477,3.271,1478,3.986,1479,3.986,1480,3.986,1481,3.986,1482,3.986,1483,3.986,1484,3.986,1485,4.888,1486,3.986,1487,3.986,1488,5.194,1489,3.059,1490,3.059,1491,2.89,1492,4.667,1493,3.555,1494,5.139,1495,2.89,1496,4.729,1497,3.986,1498,3.986,1499,5.762,1500,4.422,1501,3.271,1502,3.986,1503,3.986,1504,3.986,1505,3.986,1506,3.986]],["title/classes/ModePaiementDto.html",[21,0.315,1507,4.003]],["body/classes/ModePaiementDto.html",[3,0.053,4,0.047,5,0.047,7,0.183,10,0.786,11,0.006,12,0.381,15,0.81,16,0.092,20,0.053,21,0.313,26,0.004,27,0.004,118,1.357,138,0.385,270,0.484,334,1.148,403,1.728,412,0.494,415,0.687,423,1.161,437,1.264,522,1.5,525,1.394,529,1.839,530,1.335,531,1.839,547,2.057,615,1.394,617,1.497,618,1.839,619,1.759,688,4.966,816,2.73,818,2.73,1507,5.434,1508,4.333,1509,4.858,1510,4.858,1511,4.858,1512,4.858,1513,4.858,1514,4.858]],["title/modules/ModePaiementModule.html",[28,1.734,44,3.536]],["body/modules/ModePaiementModule.html",[2,3.013,3,0.067,4,0.059,5,0.059,11,0.006,16,0.168,17,1.437,20,0.067,21,0.393,26,0.005,27,0.005,28,2.992,30,2.854,31,2.854,32,3.001,33,3.001,34,2.854,35,4.144,36,3.784,44,6.925,51,5.667,62,3.784,63,3.001,64,2.925,70,4.519,89,4.419,112,4.863,113,4.419,692,4.203,1473,6.458,1492,6.414,1493,5.436,1515,5.436,1516,6.095,1517,5.436,1518,6.095,1519,6.095]],["title/injectables/ModePaiementService.html",[120,1.188,1492,3.364]],["body/injectables/ModePaiementService.html",[3,0.032,4,0.028,5,0.078,7,0.111,8,1.414,11,0.006,12,0.334,14,2.251,15,0.248,16,0.139,17,0.695,20,0.032,21,0.19,23,2.085,24,2.201,26,0.003,27,0.003,56,2.661,60,3.211,72,1.381,112,5.252,113,5.728,118,0.495,120,1.119,121,1.133,136,2.291,137,2.291,138,0.297,139,0.744,147,3.23,187,1.678,198,2.138,199,2.138,205,3.89,217,3.19,221,3.401,241,1.452,298,3.058,309,1.348,312,2.034,327,3.603,329,2.005,334,1.407,345,1.678,348,3.705,354,1.452,361,2.779,362,2.845,383,1.734,395,1.491,399,1.577,401,2.388,403,0.537,409,2.643,437,1.325,453,4.032,466,3.748,513,1.797,547,1.255,613,2.42,614,0.957,615,1.179,617,1.044,644,1.415,673,1.626,687,4.201,688,4.823,692,5.448,700,4.946,727,1.533,834,1.878,836,2.72,838,2.151,843,1.348,846,2.908,850,4.208,863,2.151,872,0.957,920,1.866,1005,4.371,1039,2.532,1041,1.866,1042,1.734,1046,1.866,1047,1.866,1193,3.439,1234,1.866,1273,1.797,1317,3.168,1344,2.034,1356,1.797,1375,2.388,1376,2.388,1388,2.388,1393,2.388,1396,1.734,1401,1.797,1443,3.77,1447,2.263,1449,2.42,1455,2.263,1457,2.263,1485,4.201,1492,3.168,1494,4.098,1520,2.63,1521,2.949,1522,2.949,1523,2.949,1524,2.949,1525,2.949,1526,2.949,1527,3.331,1528,2.949,1529,2.034,1530,2.263,1531,2.263,1532,2.263,1533,2.034,1534,2.034,1535,2.034,1536,2.138,1537,2.138,1538,2.949,1539,5.034,1540,4.594,1541,4.594,1542,4.594,1543,3.526,1544,3.77,1545,4.594,1546,2.949,1547,1.797,1548,4.594,1549,2.949,1550,2.949,1551,2.949,1552,2.42,1553,2.949,1554,4.594]],["title/injectables/OptionalJwtAuthGuard.html",[120,1.188,1555,3.744]],["body/injectables/OptionalJwtAuthGuard.html",[3,0.097,4,0.059,5,0.059,7,0.23,8,2.368,11,0.006,12,0.267,14,1.881,16,0.146,17,1.441,20,0.067,21,0.394,24,1.948,26,0.005,27,0.005,120,1.874,121,2.349,132,7.259,136,1.914,137,1.914,138,0.248,139,0.622,140,6.467,158,5.016,181,3.868,196,5.016,264,4.871,306,4.431,385,5.016,482,4.215,617,1.131,912,5.016,1039,5.025,1218,5.016,1219,4.69,1220,6.865,1222,6.865,1224,5.451,1227,6.865,1229,5.451,1555,5.908,1556,6.865,1557,6.112,1558,6.112,1559,6.112]],["title/classes/Ordonnance.html",[21,0.315,1560,3.744]],["body/classes/Ordonnance.html",[3,0.045,4,0.039,5,0.039,7,0.154,10,0.799,11,0.006,12,0.388,15,0.76,16,0.112,20,0.045,21,0.265,26,0.004,27,0.004,96,4.048,118,0.988,138,0.389,139,0.765,227,4.492,270,0.41,334,1.436,403,1.678,412,0.418,415,0.611,423,1.171,437,1.155,504,4.99,522,1.512,525,1.418,526,1.583,527,1.508,529,2.3,530,1.352,531,2.3,615,1.274,617,1.09,618,1.744,619,1.28,682,4.538,816,2.494,818,2.494,1109,6.138,1110,6.138,1120,2.833,1560,4.519,1561,3.663,1562,4.107,1563,4.107,1564,4.107,1565,4.107,1566,4.107,1567,4.107,1568,4.107,1569,4.107,1570,4.107]],["title/classes/OrdonnanceDto.html",[21,0.315,1571,4.003]],["body/classes/OrdonnanceDto.html",[3,0.056,4,0.05,5,0.05,7,0.194,10,0.777,11,0.006,12,0.377,15,0.795,16,0.098,20,0.056,21,0.333,26,0.004,27,0.004,118,1.157,138,0.383,270,0.515,334,1.196,403,1.745,412,0.525,415,0.716,423,1.155,437,1.303,504,5.632,522,1.492,525,1.379,529,1.915,530,1.353,531,1.915,615,1.437,617,1.276,618,1.872,619,1.5,816,2.815,818,2.815,1571,5.66,1572,4.602,1573,5.16,1574,5.16,1575,5.16,1576,5.16,1577,5.16]],["title/classes/Paiement.html",[21,0.315,700,2.972]],["body/classes/Paiement.html",[3,0.041,4,0.036,5,0.036,7,0.142,10,0.807,11,0.006,12,0.392,15,0.779,16,0.125,20,0.041,21,0.244,26,0.003,27,0.003,118,0.931,138,0.391,139,0.736,270,0.377,334,1.534,403,1.652,412,0.385,415,0.576,423,1.178,437,1.102,522,1.522,525,1.432,526,1.523,527,1.451,529,2.236,530,1.356,531,2.236,555,5.858,615,1.215,617,1.026,618,1.695,619,1.206,700,3.38,709,5.04,710,3.863,711,5.04,714,3.51,816,2.38,818,2.38,1366,5.398,1372,2.903,1462,6.547,1578,3.374,1579,6.568,1580,3.783,1581,3.783,1582,3.783,1583,3.783,1584,3.783,1585,3.783,1586,3.783,1587,3.783,1588,3.783,1589,3.783,1590,3.783,1591,3.783]],["title/classes/PaiementDto.html",[21,0.315,1592,4.003]],["body/classes/PaiementDto.html",[3,0.051,4,0.045,5,0.045,7,0.176,10,0.796,11,0.006,12,0.387,15,0.806,16,0.089,20,0.051,21,0.302,26,0.004,27,0.004,118,1.084,138,0.388,270,0.468,334,1.498,403,1.718,412,0.477,415,0.671,423,1.172,437,1.241,522,1.514,525,1.413,529,1.795,530,1.359,531,1.795,615,1.368,617,1.196,618,1.819,619,1.405,709,5.675,710,4.349,711,5.675,714,4.09,816,2.68,818,2.68,1592,5.303,1593,4.182,1594,4.689,1595,4.689,1596,4.689,1597,4.689,1598,4.689,1599,4.689,1600,4.689]],["title/modules/PrismaModule.html",[28,1.734,45,3.364]],["body/modules/PrismaModule.html",[3,0.07,4,0.061,5,0.061,11,0.006,16,0.15,17,1.505,20,0.07,21,0.412,26,0.005,27,0.005,28,3.056,30,2.989,31,2.989,32,3.144,33,3.144,34,2.989,35,4.232,36,4.232,45,6.578,56,4.124,62,3.895,63,3.144,64,3.064,70,3.754,1601,5.694,1602,5.694,1603,6.384,1604,6.384,1605,6.07,1606,6.384]],["title/injectables/PrismaService.html",[56,2.037,120,1.188]],["body/injectables/PrismaService.html",[3,0.06,4,0.053,5,0.053,7,0.208,8,2.222,11,0.006,12,0.351,14,2.222,16,0.162,17,1.304,20,0.06,21,0.357,22,2.528,26,0.005,27,0.005,56,3.015,82,4.245,83,4.245,120,1.758,121,2.126,136,1.732,137,1.732,138,0.225,139,0.563,146,4.01,205,3.869,329,2.414,348,3.224,376,4.01,384,4.01,480,5.235,1036,4.01,1219,4.399,1230,4.539,1607,4.933,1608,8.038,1609,9.066,1610,9.066,1611,5.531,1612,7.6,1613,5.531,1614,6.44,1615,5.531,1616,5.531,1617,4.933,1618,4.539,1619,5.531,1620,5.531,1621,5.531,1622,7.22,1623,5.531,1624,7.22,1625,5.531,1626,5.531,1627,5.531,1628,5.531,1629,5.531,1630,5.531,1631,5.531]],["title/classes/Privilege.html",[21,0.315,354,2.402]],["body/classes/Privilege.html",[3,0.052,4,0.046,5,0.046,7,0.179,10,0.78,11,0.006,12,0.379,15,0.783,16,0.124,20,0.052,21,0.306,26,0.004,27,0.004,118,1.344,138,0.384,139,0.663,227,4.247,270,0.474,334,1.131,354,3.211,403,1.722,412,0.483,415,0.677,423,1.154,437,1.249,522,1.491,525,1.385,526,1.373,527,1.308,529,1.811,530,1.328,531,1.811,547,2.034,615,1.378,617,1.207,618,1.827,619,1.418,816,2.698,818,2.698,827,4.127,1120,3.276,1632,4.237,1633,6.11,1634,4.751,1635,4.751,1636,4.751,1637,4.751,1638,4.751,1639,4.751]],["title/classes/Privilege-1.html",[21,0.263,283,1.538,354,2.01]],["body/classes/Privilege-1.html",[3,0.082,4,0.073,5,0.073,11,0.006,20,0.082,21,0.487,26,0.005,27,0.005,354,4.306,412,0.768,1640,6.731]],["title/controllers/PrivilegeController.html",[0,1.875,1641,3.744]],["body/controllers/PrivilegeController.html",[0,1.345,2,1.373,3,0.038,4,0.034,5,0.034,7,0.132,8,1.611,10,0.671,11,0.006,12,0.326,14,2.294,15,0.719,16,0.149,17,0.825,20,0.038,21,0.226,22,1.6,23,1.293,24,2.376,26,0.003,27,0.003,136,2.335,137,2.335,138,0.283,139,0.759,148,4.11,176,5.023,180,4.096,184,3.122,186,1.724,195,2.801,203,1.929,226,4.335,230,2.722,233,3.183,241,2.579,253,2.979,254,2.979,255,2.058,265,2.801,266,1.991,267,1.929,268,4.768,269,4.815,270,0.349,274,4.543,275,4.019,280,2.058,321,1.929,395,1.77,437,1.399,441,5.988,610,2.514,614,1.135,644,2.514,717,4.952,727,4.514,834,2.141,835,1.68,836,2.235,838,2.452,843,3.183,847,2.872,848,3.08,852,2.686,853,3.08,856,2.414,857,3.08,858,3.797,861,2.414,863,1.639,865,2.872,866,3.611,868,2.058,869,1.991,872,1.135,875,2.414,878,1.991,881,2.133,882,2.215,887,2.133,974,2.133,1272,3.122,1274,3.314,1280,2.215,1282,3.122,1375,2.722,1376,2.722,1381,4.019,1385,4.019,1388,1.819,1393,1.819,1410,2.308,1413,2.308,1533,3.611,1547,3.191,1641,4.019,1642,3.122,1643,3.122,1644,3.122,1645,3.5,1646,3.5,1647,4.67,1648,3.5,1649,4.298,1650,6.998,1651,3.5,1652,3.5,1653,3.5,1654,5.499,1655,3.5,1656,4.327,1657,3.122,1658,3.797,1659,3.5,1660,2.872,1661,3.5,1662,5.237,1663,3.5,1664,3.5,1665,3.5,1666,3.5,1667,3.5,1668,3.5,1669,3.5]],["title/classes/PrivilegeDto.html",[21,0.315,1670,4.003]],["body/classes/PrivilegeDto.html",[3,0.056,4,0.05,5,0.05,7,0.194,10,0.777,11,0.006,12,0.377,15,0.795,16,0.098,20,0.056,21,0.333,26,0.004,27,0.004,118,1.157,138,0.383,270,0.515,334,1.196,403,1.745,412,0.525,415,0.716,423,1.155,437,1.303,522,1.492,525,1.379,529,1.915,530,1.353,531,1.915,547,2.122,615,1.437,617,1.276,618,1.872,619,1.5,816,2.815,818,2.815,1670,5.66,1671,4.602,1672,5.16,1673,5.16,1674,5.16,1675,5.16,1676,5.16]],["title/modules/PrivilegeModule.html",[28,1.734,46,3.536]],["body/modules/PrivilegeModule.html",[2,3.136,3,0.071,4,0.062,5,0.062,11,0.006,16,0.164,17,1.532,20,0.071,21,0.419,26,0.005,27,0.005,28,3.081,30,3.043,31,3.043,32,3.201,33,3.201,34,3.043,35,4.266,36,3.201,46,6.851,62,3.938,63,3.201,64,3.12,1641,6.649,1656,6.517,1657,5.797,1677,5.797,1678,5.797,1679,6.499,1680,6.499]],["title/injectables/PrivilegeService.html",[120,1.188,1656,3.364]],["body/injectables/PrivilegeService.html",[3,0.03,4,0.026,5,0.026,7,0.102,8,1.327,11,0.006,12,0.324,14,2.176,16,0.126,17,0.641,20,0.03,21,0.176,23,1.594,24,2.118,26,0.003,27,0.003,56,2.546,72,1.274,118,0.457,120,1.05,121,1.046,136,2.32,137,2.32,138,0.301,139,0.754,147,3.235,163,3.265,187,1.548,191,3.533,205,3.835,215,2.071,217,1.137,221,3.273,241,2.639,243,1.883,298,2.966,309,1.244,321,1.5,327,3.273,329,1.883,334,1.372,345,1.548,348,3.907,354,3.785,361,3.482,362,3.309,383,1.601,392,3.695,395,2.71,399,1.456,401,2.242,403,0.496,409,2.509,437,1.433,441,5.458,513,1.658,547,1.178,614,0.883,615,1.23,617,1.128,644,1.306,673,2.378,699,2.378,717,4.475,722,3.695,724,3.127,727,3.676,812,5.127,834,1.763,835,1.306,836,1.841,838,2.02,843,1.244,855,1.601,863,2.02,872,0.883,913,3.858,937,1.658,1005,5.537,1035,2.089,1036,1.973,1039,2.378,1041,1.722,1042,1.601,1046,1.722,1047,1.722,1048,3.311,1234,2.73,1273,1.658,1317,2.975,1344,1.877,1356,1.658,1375,2.242,1376,2.242,1388,2.242,1393,2.242,1396,3.586,1401,1.658,1431,4.398,1432,4.398,1527,3.127,1529,3.695,1534,1.877,1535,1.877,1536,3.127,1537,4.819,1547,1.658,1643,2.427,1644,3.847,1649,2.234,1654,5.067,1656,2.975,1658,3.127,1681,2.427,1682,2.722,1683,2.722,1684,4.314,1685,2.722,1686,2.722,1687,2.722,1688,2.722,1689,2.722,1690,2.722,1691,2.722,1692,6.097,1693,3.847,1694,2.722,1695,3.847,1696,4.314,1697,3.847,1698,2.722,1699,2.722,1700,2.722,1701,2.722,1702,4.779,1703,2.722,1704,4.314,1705,2.722,1706,2.722,1707,4.314,1708,2.722]],["title/classes/Reservation.html",[21,0.315,1366,3.087]],["body/classes/Reservation.html",[3,0.037,4,0.032,5,0.032,7,0.126,10,0.805,11,0.006,12,0.391,15,0.762,16,0.139,20,0.037,21,0.217,26,0.003,27,0.003,118,1.145,138,0.391,139,0.838,227,4.167,270,0.335,334,1.429,403,1.612,412,0.342,415,0.527,423,1.174,437,1.028,522,1.517,525,1.429,526,1.735,527,1.653,529,2.289,530,1.327,531,2.289,615,1.134,617,1.263,618,1.623,619,1.484,625,4.701,700,5.021,729,4.701,730,4.701,816,2.22,818,2.22,948,5.433,958,2.581,1120,2.32,1259,4.441,1366,3.216,1472,3,1709,3,1710,6.126,1711,6.324,1712,3.363,1713,3.363,1714,3.363,1715,3.363,1716,3.363,1717,3.363,1718,3.363,1719,3.363,1720,3.363,1721,3.363,1722,3.363,1723,3.363,1724,3.363,1725,3.363]],["title/classes/ReservationDto.html",[21,0.315,1726,4.003]],["body/classes/ReservationDto.html",[3,0.054,4,0.047,5,0.047,7,0.186,10,0.789,11,0.006,12,0.383,15,0.812,16,0.094,20,0.054,21,0.318,26,0.004,27,0.004,118,1.123,138,0.386,270,0.492,334,1.16,403,1.733,412,0.502,415,0.695,423,1.166,437,1.274,522,1.506,525,1.401,529,1.859,530,1.34,531,1.859,615,1.405,617,1.239,618,1.848,619,1.455,729,5.828,730,5.828,816,2.752,818,2.752,1726,5.493,1727,4.402,1728,4.936,1729,4.936,1730,4.936,1731,4.936,1732,4.936,1733,4.936]],["title/classes/ResetPasswordDto.html",[21,0.315,248,3.536]],["body/classes/ResetPasswordDto.html",[3,0.073,4,0.064,5,0.064,7,0.251,10,0.601,11,0.006,12,0.292,15,0.685,16,0.154,20,0.073,21,0.525,26,0.005,27,0.005,138,0.271,248,5.897,270,0.666,339,4.691,412,0.68,414,5.483,415,0.844,418,4.405,423,1.056,424,4.228,426,2.731,427,3.128,584,5.897,788,5.959,809,5.959,1734,7.254,1735,6.681]],["title/interfaces/Response.html",[173,3.364,1186,3.216]],["body/interfaces/Response.html",[3,0.067,4,0.059,5,0.059,7,0.23,11,0.006,15,0.828,20,0.067,26,0.005,27,0.005,138,0.378,139,0.973,173,5.318,334,1.463,392,5.819,409,4.146,415,0.8,634,5.603,1154,6.795,1186,4.041,1187,4.704,1736,5.467,1737,7.897,1738,7.897,1739,7.897]],["title/injectables/ResponseService.html",[120,1.188,298,1.953]],["body/injectables/ResponseService.html",[3,0.035,4,0.031,5,0.031,7,0.121,8,1.515,11,0.006,12,0.364,14,2.565,15,0.792,16,0.094,17,0.761,20,0.035,21,0.208,24,2.657,26,0.003,27,0.003,120,1.199,121,1.24,136,2.708,137,2.61,138,0.351,139,0.848,173,6.418,195,3.575,232,2.477,235,4.042,241,2.425,243,2.917,298,1.972,362,3.722,388,3.78,392,5.611,395,2.491,409,3.129,456,5.749,457,5.497,480,3.571,482,4.609,634,6.021,929,4.042,935,3.78,1154,3.78,1235,5.485,1346,4.042,1381,2.477,1447,3.78,1533,3.397,1647,2.878,1738,7.435,1739,7.435,1740,2.878,1741,4.925,1742,4.925,1743,4.925,1744,4.925,1745,4.925,1746,4.925,1747,4.925,1748,4.925,1749,3.227,1750,4.925,1751,4.925,1752,3.227,1753,4.925,1754,4.925,1755,4.925,1756,3.227,1757,4.925,1758,3.227,1759,6.684,1760,6.684,1761,4.925,1762,3.227,1763,4.925,1764,4.925,1765,3.227,1766,4.925,1767,3.227,1768,4.925,1769,3.227,1770,4.925,1771,4.925,1772,3.227,1773,3.227,1774,8.337,1775,3.227,1776,3.227,1777,2.878,1778,4.925,1779,3.227]],["title/classes/Service.html",[21,0.315,740,2.402]],["body/classes/Service.html",[3,0.052,4,0.046,5,0.046,7,0.179,10,0.78,11,0.006,12,0.379,15,0.783,16,0.124,20,0.052,21,0.306,26,0.004,27,0.004,118,1.344,138,0.384,139,0.663,270,0.474,334,1.131,403,1.722,412,0.483,415,0.677,423,1.154,437,1.249,522,1.491,525,1.385,526,1.373,527,1.308,529,1.811,530,1.328,531,1.811,547,2.034,615,1.378,617,1.207,618,1.827,619,1.418,740,3.211,816,2.698,818,2.698,827,4.127,1358,5.117,1370,3.899,1780,4.237,1781,6.641,1782,4.751,1783,4.751,1784,4.751,1785,4.751,1786,4.751,1787,4.751]],["title/controllers/ServiceController.html",[0,1.875,1788,3.744]],["body/controllers/ServiceController.html",[0,1.606,2,1.639,3,0.046,4,0.04,5,0.086,7,0.157,8,1.834,10,0.72,11,0.006,12,0.35,14,2.465,15,0.752,16,0.163,17,0.985,20,0.046,21,0.27,22,1.91,23,1.544,24,2.553,26,0.004,27,0.004,57,4.582,136,2.372,137,2.372,138,0.325,139,0.771,148,2.304,176,3.286,179,2.882,180,2.458,186,2.058,203,2.304,230,2.172,253,3.391,254,3.953,255,2.458,265,3.189,266,2.377,267,2.304,270,0.417,280,2.458,409,3.254,437,1.397,453,4.591,614,1.356,734,5.881,834,2.437,835,2.006,836,3.234,838,2.791,863,1.957,868,2.458,869,2.377,872,1.356,878,3.391,881,2.546,882,2.645,887,3.632,974,2.546,1193,3.632,1280,2.645,1375,3.099,1376,3.099,1388,2.172,1393,2.172,1406,2.755,1410,2.755,1413,2.755,1428,4.322,1475,3.43,1476,3.43,1477,3.43,1488,5.333,1489,3.207,1490,3.207,1491,3.03,1495,3.03,1496,4.892,1500,4.575,1501,3.43,1788,4.575,1789,3.727,1790,4.179,1791,4.179,1792,4.179,1793,4.179,1794,5.779,1795,3.727,1796,4.179,1797,3.207,1798,4.179,1799,4.179,1800,3.727,1801,4.179,1802,4.179,1803,4.179,1804,3.727,1805,4.179,1806,4.179]],["title/classes/ServiceDto.html",[21,0.315,1807,4.003]],["body/classes/ServiceDto.html",[3,0.056,4,0.05,5,0.05,7,0.194,10,0.777,11,0.006,12,0.377,15,0.795,16,0.098,20,0.056,21,0.333,26,0.004,27,0.004,118,1.157,138,0.383,270,0.515,334,1.196,403,1.745,412,0.525,415,0.716,423,1.155,437,1.303,522,1.492,525,1.379,529,1.915,530,1.353,531,1.915,547,2.122,615,1.437,617,1.276,618,1.872,619,1.5,816,2.815,818,2.815,1807,5.66,1808,4.602,1809,5.16,1810,5.16,1811,5.16,1812,5.16,1813,5.16]],["title/modules/ServiceModule.html",[28,1.734,47,3.536]],["body/modules/ServiceModule.html",[2,2.827,3,0.06,4,0.053,5,0.053,11,0.006,16,0.175,17,1.3,20,0.06,21,0.356,26,0.005,27,0.005,28,3.027,30,2.583,31,2.583,32,2.717,33,2.717,34,2.583,35,3.954,36,3.954,47,7.056,51,5.52,56,3.783,57,6.383,60,3.139,62,3.55,63,2.717,64,2.648,70,4.239,72,2.583,89,4,243,2.408,298,3.626,309,2.522,1788,6.161,1797,4.234,1814,4.921,1815,5.517,1816,5.517,1817,4.921,1818,5.517,1819,4.921,1820,5.517]],["title/injectables/ServiceService.html",[57,3.216,120,1.188]],["body/injectables/ServiceService.html",[3,0.033,4,0.029,5,0.079,7,0.114,8,1.443,11,0.006,12,0.337,14,2.275,16,0.14,17,0.714,20,0.033,21,0.195,23,2.121,24,2.228,26,0.003,27,0.003,56,2.699,57,3.092,60,3.265,72,1.418,118,0.508,120,1.142,121,1.164,136,2.315,137,2.315,138,0.3,139,0.752,147,3.258,183,1.845,187,2.668,205,3.908,215,2.251,221,3.443,230,1.574,241,2.826,298,3.088,309,1.384,312,2.088,327,3.642,329,2.047,334,1.419,345,1.722,348,3.733,354,1.491,361,2.826,362,2.886,383,1.781,395,1.531,399,1.62,401,2.438,403,0.551,409,2.687,437,1.337,453,4.076,466,3.801,513,1.845,547,1.281,614,0.982,615,1.196,617,1.062,644,1.453,673,1.669,699,2.585,727,1.574,734,4.61,737,5.1,740,3.925,812,2.195,834,1.917,835,1.453,836,2.758,838,2.196,843,1.384,855,1.781,863,2.196,872,0.982,913,1.916,920,2.968,937,1.845,1005,4.425,1039,2.585,1041,1.916,1042,1.781,1046,1.916,1047,1.916,1193,3.497,1234,1.916,1273,1.845,1317,3.234,1344,2.088,1356,1.845,1375,2.438,1376,2.438,1388,2.438,1393,2.438,1396,1.781,1401,1.845,1406,4.261,1428,3.4,1527,3.4,1529,2.088,1530,2.324,1531,2.324,1532,2.324,1533,2.088,1534,2.088,1535,2.088,1536,2.195,1537,2.195,1543,3.599,1544,3.848,1547,1.845,1552,2.485,1794,5.255,1821,2.7,1822,3.028,1823,4.689,1824,3.028,1825,3.028,1826,3.028,1827,3.028,1828,3.028,1829,3.028,1830,2.7,1831,4.182,1832,3.028,1833,5.739,1834,2.7,1835,3.028,1836,3.848,1837,3.848,1838,3.028,1839,3.028,1840,3.028,1841,3.028,1842,2.7,1843,3.028,1844,3.028,1845,3.028,1846,3.028,1847,4.689,1848,3.028]],["title/classes/SousService.html",[21,0.315,1358,2.972]],["body/classes/SousService.html",[3,0.043,4,0.038,5,0.038,7,0.149,10,0.792,11,0.006,12,0.384,15,0.753,16,0.14,20,0.043,21,0.255,26,0.004,27,0.004,118,1.372,138,0.387,139,0.832,270,0.395,334,1.281,403,1.666,412,0.403,415,0.595,423,1.161,437,1.131,522,1.5,525,1.405,526,1.722,527,1.64,529,2.052,530,1.312,531,2.052,547,1.841,615,1.247,617,1.061,618,1.722,619,1.246,740,4.253,750,5.172,816,2.442,817,5.172,818,2.442,826,5.171,827,4.676,830,3.529,948,5.171,958,3.036,1358,3.492,1849,3.529,1850,6.739,1851,3.957,1852,3.957,1853,3.957,1854,3.957,1855,3.957,1856,3.957,1857,3.957,1858,3.957,1859,3.957,1860,3.957]],["title/controllers/SousServiceController.html",[0,1.875,1861,3.744]],["body/controllers/SousServiceController.html",[0,1.459,2,1.489,3,0.041,4,0.036,5,0.084,7,0.143,8,1.711,10,0.725,11,0.006,12,0.352,14,2.48,15,0.765,16,0.158,17,0.895,20,0.041,21,0.245,22,1.735,23,1.403,24,2.568,26,0.003,27,0.003,92,3.876,93,6.037,136,2.415,137,2.415,138,0.327,139,0.785,148,2.092,176,3.065,179,2.618,180,2.233,186,1.869,203,2.092,230,1.973,253,3.164,254,3.744,255,2.233,265,2.975,266,2.159,267,2.092,270,0.379,280,2.233,409,3.081,437,1.352,453,4.442,614,1.231,745,5.744,748,5.742,750,4.268,834,2.273,835,1.822,836,3.092,838,2.604,863,1.777,868,2.233,869,2.159,872,1.231,878,3.164,881,2.313,882,2.402,887,3.388,974,2.313,1193,3.388,1280,2.402,1375,2.891,1376,2.891,1388,1.973,1393,1.973,1406,4.339,1410,2.503,1413,2.503,1428,4.032,1475,3.115,1476,3.115,1477,3.115,1488,5.051,1489,2.913,1490,2.913,1491,2.752,1495,4.032,1496,4.564,1500,4.268,1501,3.115,1795,3.386,1797,2.913,1800,3.386,1804,3.386,1861,4.268,1862,3.386,1863,4.96,1864,3.796,1865,3.796,1866,3.796,1867,3.386,1868,5.561,1869,5.561,1870,3.796,1871,3.796,1872,3.796,1873,5.63,1874,3.796,1875,4.539,1876,3.796,1877,3.796,1878,3.796,1879,3.796,1880,3.796,1881,3.796,1882,3.796,1883,3.796,1884,3.796,1885,3.796]],["title/classes/SousServiceDto.html",[21,0.315,1886,4.003]],["body/classes/SousServiceDto.html",[3,0.056,4,0.05,5,0.05,7,0.194,10,0.777,11,0.006,12,0.377,15,0.795,16,0.098,20,0.056,21,0.333,26,0.004,27,0.004,118,1.157,138,0.383,270,0.515,334,1.196,403,1.745,412,0.525,415,0.716,423,1.155,437,1.303,522,1.492,525,1.379,529,1.915,530,1.353,531,1.915,547,2.122,615,1.437,617,1.276,618,1.872,619,1.5,816,2.815,818,2.815,1886,5.66,1887,4.602,1888,5.16,1889,5.16,1890,5.16,1891,5.16,1892,5.16]],["title/modules/SousServiceModule.html",[28,1.734,48,3.536]],["body/modules/SousServiceModule.html",[2,2.836,3,0.061,4,0.053,5,0.053,11,0.006,16,0.172,17,1.307,20,0.061,21,0.358,26,0.005,27,0.005,28,2.862,30,2.597,31,2.597,32,2.731,33,2.731,34,2.597,35,3.963,36,3.963,48,7.061,51,5.528,56,3.788,62,3.562,63,2.731,64,2.662,70,4.253,72,2.597,89,4.021,92,3.869,93,4.021,298,3.632,309,2.535,748,3.824,1797,4.256,1819,4.946,1861,6.177,1875,6.681,1893,4.946,1894,5.546,1895,4.946,1896,4.946,1897,5.546]],["title/injectables/SousServiceService.html",[120,1.188,1875,3.364]],["body/injectables/SousServiceService.html",[3,0.029,4,0.026,5,0.076,7,0.101,8,1.317,11,0.006,12,0.334,14,2.271,16,0.134,17,0.635,20,0.029,21,0.174,23,1.967,24,2.244,26,0.003,27,0.003,56,2.532,60,3.028,72,1.262,92,4.324,93,5.719,118,0.452,120,1.042,121,1.036,136,2.311,137,2.311,138,0.3,139,0.751,147,3.304,187,1.533,205,3.905,215,1.293,221,3.467,230,1.401,241,2.986,243,1.176,298,2.955,309,1.232,312,1.858,327,3.467,329,1.868,334,1.455,345,1.533,348,3.748,354,1.327,358,2.068,361,2.986,362,2.953,383,1.585,395,2.164,399,1.441,401,2.224,403,0.491,409,2.493,437,1.324,453,3.881,466,3.566,513,1.642,547,0.736,614,0.874,615,1.303,617,1.224,644,1.293,673,1.485,699,1.485,727,1.401,737,4.855,740,3.885,745,5.049,748,5.44,750,5.076,834,1.749,835,1.293,836,2.588,838,2.004,843,1.232,855,1.585,863,2.004,872,0.874,913,1.705,920,1.705,937,1.642,1005,4.186,1039,2.359,1041,1.705,1042,1.585,1046,1.705,1047,1.705,1193,3.244,1234,1.705,1273,1.642,1317,2.951,1344,1.858,1356,1.642,1358,3.244,1375,2.224,1376,2.224,1388,2.224,1393,2.224,1396,1.585,1401,1.642,1406,3.997,1428,3.103,1429,2.211,1527,3.103,1529,1.858,1530,2.068,1531,2.068,1532,2.068,1533,1.858,1534,1.858,1535,1.858,1536,1.953,1537,1.953,1543,3.284,1544,3.512,1547,1.642,1552,3.512,1781,4.748,1830,2.403,1831,3.817,1834,2.403,1836,3.512,1837,3.512,1842,2.403,1863,3.817,1867,3.817,1873,5.049,1875,2.951,1898,2.403,1899,2.694,1900,4.279,1901,2.694,1902,2.694,1903,2.694,1904,2.694,1905,2.694,1906,2.694,1907,2.694,1908,2.694,1909,2.694,1910,4.279,1911,2.694,1912,2.694,1913,2.694,1914,2.694,1915,2.694,1916,2.694,1917,2.694,1918,4.279,1919,2.694,1920,4.279,1921,2.403,1922,2.694]],["title/classes/StatutReservation.html",[21,0.315,1711,3.744]],["body/classes/StatutReservation.html",[3,0.052,4,0.046,5,0.046,7,0.179,10,0.78,11,0.006,12,0.379,15,0.783,16,0.124,20,0.052,21,0.306,26,0.004,27,0.004,118,1.344,138,0.384,139,0.663,270,0.474,334,1.131,403,1.722,412,0.483,415,0.677,423,1.154,437,1.249,522,1.491,525,1.385,526,1.373,527,1.308,529,1.811,530,1.328,531,1.811,547,2.034,615,1.378,617,1.207,618,1.827,619,1.418,816,2.698,818,2.698,827,4.127,1086,5.714,1366,5.315,1372,3.646,1711,5.004,1923,4.237,1924,4.751,1925,4.751,1926,4.751,1927,4.751,1928,4.751,1929,4.751]],["title/controllers/StatutReservationController.html",[0,1.875,69,3.536]],["body/controllers/StatutReservationController.html",[0,1.283,2,1.309,3,0.036,4,0.032,5,0.032,7,0.125,8,1.555,10,0.657,11,0.006,12,0.319,14,2.248,15,0.709,16,0.146,17,0.787,20,0.036,21,0.215,22,1.525,23,1.233,24,2.328,26,0.003,27,0.003,58,3.331,69,3.663,107,6.095,108,5.572,109,2.739,136,2.129,137,2.499,138,0.348,139,0.692,148,2.785,176,3.361,180,1.963,186,1.643,203,1.84,217,3.641,226,4.273,230,1.735,233,3.513,243,3.354,253,2.874,254,2.874,255,1.963,265,2.703,266,1.898,267,1.84,268,4.683,270,0.333,274,4.451,280,1.963,334,1.332,437,1.577,610,3.264,614,1.083,740,1.643,758,4.483,760,5.3,834,2.065,835,2.425,836,2.902,838,2.366,843,2.309,846,2.112,848,2.971,850,4.683,852,2.561,853,3.999,855,2.971,856,2.302,857,2.971,861,2.302,863,1.563,868,1.963,869,1.898,872,1.083,875,2.302,878,1.898,881,2.033,882,2.112,887,2.033,974,2.033,1274,3.197,1280,2.112,1366,3.197,1375,2.626,1376,2.626,1388,1.735,1393,1.735,1400,5.58,1408,2.977,1409,2.977,1410,2.2,1411,2.977,1412,2.977,1413,2.2,1414,2.977,1495,2.42,1930,2.977,1931,6.097,1932,3.337,1933,5.052,1934,8.718,1935,3.337,1936,6.8,1937,4.146,1938,3.337,1939,4.506,1940,3.337,1941,3.337,1942,3.337,1943,4.483,1944,3.337,1945,3.337,1946,4.506,1947,6.064,1948,3.337,1949,3.337,1950,5.052]],["title/classes/StatutReservationDto.html",[21,0.315,1951,4.003]],["body/classes/StatutReservationDto.html",[3,0.056,4,0.05,5,0.05,7,0.194,10,0.777,11,0.006,12,0.377,15,0.795,16,0.098,20,0.056,21,0.333,26,0.004,27,0.004,118,1.157,138,0.383,270,0.515,334,1.196,403,1.745,412,0.525,415,0.716,423,1.155,437,1.303,522,1.492,525,1.379,529,1.915,530,1.353,531,1.915,547,2.122,615,1.437,617,1.276,618,1.872,619,1.5,816,2.815,818,2.815,1951,5.66,1952,4.602,1953,5.16,1954,5.16,1955,5.16,1956,5.16,1957,5.16]],["title/modules/StatutReservationModule.html",[28,1.734,49,3.536]],["body/modules/StatutReservationModule.html",[2,3.091,3,0.069,4,0.061,5,0.061,11,0.006,16,0.163,17,1.496,20,0.069,21,0.409,26,0.005,27,0.005,28,3.048,30,2.972,31,2.972,32,3.125,33,3.125,34,2.972,35,4.221,36,3.881,49,6.811,58,6.195,62,3.881,63,3.125,64,3.046,69,6.214,70,3.732,107,5.196,108,4.601,109,5.208,110,5.66,760,4.377,1958,6.346,1959,6.346,1960,6.346]],["title/injectables/StatutReservationService.html",[58,3.216,120,1.188]],["body/injectables/StatutReservationService.html",[3,0.037,4,0.033,5,0.033,7,0.129,8,1.588,11,0.006,12,0.352,14,2.39,16,0.14,17,0.809,20,0.037,21,0.221,23,1.907,24,2.357,26,0.003,27,0.003,56,2.88,58,3.403,72,1.607,107,4.548,108,6.012,118,0.576,120,1.257,121,1.319,136,2.432,137,2.432,138,0.315,139,0.79,147,3.176,187,1.953,205,3.987,221,3.642,298,3.226,309,1.569,327,3.642,329,2.253,334,1.471,345,1.953,348,3.702,354,1.691,361,2.542,362,2.769,383,2.019,399,1.836,401,2.683,403,0.625,409,2.904,437,1.352,547,0.938,614,1.114,615,1.276,617,1.148,644,1.648,673,1.892,727,1.785,758,4.548,760,5.719,834,2.11,836,2.944,838,2.417,843,1.569,846,3.266,850,4.733,855,2.019,863,2.417,872,1.114,920,2.173,1005,4.68,1039,2.845,1041,2.173,1042,2.019,1046,2.173,1047,2.173,1234,2.173,1317,3.559,1344,2.368,1375,2.683,1376,2.683,1388,2.683,1393,2.683,1396,2.019,1401,2.092,1443,4.236,1447,2.635,1449,2.817,1455,2.635,1457,2.635,1527,3.742,1529,2.368,1532,2.635,1533,2.368,1534,2.368,1535,2.368,1536,2.489,1537,2.489,1539,3.062,1547,2.092,1943,4.548,1946,4.603,1961,3.062,1962,3.433,1963,3.433,1964,3.433,1965,3.433,1966,3.433,1967,3.433,1968,3.433,1969,3.433,1970,3.433,1971,3.433,1972,3.433,1973,3.433,1974,3.433,1975,3.433,1976,3.433,1977,3.433,1978,5.161]],["title/classes/Tarif.html",[21,0.315,826,3.216]],["body/classes/Tarif.html",[3,0.043,4,0.038,5,0.038,7,0.147,10,0.802,11,0.006,12,0.389,15,0.686,16,0.127,20,0.043,21,0.252,26,0.004,27,0.004,118,0.954,138,0.39,139,0.748,270,0.39,334,1.546,403,1.663,412,0.398,415,0.59,423,1.173,437,1.124,522,1.516,525,1.423,526,1.548,527,1.475,529,2.262,530,1.364,531,2.262,593,3.692,595,4.323,615,1.239,617,1.052,618,1.715,619,1.236,683,4.238,710,3.939,714,3.598,769,5.496,814,5.678,816,2.427,818,2.427,826,3.749,1358,5.247,1370,3.212,1979,3.49,1980,3.913,1981,3.913,1982,3.913,1983,3.913,1984,3.913,1985,3.913,1986,3.913,1987,3.913,1988,3.913,1989,3.913,1990,3.913]],["title/controllers/TarifController.html",[0,1.875,68,3.536]],["body/controllers/TarifController.html",[0,1.118,2,1.141,3,0.032,4,0.028,5,0.028,7,0.109,8,1.399,10,0.707,11,0.006,12,0.343,14,2.42,15,0.78,16,0.13,17,0.686,20,0.032,21,0.188,22,1.33,23,1.075,24,2.576,26,0.003,27,0.003,59,3.689,68,3.296,92,3.384,136,2.462,137,2.778,138,0.378,139,0.8,203,1.604,215,2.182,226,4.449,228,2.77,253,2.586,254,2.586,267,1.604,268,4.925,270,0.29,274,4.792,321,2.506,334,1.522,437,1.581,526,0.957,527,0.912,610,2.182,614,0.944,644,2.182,683,4.343,740,2.239,765,4.003,817,4.854,826,5.451,833,3.489,834,1.858,835,2.686,836,1.94,837,2.997,838,2.129,839,2.233,840,2.595,841,3.731,842,5.191,843,3.325,844,3.489,846,1.841,847,2.387,848,2.674,850,4.432,851,2.233,852,2.233,853,2.674,856,2.006,857,3.72,860,1.918,861,2.006,863,1.362,865,2.387,866,3.135,868,1.711,869,1.655,872,0.944,875,2.006,878,1.655,879,2.233,881,1.773,882,1.841,884,2.595,885,2.595,887,1.773,888,2.595,1193,1.773,1274,4.003,1385,3.489,1439,4.054,1937,3.731,1939,2.595,1947,6.779,1991,2.595,1992,4.054,1993,4.546,1994,4.546,1995,2.909,1996,2.909,1997,2.595,1998,2.909,1999,2.909,2000,2.909,2001,4.546,2002,2.909,2003,2.909,2004,2.909,2005,2.909,2006,2.909,2007,4.546,2008,2.909,2009,4.054,2010,4.546,2011,2.909,2012,2.909,2013,4.171,2014,2.909,2015,2.909,2016,2.595,2017,3.731,2018,4.546,2019,2.909,2020,2.909,2021,2.909,2022,2.909,2023,2.909,2024,2.909,2025,2.909,2026,2.909,2027,2.909,2028,2.909,2029,2.909,2030,2.909,2031,2.909,2032,2.909,2033,2.909,2034,2.909,2035,2.909]],["title/classes/TarifDto.html",[21,0.315,2036,4.003]],["body/classes/TarifDto.html",[3,0.053,4,0.047,5,0.047,7,0.184,10,0.787,11,0.006,12,0.382,15,0.738,16,0.093,20,0.053,21,0.315,26,0.004,27,0.004,118,1.116,138,0.386,270,0.488,334,1.517,403,1.73,412,0.498,415,0.69,423,1.163,437,1.268,522,1.502,525,1.397,529,1.847,530,1.371,531,1.847,593,4.167,595,4.771,615,1.399,617,1.231,618,1.843,619,1.446,710,4.445,714,4.209,816,2.739,818,2.739,2036,5.459,2037,4.362,2038,4.891,2039,4.891,2040,4.891,2041,4.891,2042,4.891,2043,4.891]],["title/modules/TarifModule.html",[28,1.734,50,3.536]],["body/modules/TarifModule.html",[2,3.085,3,0.069,4,0.061,5,0.061,11,0.006,16,0.17,17,1.491,20,0.069,21,0.408,26,0.005,27,0.005,28,3.044,30,2.963,31,2.963,32,3.116,33,3.116,34,2.963,35,4.215,36,3.874,50,6.806,59,6.19,62,3.874,63,3.116,64,3.037,68,6.206,70,3.721,298,2.533,309,2.892,2016,5.643,2044,6.328,2045,6.328,2046,6.328,2047,6.328]],["title/injectables/TarifService.html",[59,3.216,120,1.188]],["body/injectables/TarifService.html",[3,0.021,4,0.018,5,0.018,7,0.071,8,0.984,11,0.006,12,0.313,14,2.131,16,0.104,17,0.445,20,0.021,21,0.122,23,1.181,24,2.904,26,0.002,27,0.002,56,2.042,59,2.108,72,0.884,92,2.223,118,1.423,120,0.778,121,0.726,136,2.169,137,2.169,138,0.281,139,0.705,147,3.359,181,1.195,187,1.818,195,3.706,205,3.802,215,1.995,221,3.412,226,0.982,228,1.948,241,2.924,298,2.532,309,0.863,321,2.291,327,1.574,329,1.395,334,1.484,348,3.908,362,0.843,364,4.385,376,5.022,383,1.111,384,5.022,395,2.765,399,1.01,401,2.843,403,0.344,409,3.114,437,1.502,480,5.022,527,1.097,593,4.065,614,0.613,615,0.769,617,0.592,644,0.907,683,5.059,710,2.444,740,2.924,765,3.461,769,4.488,814,4.862,817,4.557,826,5.418,833,2.453,834,1.307,835,1.534,836,2.087,837,2.108,838,1.497,839,2.453,843,1.461,851,2.453,860,2.108,863,1.497,872,0.613,916,1.685,919,1.369,920,1.195,921,3.707,935,1.45,1042,3.911,1234,1.195,1274,2.023,1356,1.151,1358,4.605,1396,1.111,1401,1.151,1429,3.411,1455,1.45,1457,1.45,1547,1.151,1695,1.685,1921,2.851,1937,2.623,1992,2.851,1997,2.851,2009,1.685,2013,4.385,2017,2.623,2048,1.685,2049,3.197,2050,3.197,2051,1.889,2052,1.889,2053,3.197,2054,1.889,2055,1.889,2056,1.889,2057,1.889,2058,3.197,2059,1.889,2060,3.197,2061,1.889,2062,1.889,2063,1.889,2064,5.469,2065,4.156,2066,5.469,2067,1.889,2068,3.197,2069,1.889,2070,4.156,2071,3.197,2072,4.156,2073,1.889,2074,1.889,2075,6.928,2076,4.156,2077,4.156,2078,5.469,2079,5.469,2080,1.889,2081,3.197,2082,1.889,2083,1.889,2084,1.889,2085,1.889,2086,1.889,2087,1.889,2088,3.197,2089,1.889,2090,1.889,2091,1.889,2092,1.889,2093,1.889,2094,1.889,2095,3.197,2096,1.889,2097,1.889,2098,1.889,2099,1.889]],["title/classes/UpdateDeviseDto.html",[21,0.315,864,3.216]],["body/classes/UpdateDeviseDto.html",[3,0.078,4,0.068,5,0.068,11,0.006,16,0.16,20,0.078,21,0.459,26,0.005,27,0.005,412,0.725,523,4.912,591,4.508,834,2.912,864,5.573,871,5.845,1219,5.15,2100,6.353,2101,8.453,2102,5.466,2103,5.164,2104,5.164]],["title/classes/UpdateDeviseDto-1.html",[21,0.263,283,1.538,864,2.692]],["body/classes/UpdateDeviseDto-1.html",[3,0.054,4,0.047,5,0.047,7,0.185,10,0.765,11,0.006,12,0.371,15,0.811,16,0.094,20,0.054,21,0.318,26,0.004,27,0.004,118,1.121,138,0.38,139,0.952,270,0.491,403,1.481,412,0.501,415,0.694,423,1.139,522,1.471,523,3.396,524,5.001,525,1.358,526,1.97,527,1.877,530,0.98,547,2.072,593,4.181,594,5.231,595,4.784,615,1.404,617,1.237,618,1.407,619,1.453,864,4.406,872,2.845,2105,4.924,2106,4.924,2107,4.924,2108,4.924,2109,4.924]],["title/classes/UpdateDisponibiliteDto.html",[21,0.315,973,3.216]],["body/classes/UpdateDisponibiliteDto.html",[3,0.078,4,0.068,5,0.068,11,0.006,16,0.16,20,0.078,21,0.459,26,0.005,27,0.005,412,0.725,534,4.912,621,4.508,834,2.912,972,5.845,973,5.573,1219,5.15,2102,5.466,2103,5.164,2104,5.164,2110,6.353,2111,8.453]],["title/classes/UpdateDisponibiliteDto-1.html",[21,0.263,283,1.538,973,2.692]],["body/classes/UpdateDisponibiliteDto-1.html",[3,0.057,4,0.05,5,0.05,7,0.197,10,0.75,11,0.006,12,0.364,15,0.818,16,0.099,20,0.057,21,0.338,26,0.004,27,0.004,118,1.168,138,0.376,139,0.942,270,0.522,403,1.518,412,0.533,415,0.723,423,1.128,522,1.457,525,1.331,526,1.948,527,1.857,530,1.022,534,3.611,535,4.669,615,1.448,617,1.289,618,1.466,619,1.514,623,5.396,624,5.396,626,5.396,872,2.817,973,4.591,2112,5.236,2113,5.236,2114,5.236]],["title/classes/UpdateDossierMedicalDto.html",[21,0.315,2115,4.003]],["body/classes/UpdateDossierMedicalDto.html",[3,0.056,4,0.05,5,0.05,7,0.194,10,0.746,11,0.006,12,0.362,15,0.808,16,0.098,20,0.056,21,0.333,26,0.004,27,0.004,118,1.157,138,0.375,139,0.939,270,0.515,403,1.68,412,0.525,415,0.716,423,1.122,522,1.45,525,1.324,526,1.942,527,1.851,530,1.216,537,3.96,538,4.602,615,1.437,617,1.276,618,1.746,619,1.5,665,5.961,666,5.961,667,5.961,872,2.803,2115,5.66,2116,5.16,2117,5.16,2118,5.16]],["title/classes/UpdateLogDto.html",[21,0.315,2119,4.003]],["body/classes/UpdateLogDto.html",[3,0.061,4,0.054,5,0.054,7,0.21,10,0.727,11,0.006,12,0.353,15,0.806,16,0.106,20,0.061,21,0.36,26,0.005,27,0.005,118,1.22,138,0.369,139,0.925,159,4.922,270,0.557,403,1.558,412,0.569,415,0.754,423,1.111,522,1.435,525,1.29,526,1.914,527,1.824,530,1.066,540,4.289,541,4.985,615,1.495,617,1.345,618,1.53,619,1.581,673,4.453,872,2.775,2119,5.965,2120,5.589,2121,5.589]],["title/classes/UpdateMedecinSousServiceDto.html",[21,0.315,1398,3.216]],["body/classes/UpdateMedecinSousServiceDto.html",[3,0.071,4,0.062,5,0.062,7,0.243,10,0.581,11,0.006,12,0.282,15,0.671,16,0.123,20,0.071,21,0.417,26,0.005,27,0.005,118,1.337,138,0.324,139,0.811,270,0.644,403,1.642,412,0.657,415,0.827,423,1.035,522,1.337,525,1.031,526,1.678,527,1.599,530,1.169,543,4.958,615,1.599,617,1.475,618,1.678,619,1.733,678,5.762,872,2.585,1398,5.254]],["title/classes/UpdateMedecinSousServiceDto-1.html",[21,0.263,283,1.538,1398,2.692]],["body/classes/UpdateMedecinSousServiceDto-1.html",[3,0.069,4,0.061,5,0.061,7,0.238,10,0.707,11,0.006,12,0.343,16,0.12,20,0.069,21,0.507,26,0.005,27,0.005,92,4.579,96,5.034,138,0.319,139,0.911,334,1.553,412,0.644,415,0.816,426,2.587,605,4.45,655,5.903,679,5.903,681,5.193,682,5.644,683,5.417,685,5.643,686,5.643,1398,5.187,2122,7.635,2123,7.866]],["title/classes/UpdateModePaiementDto.html",[21,0.315,1485,3.216]],["body/classes/UpdateModePaiementDto.html",[3,0.06,4,0.053,5,0.053,7,0.206,10,0.72,11,0.006,12,0.35,15,0.804,16,0.104,20,0.06,21,0.354,26,0.005,27,0.005,118,1.425,138,0.367,139,0.92,270,0.547,403,1.547,412,0.559,415,0.746,423,1.103,522,1.425,525,1.278,526,1.905,527,1.815,530,1.054,546,4.213,547,2.187,549,4.896,615,1.482,617,1.572,618,1.513,619,1.847,688,5.28,872,2.756,1485,4.737,2124,5.489,2125,5.489]],["title/classes/UpdateModePaiementDto-1.html",[21,0.263,283,1.538,1485,2.692]],["body/classes/UpdateModePaiementDto-1.html",[3,0.062,4,0.055,5,0.055,7,0.213,10,0.66,11,0.006,12,0.321,15,0.769,16,0.139,20,0.062,21,0.474,26,0.005,27,0.005,112,5.64,138,0.331,139,0.876,217,3.067,233,2.595,243,3.205,270,0.566,412,0.578,415,0.762,423,1.057,426,2.321,427,3.438,525,0.906,526,1.812,527,1.473,530,1.077,547,2.223,554,4.116,585,3.713,605,4.231,688,5.367,692,5.613,695,4.647,696,4.357,698,3.459,699,4.048,700,4.474,704,6.549,715,5.063,738,3.915,1485,4.842,2126,7.26,2127,7.343,2128,7.343,2129,5.677]],["title/classes/UpdateOrdonnanceDto.html",[21,0.315,2130,4.003]],["body/classes/UpdateOrdonnanceDto.html",[3,0.065,4,0.058,5,0.058,7,0.225,10,0.684,11,0.006,12,0.332,15,0.78,16,0.114,20,0.065,21,0.386,26,0.005,27,0.005,118,1.275,138,0.357,139,0.894,270,0.598,403,1.599,412,0.61,415,0.789,423,1.084,504,6.054,522,1.401,525,1.214,526,1.849,527,1.762,530,1.115,551,4.599,552,5.345,615,1.545,617,1.407,618,1.601,619,1.653,872,2.709,2130,6.239,2131,5.993]],["title/classes/UpdatePaiementDto.html",[21,0.315,2132,4.003]],["body/classes/UpdatePaiementDto.html",[3,0.057,4,0.05,5,0.05,7,0.195,10,0.747,11,0.006,12,0.363,15,0.796,16,0.098,20,0.057,21,0.334,26,0.004,27,0.004,118,1.161,138,0.375,139,0.94,270,0.517,334,1.44,403,1.513,412,0.528,415,0.718,423,1.124,522,1.452,525,1.326,526,1.944,527,1.853,530,1.219,554,3.759,556,4.625,615,1.441,617,1.28,618,1.457,619,1.504,709,5.976,710,4.579,711,5.976,714,4.379,872,2.808,2132,5.678,2133,5.185,2134,5.185,2135,5.185]],["title/classes/UpdatePrivilegeDto.html",[21,0.315,1654,3.216]],["body/classes/UpdatePrivilegeDto.html",[3,0.065,4,0.058,5,0.058,7,0.225,10,0.684,11,0.006,12,0.332,15,0.78,16,0.114,20,0.065,21,0.386,26,0.005,27,0.005,118,1.275,138,0.357,139,0.894,270,0.598,403,1.599,412,0.61,415,0.789,423,1.084,433,3.793,522,1.401,525,1.214,526,1.849,527,1.762,530,1.115,547,2.281,615,1.545,617,1.407,618,1.601,619,1.653,872,2.709,1654,5.013,2136,5.993,2137,5.993]],["title/classes/UpdatePrivilegeDto-1.html",[21,0.263,283,1.538,1654,2.692]],["body/classes/UpdatePrivilegeDto-1.html",[3,0.078,4,0.068,5,0.068,11,0.006,16,0.16,20,0.078,21,0.459,26,0.005,27,0.005,412,0.725,433,4.508,717,4.508,834,2.912,1219,5.15,1654,5.573,1658,5.164,2102,5.466,2103,5.164,2104,5.164,2138,6.353,2139,8.453]],["title/classes/UpdateReservationDto.html",[21,0.315,2140,4.003]],["body/classes/UpdateReservationDto.html",[3,0.061,4,0.054,5,0.054,7,0.21,10,0.727,11,0.006,12,0.353,15,0.806,16,0.106,20,0.061,21,0.36,26,0.005,27,0.005,118,1.22,138,0.369,139,0.925,270,0.557,403,1.558,412,0.569,415,0.754,423,1.111,522,1.435,525,1.29,526,1.914,527,1.824,530,1.066,562,3.854,563,4.985,615,1.495,617,1.345,618,1.53,619,1.581,729,6.2,730,6.2,872,2.775,2140,5.965,2141,5.589,2142,5.589]],["title/classes/UpdateServiceDto.html",[21,0.315,1794,3.216]],["body/classes/UpdateServiceDto.html",[3,0.065,4,0.058,5,0.058,7,0.225,10,0.684,11,0.006,12,0.332,15,0.78,16,0.114,20,0.065,21,0.386,26,0.005,27,0.005,118,1.275,138,0.357,139,0.894,270,0.598,403,1.599,412,0.61,415,0.789,423,1.084,522,1.401,525,1.214,526,1.849,527,1.762,530,1.115,547,2.281,565,3.793,615,1.545,617,1.407,618,1.601,619,1.653,739,4.918,872,2.709,1794,5.013,2143,5.993]],["title/classes/UpdateServiceDto-1.html",[21,0.263,283,1.538,1794,2.692]],["body/classes/UpdateServiceDto-1.html",[3,0.061,4,0.053,5,0.053,7,0.208,10,0.65,11,0.006,12,0.316,15,0.764,16,0.137,20,0.061,21,0.466,26,0.005,27,0.005,138,0.327,139,0.868,217,3.02,233,3.306,243,3.156,270,0.553,412,0.564,415,0.751,423,1.108,426,2.267,427,3.994,495,4.769,526,1.91,527,1.615,530,1.061,547,2.198,565,3.51,566,4.551,585,3.657,605,4.184,644,3.471,695,4.577,696,4.256,698,4.407,699,3.987,737,5.55,738,3.824,740,3.562,742,4.256,743,6.45,751,5.935,752,5.935,753,4.551,942,5.935,1794,4.769,2144,7.178]],["title/classes/UpdateSousServiceDto.html",[21,0.315,1873,3.216]],["body/classes/UpdateSousServiceDto.html",[3,0.065,4,0.058,5,0.058,7,0.225,10,0.684,11,0.006,12,0.332,15,0.78,16,0.114,20,0.065,21,0.386,26,0.005,27,0.005,118,1.275,138,0.357,139,0.894,270,0.598,403,1.599,412,0.61,415,0.789,423,1.084,522,1.401,525,1.214,526,1.849,527,1.762,530,1.115,547,2.281,569,4.599,570,5.345,615,1.545,617,1.407,618,1.601,619,1.653,872,2.709,1873,5.013,2145,5.993]],["title/classes/UpdateSousServiceDto-1.html",[21,0.263,283,1.538,1873,2.692]],["body/classes/UpdateSousServiceDto-1.html",[3,0.059,4,0.052,5,0.052,7,0.204,10,0.642,11,0.006,12,0.312,15,0.76,16,0.136,20,0.059,21,0.46,26,0.004,27,0.004,92,4.918,138,0.324,139,0.861,217,2.98,233,3.262,243,3.693,270,0.542,412,0.553,415,0.741,423,1.099,426,2.221,427,3.962,495,4.705,526,1.899,527,1.599,530,1.047,547,2.177,565,3.439,566,4.459,585,3.609,605,4.142,695,4.516,696,4.17,698,4.348,699,3.934,737,5.496,738,3.747,740,4.167,742,4.17,748,5.496,751,5.857,752,5.857,753,4.459,757,6.365,1873,4.705,2146,7.107]],["title/classes/UpdateStatutReservationDto.html",[21,0.315,1943,3.216]],["body/classes/UpdateStatutReservationDto.html",[3,0.065,4,0.058,5,0.058,7,0.225,10,0.684,11,0.006,12,0.332,15,0.78,16,0.114,20,0.065,21,0.386,26,0.005,27,0.005,118,1.275,138,0.357,139,0.894,270,0.598,403,1.599,412,0.61,415,0.789,423,1.084,522,1.401,525,1.214,526,1.849,527,1.762,530,1.115,547,2.281,572,4.599,615,1.545,617,1.407,618,1.601,619,1.653,872,2.709,1943,5.013,2147,5.993,2148,5.993]],["title/classes/UpdateStatutReservationDto-1.html",[21,0.263,283,1.538,1943,2.692]],["body/classes/UpdateStatutReservationDto-1.html",[3,0.07,4,0.062,5,0.062,7,0.241,10,0.576,11,0.006,12,0.28,15,0.668,16,0.15,20,0.07,21,0.511,26,0.005,27,0.005,107,5.929,138,0.26,139,0.806,233,2.927,243,3.458,270,0.639,412,0.651,415,0.822,423,1.029,426,2.617,427,3.71,547,2.351,562,4.416,585,4.007,605,4.119,698,3.901,699,4.368,760,5.465,763,5.711,764,5.711,1943,5.225,2149,7.067,2150,6.403]],["title/classes/UpdateTarifDto.html",[21,0.315,2013,3.216]],["body/classes/UpdateTarifDto.html",[3,0.06,4,0.053,5,0.053,7,0.208,10,0.723,11,0.006,12,0.351,15,0.608,16,0.105,20,0.06,21,0.357,26,0.005,27,0.005,118,1.211,138,0.368,139,0.922,270,0.552,334,1.477,403,1.551,412,0.563,415,0.749,423,1.107,522,1.43,525,1.283,526,1.909,527,1.819,530,1.25,576,3.815,593,4.431,595,5.011,615,1.488,617,1.336,618,1.52,619,1.57,710,4.728,714,4.569,872,2.764,2013,4.761,2151,5.531,2152,5.531,2153,5.531]],["title/classes/UpdateTarifDto-1.html",[21,0.263,283,1.538,2013,2.692]],["body/classes/UpdateTarifDto-1.html",[3,0.078,4,0.068,5,0.068,11,0.006,16,0.16,20,0.078,21,0.459,26,0.005,27,0.005,412,0.725,576,4.912,765,4.508,834,2.912,1219,5.15,2013,5.573,2017,5.845,2102,5.466,2103,5.164,2104,5.164,2154,6.353,2155,8.453]],["title/classes/UpdateUtilisateurDto.html",[21,0.315,2156,3.216]],["body/classes/UpdateUtilisateurDto.html",[3,0.047,4,0.042,5,0.042,7,0.163,10,0.779,11,0.006,12,0.378,15,0.831,16,0.082,20,0.047,21,0.28,26,0.004,27,0.004,118,1.293,138,0.384,139,0.962,270,0.433,288,4.172,339,3.795,403,1.403,412,0.442,415,0.635,423,1.149,522,1.485,525,1.383,526,1.99,527,1.896,530,0.898,579,2.746,588,4.489,615,1.313,617,1.426,618,1.289,619,1.675,777,4.489,778,4.489,779,4.489,785,3.87,872,2.871,2156,4.037,2157,4.339,2158,4.339,2159,4.339,2160,3.87,2161,3.87,2162,4.339]],["title/classes/UpdateUtilisateurDto-1.html",[21,0.263,283,1.538,2156,2.692]],["body/classes/UpdateUtilisateurDto-1.html",[3,0.037,4,0.032,5,0.032,7,0.126,10,0.741,11,0.006,12,0.36,15,0.762,16,0.096,20,0.037,21,0.328,26,0.003,27,0.003,138,0.342,139,0.935,163,3.732,183,2.049,192,2.049,195,1.799,215,3.277,216,5.602,217,3.219,218,5.602,228,4.159,270,0.335,288,3.603,321,2.801,334,0.881,339,3.277,393,3,412,0.342,415,0.527,425,2.76,426,1.375,427,3.748,434,4.224,435,3,482,2.32,505,4.171,530,0.746,579,2.129,584,3.685,585,3.706,588,3.877,590,2.438,605,4.384,610,2.439,612,2.76,634,5.215,655,3.505,656,2.76,695,2.129,724,4.949,726,2.76,727,1.748,777,3.877,778,3.877,779,3.877,787,5.027,796,3.9,797,4.171,798,4.533,800,6.088,801,4.533,802,4.533,803,4.171,804,4.533,806,7.523,807,2.76,808,2.76,811,3,1069,4.533,1205,4.171,1206,4.171,1660,2.76,2156,3.351,2160,3,2161,3,2163,7.523,2164,8.004,2165,3.363,2166,3.363,2167,3.363,2168,3.363,2169,3.363,2170,3.363,2171,3.363,2172,6.126,2173,3.363,2174,3.363,2175,5.082,2176,5.082,2177,3.363,2178,5.082,2179,5.082,2180,5.082,2181,5.082,2182,3.363,2183,3.363,2184,3.363,2185,3.363,2186,3.363,2187,3.363,2188,3.363,2189,3.363,2190,3.363,2191,3.363,2192,8.004,2193,3.363,2194,3.363,2195,3.363,2196,3.363,2197,3.363,2198,3.363,2199,3.363,2200,3.363,2201,3.363,2202,3.363,2203,3.363,2204,3.363,2205,3.363]],["title/modules/UploadModule.html",[28,1.734,51,2.972]],["body/modules/UploadModule.html",[3,0.064,4,0.056,5,0.056,11,0.006,16,0.157,17,1.386,20,0.064,21,0.379,26,0.005,27,0.005,28,2.942,30,2.753,31,2.753,32,2.895,33,2.895,34,2.753,35,4.075,36,4.075,51,5.835,60,5.605,62,3.698,63,2.895,64,2.822,442,6.79,1605,5.763,2206,5.243,2207,5.243,2208,5.243,2209,5.879,2210,5.879,2211,5.879,2212,5.879,2213,5.879,2214,5.879,2215,5.879,2216,5.879,2217,5.879]],["title/injectables/UploadService.html",[60,2.775,120,1.188]],["body/injectables/UploadService.html",[3,0.035,4,0.031,5,0.057,7,0.122,8,1.517,11,0.006,12,0.364,14,2.335,15,0.784,16,0.137,17,0.762,20,0.035,21,0.208,24,2.295,26,0.003,27,0.003,60,2.805,118,0.542,120,1.201,121,1.242,133,2.343,136,2.377,137,2.377,138,0.321,139,0.772,146,2.343,147,3.327,177,2.481,205,3.745,215,1.551,217,2.497,243,1.411,327,4.321,329,2.609,348,3.216,361,2.944,362,2.669,376,4.334,384,4.334,407,5.613,415,0.512,437,0.542,444,5.966,445,4.047,446,4.588,447,4.588,452,2.653,453,4.597,454,6.401,456,4.123,457,3.942,458,3.784,459,5.966,460,5.966,461,2.653,466,2.9,467,2.229,468,2.883,480,5.221,481,2.883,482,2.229,483,2.883,484,2.883,495,2.131,498,2.883,501,5.332,506,2.883,507,2.883,508,2.883,509,2.883,510,2.883,511,4.398,516,2.883,517,2.653,519,2.883,853,1.901,1159,2.883,1160,2.883,1161,2.883,1162,2.653,1163,2.883,1164,2.883,1165,2.883,1166,2.883,1167,2.883,1189,4.047,1191,6.423,1396,1.901,1737,4.398,2218,2.883,2219,5.978,2220,4.931,2221,4.931,2222,4.931,2223,4.931,2224,3.232,2225,4.931,2226,3.232,2227,4.931,2228,3.232,2229,3.232,2230,4.931,2231,3.232,2232,3.232,2233,3.232,2234,4.931,2235,3.232,2236,3.232,2237,3.232,2238,4.931,2239,3.232,2240,3.232,2241,3.232,2242,5.978,2243,4.931,2244,3.232,2245,3.232,2246,3.232,2247,3.232,2248,3.232,2249,3.232,2250,3.232,2251,3.232,2252,5.978,2253,3.232,2254,3.232,2255,3.232,2256,3.232,2257,4.931,2258,3.232,2259,3.232,2260,3.232,2261,3.232,2262,3.232,2263,3.232]],["title/classes/Utilisateur.html",[21,0.315,227,2.467]],["body/classes/Utilisateur.html",[3,0.03,4,0.026,5,0.026,7,0.103,10,0.809,11,0.006,12,0.393,15,0.801,16,0.141,20,0.03,21,0.176,26,0.003,27,0.003,86,4.06,118,1.484,138,0.392,139,0.881,227,2.19,270,0.273,288,3.162,334,1.06,339,2.876,354,3.792,403,1.534,412,0.278,415,0.45,423,1.176,434,3.708,437,0.902,522,1.52,525,1.436,526,1.824,527,1.738,529,1.698,530,1.191,531,1.698,588,3.402,615,0.995,617,1.132,618,1.492,619,1.329,777,3.402,778,3.402,779,3.402,816,1.948,818,1.948,827,5.333,948,5.076,958,2.099,1086,4.126,1107,5.114,1271,4.412,1366,4.217,1372,2.099,1560,6.084,2264,2.44,2265,5.376,2266,5.376,2267,5.376,2268,2.736,2269,2.736,2270,2.736,2271,2.736,2272,2.736,2273,2.736,2274,2.736,2275,2.736,2276,2.736,2277,2.736,2278,2.736,2279,2.736,2280,2.736,2281,2.736,2282,2.736,2283,2.736,2284,2.736,2285,2.736,2286,2.736,2287,2.736,2288,2.736,2289,2.736]],["title/classes/Utilisateur-1.html",[21,0.263,227,2.064,283,1.538]],["body/classes/Utilisateur-1.html",[3,0.082,4,0.073,5,0.073,11,0.006,20,0.082,21,0.487,26,0.005,27,0.005,227,4.422,412,0.768,2290,6.731]],["title/controllers/UtilisateurController.html",[0,1.875,2291,3.744]],["body/controllers/UtilisateurController.html",[0,1.046,2,1.067,3,0.03,4,0.026,5,0.074,7,0.102,8,1.327,10,0.691,11,0.006,12,0.336,14,2.365,15,0.709,16,0.154,17,0.641,20,0.03,21,0.176,22,1.244,23,1.006,24,2.449,26,0.003,27,0.003,136,2.081,137,2.081,138,0.27,139,0.676,148,2.378,163,1.658,176,2.954,179,1.877,180,1.601,183,1.658,186,1.34,191,2.844,195,2.308,203,1.5,215,2.572,226,4.301,227,4.508,230,3.852,232,3.311,233,3.232,241,2.124,253,2.454,254,3.048,255,1.601,260,3.54,263,2.089,264,1.722,265,2.308,266,2.454,267,1.5,268,4.822,269,4.679,270,0.271,274,4.683,275,4.113,280,3.909,299,3.391,339,2.866,364,3.533,373,2.089,395,2.181,409,2.02,431,1.973,436,2.427,437,1.289,453,3.898,610,2.927,614,0.883,644,2.071,727,2.242,776,4.886,779,3.391,834,2.19,835,1.306,836,2.602,838,2.509,843,3.038,848,2.537,853,2.537,857,3.586,863,1.274,866,2.975,868,1.601,869,1.548,872,0.883,878,1.548,881,1.658,887,1.658,974,1.658,1274,4.689,1280,4.689,1340,2.427,1375,2.242,1376,2.242,1381,3.311,1385,5.101,1388,1.415,1393,1.415,1410,1.795,1413,1.795,1488,4.113,1489,2.089,1490,2.089,1491,1.973,1495,1.973,1500,3.311,1547,2.628,1555,2.089,1605,2.089,1633,5.455,1650,2.234,1658,1.973,1777,3.847,2156,5.067,2291,3.311,2292,2.427,2293,5.438,2294,6.097,2295,3.847,2296,2.722,2297,2.722,2298,4.314,2299,7.071,2300,4.314,2301,2.722,2302,2.722,2303,2.722,2304,2.722,2305,4.314,2306,2.722,2307,4.314,2308,2.722,2309,5.359,2310,5.359,2311,5.359,2312,4.779,2313,2.722,2314,2.427,2315,2.722,2316,2.722,2317,2.722,2318,2.722,2319,2.722,2320,2.722,2321,2.722,2322,2.722,2323,2.722,2324,4.314,2325,4.314,2326,2.722,2327,2.427,2328,2.722,2329,2.722,2330,2.722,2331,2.722,2332,2.722,2333,2.722,2334,4.314,2335,2.722,2336,2.722,2337,2.722,2338,2.722,2339,2.722,2340,2.722,2341,2.722,2342,2.722,2343,2.722,2344,2.722,2345,2.722,2346,2.722,2347,2.722,2348,2.722,2349,2.722,2350,2.722,2351,2.722,2352,2.722,2353,2.722,2354,2.722]],["title/classes/UtilisateurDto.html",[21,0.315,2355,4.003]],["body/classes/UtilisateurDto.html",[3,0.045,4,0.04,5,0.04,7,0.156,10,0.812,11,0.006,12,0.394,15,0.834,16,0.079,20,0.045,21,0.267,26,0.004,27,0.004,118,1.267,138,0.392,270,0.414,288,4.069,334,1.028,339,3.701,403,1.681,412,0.422,415,0.615,423,1.187,437,1.161,522,1.534,525,1.442,529,1.647,530,1.283,531,1.647,588,4.379,615,1.28,617,1.397,618,1.749,619,1.642,777,4.379,778,4.379,779,4.379,816,2.508,818,2.508,2355,4.865,2356,3.699,2357,4.147,2358,4.147,2359,4.147,2360,4.147,2361,4.147,2362,4.147,2363,4.147,2364,4.147,2365,4.147,2366,4.147]],["title/modules/UtilisateurModule.html",[28,1.734,52,3.536]],["body/modules/UtilisateurModule.html",[2,2.78,3,0.059,4,0.052,5,0.052,11,0.006,16,0.171,17,1.268,20,0.059,21,0.347,26,0.004,27,0.004,28,2.82,30,2.519,31,2.519,32,2.649,33,2.649,34,2.519,35,3.905,36,3.905,40,6.325,51,5.338,52,7.031,56,3.757,62,3.491,63,2.649,64,2.582,70,4.169,72,2.519,80,4.798,89,3.9,217,2.246,299,6.104,321,3.908,331,4.798,612,4.415,1346,4.415,1382,4.415,2291,6.086,2327,4.798,2367,4.798,2368,5.379,2369,5.379,2370,4.798,2371,5.379,2372,5.379,2373,5.379,2374,5.379,2375,5.379,2376,5.379]],["title/injectables/UtilisateurService.html",[120,1.188,299,3.087]],["body/injectables/UtilisateurService.html",[3,0.02,4,0.017,5,0.068,7,0.068,8,0.952,11,0.006,12,0.318,14,2.173,15,0.523,16,0.124,17,0.429,20,0.02,21,0.117,23,1.493,24,2.251,26,0.002,27,0.002,56,1.992,60,2.299,72,0.852,118,1.097,120,0.754,121,0.699,136,2.048,137,2.048,138,0.266,139,0.665,147,3.47,163,2.907,181,1.959,183,1.108,187,1.761,191,1.199,195,0.973,205,3.834,215,0.873,217,0.759,221,3.478,226,2.101,227,3.572,228,1.108,241,3.22,260,2.54,263,1.396,288,1.07,298,2.486,299,1.959,309,0.831,312,1.254,327,1.99,329,1.351,334,1.294,339,3.498,345,1.761,346,2.54,348,3.879,354,3.894,358,1.396,361,3.478,362,3.248,364,2.041,383,1.07,392,1.254,395,2.705,399,0.973,401,1.609,403,0.331,409,2.725,431,4.502,434,4.283,437,1.327,441,4.014,453,3.208,466,2.806,513,2.462,517,1.492,547,1.104,588,1.959,613,2.54,614,0.59,615,1.077,617,0.99,644,1.94,727,2.101,776,3.837,777,1.151,778,1.151,779,3.019,787,5.597,796,1.396,797,1.492,834,1.652,835,0.873,836,2.036,838,1.892,843,0.831,848,1.07,853,1.07,855,1.07,863,0.852,866,1.254,872,0.59,905,1.622,912,1.492,913,3.683,914,1.492,920,1.151,937,1.886,1005,3.019,1016,1.622,1039,1.706,1040,3.102,1041,1.151,1042,3.846,1046,1.151,1047,1.151,1048,2.376,1193,2.462,1205,1.492,1273,2.462,1356,1.886,1375,1.609,1376,1.609,1388,1.609,1393,1.609,1396,1.821,1401,1.886,1431,3.317,1432,3.915,1437,1.622,1529,2.787,1530,1.396,1531,1.396,1534,3.29,1535,1.254,1543,2.376,1547,1.108,1633,5.597,1649,1.492,1658,1.318,1693,3.605,1697,2.761,1702,1.622,1836,2.54,1837,2.54,2156,4.095,2293,4.255,2295,2.761,2312,5.191,2314,2.761,2377,1.622,2378,3.096,2379,4.77,2380,3.096,2381,1.819,2382,3.096,2383,1.819,2384,1.819,2385,1.819,2386,1.819,2387,1.819,2388,1.819,2389,1.819,2390,1.819,2391,3.096,2392,1.819,2393,1.819,2394,1.819,2395,1.819,2396,3.096,2397,1.819,2398,1.819,2399,3.096,2400,1.819,2401,3.096,2402,3.096,2403,1.819,2404,3.096,2405,3.096,2406,3.096,2407,1.819,2408,3.096,2409,1.819,2410,3.096,2411,1.819,2412,1.819,2413,1.819,2414,3.096,2415,1.819,2416,1.819,2417,4.042,2418,3.096,2419,1.819,2420,1.819,2421,3.096,2422,1.819,2423,1.819,2424,1.819,2425,1.819,2426,1.819,2427,1.819,2428,1.819,2429,1.819,2430,3.096,2431,1.819,2432,3.096,2433,1.819,2434,3.096,2435,1.819,2436,1.819,2437,1.819,2438,1.819,2439,3.096,2440,1.819,2441,3.096,2442,1.819,2443,3.096,2444,1.819,2445,3.096,2446,4.042,2447,3.096,2448,3.096,2449,4.042,2450,1.819,2451,1.819,2452,1.819]],["title/modules/ValidationModule.html",[28,1.734,53,3.536]],["body/modules/ValidationModule.html",[3,0.06,4,0.053,5,0.053,11,0.006,16,0.161,17,1.29,20,0.06,21,0.353,26,0.004,27,0.004,28,3.018,30,3.358,31,2.564,32,2.696,33,2.696,34,2.564,35,3.939,36,3.939,53,7.048,61,6.669,62,3.532,63,2.696,64,2.628,298,3.871,321,3.018,373,4.202,843,3.278,844,4.202,919,3.969,1130,6.669,1406,3.61,1605,5.504,2453,4.883,2454,4.883,2455,4.883,2456,5.475,2457,5.475,2458,4.883,2459,5.475,2460,5.475,2461,5.475,2462,5.475,2463,5.475,2464,5.475]],["title/injectables/ValidationService.html",[61,3.364,120,1.188]],["body/injectables/ValidationService.html",[3,0.065,4,0.057,5,0.057,11,0.006,12,0.258,16,0.166,17,1.776,20,0.065,21,0.486,22,2.702,23,2.184,24,1.884,26,0.005,27,0.005,61,5.197,118,1.466,120,1.835,121,2.272,136,1.851,137,1.851,138,0.24,139,0.601,147,2.416,329,2.58,426,2.416,457,3.897,527,1.512,1130,6.363,1152,7.399,1154,4.536,1219,4.592,2458,5.272,2465,5.272,2466,8.296,2467,5.911,2468,5.911,2469,7.536,2470,5.911,2471,5.911,2472,5.911,2473,5.911,2474,5.911,2475,5.911,2476,5.911,2477,5.911,2478,5.911,2479,5.911]],["title/coverage.html",[2480,5.449]],["body/coverage.html",[0,2.791,1,1.208,5,0.015,6,1.404,11,0.006,18,1.086,21,0.636,26,0.002,27,0.002,34,0.737,54,1.086,55,1.038,56,0.657,57,1.038,58,1.038,59,1.038,60,0.895,61,1.086,66,1.141,67,1.208,68,1.141,69,1.141,85,1.086,86,0.959,87,1.208,92,2.316,93,1.982,96,1.608,97,1.982,107,1.803,108,1.982,112,1.73,113,1.982,120,2.082,122,1.404,126,1.292,127,1.404,128,2.244,129,1.404,138,0.064,144,1.208,167,1.292,168,1.404,169,1.404,173,1.086,186,0.775,190,7.682,201,1.208,202,1.404,211,1.141,223,1.885,227,1.383,248,1.141,257,1.086,259,3.632,264,0.996,265,0.842,296,1.038,297,1.141,298,0.63,299,0.996,326,1.404,354,1.346,362,0.703,396,1.404,413,1.404,414,2.244,431,1.141,432,1.404,433,3.653,442,1.141,443,1.404,466,0.926,467,1.086,521,1.292,522,1.623,523,3.38,533,1.292,534,3.38,536,1.292,537,2.782,539,1.292,540,2.782,542,1.292,543,2.782,545,1.292,546,2.782,550,1.292,551,2.782,553,1.292,554,3.139,558,1.292,561,1.292,562,3.38,564,1.292,565,3.653,568,1.292,569,2.782,571,1.292,572,2.782,575,1.292,576,3.38,578,1.404,579,3.653,591,1.73,592,1.404,614,2.455,621,1.73,622,1.404,664,1.292,672,1.292,677,1.803,679,2.986,680,1.404,681,2.244,687,1.803,692,2.986,693,1.404,694,1.404,700,0.959,705,1.292,708,1.292,717,1.73,719,1.404,728,1.292,734,1.803,736,1.404,740,0.775,745,1.803,748,2.986,749,1.404,758,1.803,760,2.986,761,1.404,765,1.73,768,1.404,776,1.803,786,1.404,814,1.038,815,1.404,826,1.038,831,1.404,864,1.803,872,2.455,890,1.292,891,1.404,900,1.404,946,1.141,947,1.404,948,1.038,959,1.404,973,1.803,983,1.292,984,1.404,996,1.404,1107,1.208,1108,1.404,1121,1.292,1122,1.404,1130,1.086,1131,1.404,1186,2.39,1188,2.782,1195,1.208,1197,1.292,1198,1.404,1200,1.292,1201,1.404,1217,1.404,1218,2.244,1236,1.404,1257,1.404,1269,1.208,1270,1.404,1277,1.038,1285,1.292,1286,1.404,1294,1.404,1295,1.404,1315,1.404,1357,1.404,1358,0.959,1366,0.996,1373,1.208,1374,1.404,1398,1.803,1403,1.086,1415,1.292,1416,1.404,1421,1.404,1462,1.208,1463,1.404,1473,1.208,1474,1.404,1485,1.803,1492,1.086,1507,1.292,1508,1.404,1520,1.404,1555,1.208,1556,1.404,1560,1.208,1561,1.404,1571,1.292,1572,1.404,1578,1.404,1592,1.292,1593,1.404,1607,1.404,1618,1.292,1632,1.404,1640,1.404,1641,1.208,1642,1.404,1654,1.803,1656,1.086,1670,1.292,1671,1.404,1681,1.404,1709,1.404,1711,1.208,1726,1.292,1727,1.404,1734,1.404,1736,1.404,1740,1.404,1780,1.404,1788,1.208,1789,1.404,1794,1.803,1807,1.292,1808,1.404,1821,1.404,1849,1.404,1861,1.208,1862,1.404,1873,1.803,1875,1.086,1886,1.292,1887,1.404,1898,1.404,1923,1.404,1930,1.404,1943,1.803,1951,1.292,1952,1.404,1961,1.404,1979,1.404,1991,1.404,2013,1.803,2036,1.292,2037,1.404,2048,1.404,2100,1.404,2110,1.404,2115,1.292,2119,1.292,2122,1.404,2126,1.404,2130,1.292,2132,1.292,2138,1.404,2140,1.292,2144,1.404,2146,1.404,2149,1.404,2154,1.404,2156,1.803,2163,1.404,2218,1.404,2264,1.404,2290,1.404,2291,1.208,2292,1.404,2355,1.292,2356,1.404,2377,1.404,2465,1.404,2480,1.292,2481,1.404,2482,1.574,2483,1.574,2484,8.284,2485,6.886,2486,6.886,2487,7.423,2488,8.711,2489,1.574,2490,1.574,2491,1.574,2492,1.574,2493,6.661,2494,1.574,2495,1.574,2496,7.567,2497,7.263,2498,4.901,2499,6.113,2500,4.329,2501,2.734,2502,1.574,2503,1.574,2504,1.404,2505,1.574,2506,2.438,2507,3.624,2508,1.574,2509,1.574]],["title/dependencies.html",[31,2.745,2510,3.641]],["body/dependencies.html",[11,0.006,17,1.47,21,0.503,26,0.005,27,0.005,31,2.92,79,4.521,82,4.786,83,4.786,143,5.562,179,5.376,264,3.946,270,0.622,304,5.118,306,4.521,346,5.118,401,3.241,426,2.549,465,5.562,1245,6.952,1491,4.521,1617,5.562,1660,5.118,2103,4.521,2104,4.521,2511,8.504,2512,7.795,2513,6.236,2514,6.236,2515,6.236,2516,6.236,2517,6.236,2518,7.795,2519,6.236,2520,6.236,2521,6.236,2522,6.236,2523,6.236,2524,6.236,2525,6.236,2526,6.236,2527,6.236,2528,6.236,2529,6.236,2530,6.236]],["title/miscellaneous/functions.html",[2531,3.133,2532,5.228]],["body/miscellaneous/functions.html",[7,0.286,11,0.006,26,0.006,27,0.006,34,4.336,2504,6.778,2531,5.833,2532,6.778,2533,7.6]],["title/index.html",[7,0.153,2534,4.082,2535,4.082]],["body/index.html",[4,0.04,11,0.006,26,0.004,27,0.004,64,3.998,112,3.773,233,1.91,427,3.548,618,1.463,1162,3.43,2480,3.43,2481,5.317,2536,4.179,2537,4.179,2538,6.949,2539,5.961,2540,4.179,2541,4.179,2542,4.179,2543,4.179,2544,5.961,2545,6.949,2546,4.179,2547,4.179,2548,7.577,2549,4.179,2550,8.765,2551,4.179,2552,8.573,2553,4.179,2554,4.179,2555,4.179,2556,4.179,2557,5.961,2558,4.179,2559,6.949,2560,4.179,2561,5.961,2562,4.179,2563,4.179,2564,4.179,2565,4.179,2566,4.179,2567,7.577,2568,8.765,2569,8.329,2570,4.179,2571,5.961,2572,4.179,2573,4.179,2574,4.179,2575,4.179,2576,4.179,2577,8.329,2578,5.961,2579,7.577,2580,4.179,2581,5.961,2582,4.179,2583,4.179,2584,5.961,2585,8.329,2586,7.577,2587,4.179,2588,5.961,2589,4.179,2590,4.179,2591,4.179,2592,4.179,2593,7.577,2594,4.179,2595,4.179,2596,4.179,2597,4.179,2598,5.961,2599,4.179,2600,4.179,2601,4.179,2602,4.179,2603,4.179,2604,5.961,2605,4.179,2606,4.179,2607,4.179,2608,5.961,2609,4.179,2610,4.179,2611,6.758,2612,5.961,2613,4.179,2614,4.179,2615,4.179,2616,4.179,2617,4.179,2618,4.179,2619,4.179,2620,4.179,2621,5.961,2622,4.179,2623,4.179,2624,4.179,2625,4.179,2626,4.179,2627,4.179,2628,4.179,2629,4.179,2630,4.179,2631,4.179,2632,5.961,2633,4.179,2634,4.179,2635,4.179,2636,4.179,2637,4.179,2638,5.961,2639,4.179,2640,4.179,2641,4.179,2642,5.961,2643,5.961,2644,4.179,2645,4.179,2646,4.179,2647,4.179,2648,4.179,2649,4.179,2650,4.179,2651,4.179,2652,4.179,2653,4.179,2654,4.179,2655,3.727,2656,4.179,2657,4.179,2658,4.179,2659,4.179,2660,4.179,2661,4.179,2662,3.727]],["title/modules.html",[30,3.109]],["body/modules.html",[11,0.005,26,0.005,27,0.005,29,4.704,30,2.87,40,4.227,41,4.444,42,4.444,43,4.444,44,4.444,45,4.227,46,4.444,47,4.444,48,4.444,49,4.444,50,4.444,51,3.735,52,4.444,53,4.444,2611,8.859,2663,9.933,2664,9.933,2665,9.933]],["title/overview.html",[2666,5.922]],["body/overview.html",[2,1.201,11,0.006,18,3.986,26,0.003,27,0.003,28,1.089,29,7.598,30,1.434,31,1.434,32,1.508,33,1.508,34,1.434,35,1.508,36,1.508,37,2.731,38,2.731,39,2.731,40,6.366,41,5.615,42,6.282,43,5.095,44,5.615,45,5.341,46,5.095,47,6.282,48,6.282,49,5.095,50,5.095,51,5.28,52,6.282,53,6.282,54,3.986,55,4.287,56,3.618,57,5.274,58,4.287,59,4.287,60,4.551,61,5.517,62,2.33,63,1.508,64,1.47,85,3.986,121,1.177,186,2.847,257,5.341,293,2.731,294,2.731,295,2.731,296,3.811,297,4.191,298,3.469,299,5.063,412,0.312,442,4.191,803,2.513,1130,5.341,1187,2.35,1277,5.106,1307,2.731,1308,2.731,1310,2.731,1403,3.986,1458,2.731,1459,2.731,1492,3.986,1515,2.731,1517,2.731,1601,2.731,1602,2.731,1656,3.986,1677,2.731,1678,2.731,1814,2.731,1817,2.731,1875,5.341,1893,2.731,1895,2.731,1896,2.731,2206,2.731,2207,2.731,2208,2.731,2367,2.731,2370,2.731,2453,2.731,2454,2.731,2455,2.731,2666,2.731,2667,3.062,2668,3.062,2669,3.062,2670,3.062]],["title/properties.html",[415,0.608,2510,3.641]],["body/properties.html",[11,0.006,26,0.005,27,0.005,233,3.438,415,0.781,2655,6.707,2662,6.707,2671,7.521,2672,7.521,2673,7.521]],["title/miscellaneous/variables.html",[2531,3.133,2674,5.228]],["body/miscellaneous/variables.html",[7,0.22,11,0.006,15,0.493,24,2.385,26,0.005,27,0.005,86,4.56,133,4.239,138,0.237,144,6.335,147,3.059,150,5.215,151,4.798,156,5.215,159,3.562,161,5.215,181,3.7,183,3.562,190,4.487,205,2.495,219,4.798,226,3.039,348,2.611,362,2.611,407,4.032,410,6.142,456,5.692,457,5.442,673,3.223,1036,4.239,1188,4.487,1195,5.743,1196,4.798,1259,4.239,1305,4.798,1612,5.215,1614,5.215,1618,6.142,1650,4.798,2506,5.215,2531,4.487,2674,5.215,2675,7.484,2676,5.847,2677,7.484,2678,7.484,2679,5.847,2680,5.847,2681,7.484,2682,5.847,2683,5.847,2684,5.847,2685,5.847,2686,5.847,2687,5.847]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":190,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":2672,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2501,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2502,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2503,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2496,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["09:00",{"_index":629,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["1",{"_index":283,"title":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Privilege-1.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["10",{"_index":2410,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["1000",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["103",{"_index":2669,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["1234567890",{"_index":810,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["1234567890'})@isnotempty()@matches(/^\\+?\\d{9,15",{"_index":795,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["12:00",{"_index":647,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["12:30",{"_index":652,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["13",{"_index":2667,"title":{},"body":{"overview.html":{}}}],["15",{"_index":803,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"overview.html":{}}}],["16:00",{"_index":637,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["1h",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["1})@isnotempty",{"_index":789,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["1})@isnotempty()@isint",{"_index":755,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{}}}],["2",{"_index":435,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["2.6.0",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/ResponseService.html":{},"controllers/UtilisateurController.html":{}}}],["201",{"_index":1381,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"injectables/ResponseService.html":{},"controllers/UtilisateurController.html":{}}}],["221786360662",{"_index":2201,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["221786360662'})@validateif(o",{"_index":2188,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["26",{"_index":2668,"title":{},"body":{"overview.html":{}}}],["2})@validateif(o",{"_index":2168,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["3",{"_index":2670,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["3]):([0",{"_index":632,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["4.0.1",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1775,"title":{},"body":{"injectables/ResponseService.html":{}}}],["401",{"_index":1647,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/ResponseService.html":{}}}],["403",{"_index":1776,"title":{},"body":{"injectables/ResponseService.html":{}}}],["404",{"_index":1777,"title":{},"body":{"injectables/ResponseService.html":{},"controllers/UtilisateurController.html":{}}}],["409",{"_index":1779,"title":{},"body":{"injectables/ResponseService.html":{}}}],["5",{"_index":599,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["5.0.1",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1778,"title":{},"body":{"injectables/ResponseService.html":{}}}],["5]\\d",{"_index":633,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["6.5.0",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2491,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2176,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["8/10",{"_index":2495,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":802,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["access_token",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":2461,"title":{},"body":{"modules/ValidationModule.html":{}}}],["accesstoken",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["accès",{"_index":1346,"title":{},"body":{"injectables/LogService.html":{},"injectables/ResponseService.html":{},"modules/UtilisateurModule.html":{}}}],["accéder",{"_index":1233,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{}}}],["actif",{"_index":593,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateTarifDto.html":{}}}],["actifs",{"_index":1937,"title":{},"body":{"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["action",{"_index":673,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateLogDto.html":{},"miscellaneous/variables.html":{}}}],["activ",{"_index":2094,"title":{},"body":{"injectables/TarifService.html":{}}}],["activate",{"_index":833,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["activate(@param('id",{"_index":885,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["activate(id",{"_index":839,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["activateddevise",{"_index":943,"title":{},"body":{"injectables/DeviseService.html":{}}}],["activatedtarif",{"_index":2092,"title":{},"body":{"injectables/TarifService.html":{}}}],["active",{"_index":906,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["activer",{"_index":841,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{}}}],["actives",{"_index":909,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["activée",{"_index":930,"title":{},"body":{"injectables/DeviseService.html":{}}}],["actuelle",{"_index":1029,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["adaptez",{"_index":1313,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["admin",{"_index":727,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["admin'].includes(user.privilege.libelle",{"_index":1043,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["admin'})@isnotempty({message",{"_index":720,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{}}}],["admin'})@validateif(o",{"_index":2183,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["administrateur",{"_index":1437,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["administrateurs",{"_index":1046,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["adminuser",{"_index":2399,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["adminuser.privilege?.libelle",{"_index":2400,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["afficher",{"_index":1936,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["ajout",{"_index":1382,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/UtilisateurModule.html":{}}}],["ajoute",{"_index":2212,"title":{},"body":{"modules/UploadModule.html":{}}}],["ajouter",{"_index":1099,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{}}}],["allowing",{"_index":2599,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":2648,"title":{},"body":{"index.html":{}}}],["ancienmotdepasse123",{"_index":428,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["ancienmotdepasse123'})@isnotempty",{"_index":421,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["api_key",{"_index":472,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["api_secret",{"_index":474,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["apibearerauth",{"_index":974,"title":{},"body":{"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["apibearerauth('access",{"_index":1280,"title":{},"body":{"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["apibody",{"_index":1496,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["apiconsumes",{"_index":1495,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["apiconsumes('application/json",{"_index":1950,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["apiconsumes('multipart/form",{"_index":1500,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["apioperation",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["apiparam",{"_index":1947,"title":{},"body":{"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["apiproperty",{"_index":423,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["apiproperty({description",{"_index":698,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["apiproperty({example",{"_index":418,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{}}}],["apiproperty({type",{"_index":525,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["apipropertyoptional",{"_index":806,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["apipropertyoptional({example",{"_index":2164,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["apipropertyoptional({type",{"_index":2185,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["apiquery",{"_index":2018,"title":{},"body":{"controllers/TarifController.html":{}}}],["apiresponse",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/UtilisateurController.html":{}}}],["apitags",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["apitags('authentification",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('devises",{"_index":873,"title":{},"body":{"controllers/DeviseController.html":{}}}],["apitags('disponibilités",{"_index":975,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["apitags('logs",{"_index":1279,"title":{},"body":{"controllers/LogController.html":{}}}],["apitags('mode",{"_index":1497,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["apitags('médecins",{"_index":1405,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["apitags('privilèges",{"_index":1659,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["apitags('services",{"_index":1798,"title":{},"body":{"controllers/ServiceController.html":{}}}],["apitags('sous",{"_index":1876,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["apitags('statuts",{"_index":1948,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["apitags('tarifs",{"_index":2019,"title":{},"body":{"controllers/TarifController.html":{}}}],["apitags('utilisateurs",{"_index":2331,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["app.controller",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2569,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1884,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["applications",{"_index":2544,"title":{},"body":{"index.html":{}}}],["appliquée",{"_index":188,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arborescence",{"_index":1328,"title":{},"body":{"injectables/LogService.html":{}}}],["arg0",{"_index":1143,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["asc",{"_index":1082,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["associ",{"_index":1446,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["associer",{"_index":1379,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["async",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["asynccontextinterceptor",{"_index":126,"title":{"injectables/AsyncContextInterceptor.html":{}},"body":{"injectables/AsyncContextInterceptor.html":{},"coverage.html":{}}}],["asynccontextmiddleware",{"_index":167,"title":{"injectables/AsyncContextMiddleware.html":{}},"body":{"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["asynclocalstorage",{"_index":144,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asynclocalstorage.getstore",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asynclocalstorage.run(context",{"_index":200,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["asynclocalstorage.run(store",{"_index":166,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["au",{"_index":1069,"title":{},"body":{"injectables/DisponibiliteService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["auth.guard.ts",{"_index":1218,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":1226,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":1228,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:6",{"_index":1224,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["auth.service",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/UtilisateurModule.html":{}}}],["auth/jwt",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DisponibiliteController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["auth/optional",{"_index":2328,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["authcontroller",{"_index":201,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentifi",{"_index":196,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["authentifier",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1229,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1220,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["authheader",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["authheader?.split",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule,uploadmodule",{"_index":2375,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["author",{"_index":2655,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":257,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoris",{"_index":1533,"title":{},"body":{"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["autorisés",{"_index":1038,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["autre",{"_index":193,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["autres",{"_index":844,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"modules/ValidationModule.html":{}}}],["available",{"_index":1625,"title":{},"body":{"injectables/PrismaService.html":{}}}],["avec",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["avoir",{"_index":2374,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["await",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":2588,"title":{},"body":{"index.html":{}}}],["ayant",{"_index":2311,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["babaissandiaye242@gmail.com",{"_index":586,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{}}}],["babaissandiaye242@gmail.com'})@isnotempty()@isemail",{"_index":580,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{}}}],["backers",{"_index":2649,"title":{},"body":{"index.html":{}}}],["badrequest",{"_index":1741,"title":{},"body":{"injectables/ResponseService.html":{}}}],["badrequest(errors",{"_index":1748,"title":{},"body":{"injectables/ResponseService.html":{}}}],["badrequestexception",{"_index":914,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/UtilisateurService.html":{}}}],["badrequestexception(\"aucune",{"_index":2425,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["badrequestexception('une",{"_index":918,"title":{},"body":{"injectables/DeviseService.html":{}}}],["badrequestexception(`jour",{"_index":1060,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["based",{"_index":2583,"title":{},"body":{"index.html":{}}}],["basedir",{"_index":2219,"title":{},"body":{"injectables/UploadService.html":{}}}],["batch",{"_index":510,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["bcrypt",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createutilisateurdto.password",{"_index":2409,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["bcrypt.hash(updateutilisateurdto.password",{"_index":2438,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["bearer",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["binary",{"_index":695,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["binary'})@isoptional",{"_index":2186,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["blacklist",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["blacklist/blacklist.service",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["blacklistservice",{"_index":296,"title":{"injectables/BlacklistService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["blacklisttoken",{"_index":397,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["blacklisttoken(token",{"_index":402,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["board",{"_index":2641,"title":{},"body":{"index.html":{}}}],["body",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["boolean",{"_index":595,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateTarifDto.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2665,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2663,"title":{},"body":{"modules.html":{}}}],["building",{"_index":2539,"title":{},"body":{"index.html":{}}}],["calcul",{"_index":1027,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["callhandler",{"_index":134,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["canactivate",{"_index":1221,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1225,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["caractères",{"_index":726,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["caractères'})@matches(/^(?=.*[a",{"_index":2177,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["cas",{"_index":2354,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["catch",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/PrismaService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{}}}],["ce",{"_index":919,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/TarifService.html":{},"modules/ValidationModule.html":{}}}],["cette",{"_index":1234,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{}}}],["ceux",{"_index":2310,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["chambres",{"_index":460,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["champs",{"_index":2324,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["chang",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassword",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@request",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(req",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(utilisateurid",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassworddto",{"_index":211,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changeprivilege",{"_index":2378,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["changeprivilege(id",{"_index":2382,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["changeprivilegedto",{"_index":431,"title":{"classes/ChangePrivilegeDto.html":{}},"body":{"classes/ChangePrivilegeDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["changeprivilegedto.idprivilege",{"_index":2449,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["changer",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["channel",{"_index":2614,"title":{},"body":{"index.html":{}}}],["chaque",{"_index":1101,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["chaîne",{"_index":725,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{}}}],["check",{"_index":2577,"title":{},"body":{"index.html":{}}}],["chemin",{"_index":1314,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["chiffres",{"_index":804,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["chographie",{"_index":757,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["chographie'})@isnotempty",{"_index":756,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{}}}],["choisissez",{"_index":1061,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["chouée",{"_index":1697,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["class",{"_index":21,"title":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"classes/UtilisateurDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":412,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"classes/UtilisateurDto.html":{},"overview.html":{}}}],["clicks",{"_index":2598,"title":{},"body":{"index.html":{}}}],["client",{"_index":2312,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["clients",{"_index":2339,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["clients')@apibearerauth('access",{"_index":2308,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["cloud",{"_index":2582,"title":{},"body":{"index.html":{}}}],["cloud_name",{"_index":470,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary",{"_index":465,"title":{},"body":{"injectables/CloudinaryService.html":{},"dependencies.html":{}}}],["cloudinary.config",{"_index":469,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary.uploader.destroy(fileid",{"_index":515,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary.uploader.upload_stream",{"_index":479,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary/cloudinary.service",{"_index":2210,"title":{},"body":{"modules/UploadModule.html":{}}}],["cloudinaryservice",{"_index":442,"title":{"injectables/CloudinaryService.html":{}},"body":{"injectables/CloudinaryService.html":{},"modules/UploadModule.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_disponibilitemodule",{"_index":992,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["cluster_disponibilitemodule_providers",{"_index":993,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["cluster_logmodule",{"_index":1307,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_exports",{"_index":1308,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_imports",{"_index":1309,"title":{},"body":{"modules/LogModule.html":{}}}],["cluster_logmodule_providers",{"_index":1310,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_medecinsousservicemodule",{"_index":1458,"title":{},"body":{"modules/MedecinSousserviceModule.html":{},"overview.html":{}}}],["cluster_medecinsousservicemodule_providers",{"_index":1459,"title":{},"body":{"modules/MedecinSousserviceModule.html":{},"overview.html":{}}}],["cluster_modepaiementmodule",{"_index":1515,"title":{},"body":{"modules/ModePaiementModule.html":{},"overview.html":{}}}],["cluster_modepaiementmodule_imports",{"_index":1516,"title":{},"body":{"modules/ModePaiementModule.html":{}}}],["cluster_modepaiementmodule_providers",{"_index":1517,"title":{},"body":{"modules/ModePaiementModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":1601,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1602,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1603,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_privilegemodule",{"_index":1677,"title":{},"body":{"modules/PrivilegeModule.html":{},"overview.html":{}}}],["cluster_privilegemodule_providers",{"_index":1678,"title":{},"body":{"modules/PrivilegeModule.html":{},"overview.html":{}}}],["cluster_servicemodule",{"_index":1814,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_exports",{"_index":1817,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_imports",{"_index":1815,"title":{},"body":{"modules/ServiceModule.html":{}}}],["cluster_servicemodule_providers",{"_index":1816,"title":{},"body":{"modules/ServiceModule.html":{}}}],["cluster_sousservicemodule",{"_index":1893,"title":{},"body":{"modules/SousServiceModule.html":{},"overview.html":{}}}],["cluster_sousservicemodule_exports",{"_index":1896,"title":{},"body":{"modules/SousServiceModule.html":{},"overview.html":{}}}],["cluster_sousservicemodule_imports",{"_index":1894,"title":{},"body":{"modules/SousServiceModule.html":{}}}],["cluster_sousservicemodule_providers",{"_index":1895,"title":{},"body":{"modules/SousServiceModule.html":{},"overview.html":{}}}],["cluster_statutreservationmodule",{"_index":1958,"title":{},"body":{"modules/StatutReservationModule.html":{}}}],["cluster_statutreservationmodule_providers",{"_index":1959,"title":{},"body":{"modules/StatutReservationModule.html":{}}}],["cluster_tarifmodule",{"_index":2044,"title":{},"body":{"modules/TarifModule.html":{}}}],["cluster_tarifmodule_providers",{"_index":2045,"title":{},"body":{"modules/TarifModule.html":{}}}],["cluster_uploadmodule",{"_index":2206,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_uploadmodule_exports",{"_index":2208,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_uploadmodule_providers",{"_index":2207,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule",{"_index":2367,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_exports",{"_index":2370,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_imports",{"_index":2368,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["cluster_utilisateurmodule_providers",{"_index":2369,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["cluster_validationmodule",{"_index":2453,"title":{},"body":{"modules/ValidationModule.html":{},"overview.html":{}}}],["cluster_validationmodule_exports",{"_index":2454,"title":{},"body":{"modules/ValidationModule.html":{},"overview.html":{}}}],["cluster_validationmodule_providers",{"_index":2455,"title":{},"body":{"modules/ValidationModule.html":{},"overview.html":{}}}],["code",{"_index":524,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto-1.html":{}}}],["come",{"_index":2605,"title":{},"body":{"index.html":{}}}],["commencer",{"_index":798,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["concern",{"_index":1454,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["configmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_expires_in",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmée",{"_index":764,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["confirmée'})@isnotempty()@isstring",{"_index":762,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{}}}],["confirmée'})@isoptional()@isstring",{"_index":2150,"title":{},"body":{"classes/UpdateStatutReservationDto-1.html":{}}}],["conflict",{"_index":1742,"title":{},"body":{"injectables/ResponseService.html":{}}}],["conflict(message",{"_index":1751,"title":{},"body":{"injectables/ResponseService.html":{}}}],["conflictexception",{"_index":1529,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["conflictexception(this.responseservice.conflict(\"ce",{"_index":1970,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["conflictexception(this.responseservice.conflict(`mode",{"_index":1540,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["conflictexception(this.responseservice.conflict(`service",{"_index":1843,"title":{},"body":{"injectables/ServiceService.html":{}}}],["conflictexception(this.responseservice.conflict(`un",{"_index":1834,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["conflit",{"_index":1753,"title":{},"body":{"injectables/ResponseService.html":{}}}],["connect",{"_index":1036,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"miscellaneous/variables.html":{}}}],["connectdevisedto",{"_index":521,"title":{"classes/ConnectDeviseDto.html":{}},"body":{"classes/ConnectDeviseDto.html":{},"coverage.html":{}}}],["connectdisponibilitedto",{"_index":533,"title":{"classes/ConnectDisponibiliteDto.html":{}},"body":{"classes/ConnectDisponibiliteDto.html":{},"coverage.html":{}}}],["connectdossiermedicaldto",{"_index":536,"title":{"classes/ConnectDossierMedicalDto.html":{}},"body":{"classes/ConnectDossierMedicalDto.html":{},"coverage.html":{}}}],["connected",{"_index":1623,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connectlogdto",{"_index":539,"title":{"classes/ConnectLogDto.html":{}},"body":{"classes/ConnectLogDto.html":{},"coverage.html":{}}}],["connectmedecinsousservicedto",{"_index":542,"title":{"classes/ConnectMedecinSousServiceDto.html":{}},"body":{"classes/ConnectMedecinSousServiceDto.html":{},"coverage.html":{}}}],["connectmodepaiementdto",{"_index":545,"title":{"classes/ConnectModePaiementDto.html":{}},"body":{"classes/ConnectModePaiementDto.html":{},"coverage.html":{}}}],["connectordonnancedto",{"_index":550,"title":{"classes/ConnectOrdonnanceDto.html":{}},"body":{"classes/ConnectOrdonnanceDto.html":{},"coverage.html":{}}}],["connectpaiementdto",{"_index":553,"title":{"classes/ConnectPaiementDto.html":{}},"body":{"classes/ConnectPaiementDto.html":{},"coverage.html":{}}}],["connectprivilegedto",{"_index":558,"title":{"classes/ConnectPrivilegeDto.html":{}},"body":{"classes/ConnectPrivilegeDto.html":{},"coverage.html":{}}}],["connectreservationdto",{"_index":561,"title":{"classes/ConnectReservationDto.html":{}},"body":{"classes/ConnectReservationDto.html":{},"coverage.html":{}}}],["connectservicedto",{"_index":564,"title":{"classes/ConnectServiceDto.html":{}},"body":{"classes/ConnectServiceDto.html":{},"coverage.html":{}}}],["connectsousservicedto",{"_index":568,"title":{"classes/ConnectSousServiceDto.html":{}},"body":{"classes/ConnectSousServiceDto.html":{},"coverage.html":{}}}],["connectstatutreservationdto",{"_index":571,"title":{"classes/ConnectStatutReservationDto.html":{}},"body":{"classes/ConnectStatutReservationDto.html":{},"coverage.html":{}}}],["connecttarifdto",{"_index":575,"title":{"classes/ConnectTarifDto.html":{}},"body":{"classes/ConnectTarifDto.html":{},"coverage.html":{}}}],["connectutilisateurdto",{"_index":223,"title":{"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"coverage.html":{}}}],["connectutilisateurdto.password",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["connexion",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["console.error",{"_index":1628,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":1622,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":147,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["constructor(eventemitter",{"_index":1611,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(exceptionservice",{"_index":2467,"title":{},"body":{"injectables/ValidationService.html":{}}}],["constructor(httpresponseservice",{"_index":1138,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["constructor(logservice",{"_index":1297,"title":{},"body":{"injectables/LogListener.html":{}}}],["constructor(prisma",{"_index":399,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/BlacklistService.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"injectables/ValidationService.html":{}}}],["constructor(responseservice",{"_index":1223,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(utilisateurservice",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["contactez",{"_index":2397,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["contenant",{"_index":1820,"title":{},"body":{"modules/ServiceModule.html":{}}}],["contenir",{"_index":800,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["contenu",{"_index":504,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/UpdateOrdonnanceDto.html":{}}}],["context",{"_index":140,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["context.interceptor.ts",{"_index":129,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"coverage.html":{}}}],["context.interceptor.ts:7",{"_index":135,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["context.middleware.ts",{"_index":169,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["context.middleware.ts:7",{"_index":175,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["context.switchtohttp().getrequest",{"_index":149,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["context/async",{"_index":128,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["continue",{"_index":1559,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('devises",{"_index":874,"title":{},"body":{"controllers/DeviseController.html":{}}}],["controller('disponibilites",{"_index":976,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["controller('logs",{"_index":1281,"title":{},"body":{"controllers/LogController.html":{}}}],["controller('medecin",{"_index":1407,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["controller('mode",{"_index":1498,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["controller('privileges",{"_index":1664,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["controller('services",{"_index":1799,"title":{},"body":{"controllers/ServiceController.html":{}}}],["controller('sous",{"_index":1877,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["controller('statuts",{"_index":1949,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["controller('tarifs",{"_index":2020,"title":{},"body":{"controllers/TarifController.html":{}}}],["controller('utilisateur",{"_index":2332,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"controllers/MedecinSousServiceController.html":{},"modules/MedecinSousserviceModule.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["convertir",{"_index":1032,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["courses",{"_index":2620,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2480,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cr",{"_index":1547,"title":{},"body":{"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["create",{"_index":834,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["create(@body",{"_index":875,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["create(@request",{"_index":1501,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["create(createdevisedto",{"_index":903,"title":{},"body":{"injectables/DeviseService.html":{}}}],["create(createdisponibilitedto",{"_index":1004,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["create(createprivilegedto",{"_index":1644,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{}}}],["create(createservicedto",{"_index":1823,"title":{},"body":{"injectables/ServiceService.html":{}}}],["create(createsousservicedto",{"_index":1900,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["create(createtarifdto",{"_index":2053,"title":{},"body":{"injectables/TarifService.html":{}}}],["create(createutilisateurdto",{"_index":2384,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["create(dto",{"_index":846,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{}}}],["create(file",{"_index":2296,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["create(req",{"_index":1475,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["createbadrequestexception",{"_index":1132,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createbadrequestexception(arg0",{"_index":1141,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["created",{"_index":1447,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/ResponseService.html":{},"injectables/StatutReservationService.html":{}}}],["created(data",{"_index":1755,"title":{},"body":{"injectables/ResponseService.html":{}}}],["createdat",{"_index":816,"title":{},"body":{"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["createdevisedto",{"_index":591,"title":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto.html":{},"coverage.html":{}}}],["createdevisedto.actif",{"_index":923,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdevisedto.code",{"_index":917,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdevisedto.libelle",{"_index":926,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdevisedto.symbole",{"_index":927,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdisponibilitedto",{"_index":621,"title":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{}},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto.html":{},"coverage.html":{}}}],["createdisponibilitedto.heuredebut",{"_index":1074,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.heurefin",{"_index":1075,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.idmedecinsousservice",{"_index":1067,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.joursemaine.trim().tolowercase",{"_index":1058,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.pausedebut",{"_index":1076,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.pausefin",{"_index":1077,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdossiermedicaldto",{"_index":664,"title":{"classes/CreateDossierMedicalDto.html":{}},"body":{"classes/CreateDossierMedicalDto.html":{},"coverage.html":{}}}],["createforbiddenexception",{"_index":1133,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createforbiddenexception(message",{"_index":1144,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createinternalserverexception",{"_index":1134,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createinternalserverexception(message",{"_index":1147,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createlog",{"_index":1316,"title":{},"body":{"injectables/LogService.html":{}}}],["createlog(payload",{"_index":1319,"title":{},"body":{"injectables/LogService.html":{}}}],["createlogdto",{"_index":672,"title":{"classes/CreateLogDto.html":{}},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["createmedecinsousservicedto",{"_index":677,"title":{"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{}},"body":{"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"coverage.html":{}}}],["createmodepaiementdto",{"_index":687,"title":{"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{}},"body":{"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"coverage.html":{}}}],["createnotfoundexception",{"_index":1135,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createnotfoundexception(message",{"_index":1149,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createordonnancedto",{"_index":705,"title":{"classes/CreateOrdonnanceDto.html":{}},"body":{"classes/CreateOrdonnanceDto.html":{},"coverage.html":{}}}],["createpaiementdto",{"_index":708,"title":{"classes/CreatePaiementDto.html":{}},"body":{"classes/CreatePaiementDto.html":{},"coverage.html":{}}}],["createprivilegedto",{"_index":717,"title":{"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{}},"body":{"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["createprivilegedto.libelle",{"_index":1694,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["createreservationdto",{"_index":728,"title":{"classes/CreateReservationDto.html":{}},"body":{"classes/CreateReservationDto.html":{},"coverage.html":{}}}],["createservicedto",{"_index":734,"title":{"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{}},"body":{"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["createservicedto.iconurl",{"_index":1835,"title":{},"body":{"injectables/ServiceService.html":{}}}],["createservicedto.libelle",{"_index":1833,"title":{},"body":{"injectables/ServiceService.html":{}}}],["createsousservicedto",{"_index":745,"title":{"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{}},"body":{"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"coverage.html":{}}}],["createsousservicedto.iconurl",{"_index":1911,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["createsousservicedto.libelle",{"_index":1910,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["createstatutreservationdto",{"_index":758,"title":{"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{}},"body":{"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"coverage.html":{}}}],["createtarifdto",{"_index":765,"title":{"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{}},"body":{"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["createtarifdto.actif",{"_index":2071,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtarifdto.iddevise",{"_index":2066,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtarifdto.idsousservice",{"_index":2064,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtarifdto.montant",{"_index":2070,"title":{},"body":{"injectables/TarifService.html":{}}}],["createutilisateurdto",{"_index":776,"title":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{}},"body":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["createutilisateurdto.email",{"_index":2402,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.idprivilege",{"_index":2395,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.nom",{"_index":2411,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.prenom",{"_index":2412,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.telephone",{"_index":2406,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createvalidationexception",{"_index":1136,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createvalidationexception(errors",{"_index":1151,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["crypto",{"_index":2238,"title":{},"body":{"injectables/UploadService.html":{}}}],["crypto.randombytes(8).tostring('hex",{"_index":2249,"title":{},"body":{"injectables/UploadService.html":{}}}],["création",{"_index":1072,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{}}}],["crée",{"_index":156,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"miscellaneous/variables.html":{}}}],["créer",{"_index":848,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["créneaux",{"_index":1012,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["créée",{"_index":929,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ResponseService.html":{}}}],["currentheure",{"_index":1095,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["currentuser",{"_index":1005,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["currentuser.id",{"_index":1041,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["d'autres",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{}}}],["d'en",{"_index":1071,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["d'un",{"_index":969,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{}}}],["d'upload",{"_index":489,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["d'utilisateur",{"_index":164,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["dans",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogService.html":{},"controllers/UtilisateurController.html":{},"modules/ValidationModule.html":{}}}],["data",{"_index":409,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["data')@apibearerauth('access",{"_index":2298,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["data')@apibody({type",{"_index":1477,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["data.email",{"_index":2435,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.idprivilege",{"_index":2442,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.nom",{"_index":2431,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.password",{"_index":2437,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.prenom",{"_index":2433,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.profil",{"_index":2444,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.profilurl",{"_index":2414,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.telephone",{"_index":2440,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["database",{"_index":1624,"title":{},"body":{"injectables/PrismaService.html":{}}}],["database_connection",{"_index":1195,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":403,"title":{},"body":{"injectables/BlacklistService.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["date().toisostring",{"_index":1774,"title":{},"body":{"injectables/ResponseService.html":{}}}],["date(decoded.exp",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["datecreation",{"_index":1258,"title":{},"body":{"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{}}}],["datemiseajour",{"_index":665,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["de",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["deactivate",{"_index":1992,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["deactivate(@param('id",{"_index":2034,"title":{},"body":{"controllers/TarifController.html":{}}}],["deactivate(id",{"_index":1997,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["decoded",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{}}}],["deeper",{"_index":2616,"title":{},"body":{"index.html":{}}}],["default",{"_index":456,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"injectables/ResponseService.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["delete",{"_index":835,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["delete(':id",{"_index":887,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["delete(':id')@apibearerauth('access",{"_index":1394,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":852,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["delete(':id')@useguards(jwtauthguard)@apibearerauth('access",{"_index":2321,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["delete(@param('id",{"_index":888,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["delete(id",{"_index":851,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["delete)'})@apiparam({name",{"_index":1941,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["delete)'})@apiresponse({status",{"_index":1395,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["deletedat",{"_index":615,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["deletefile",{"_index":445,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["deletefile(fileid",{"_index":449,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["deletefile(filepath",{"_index":1189,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2567,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":2587,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2578,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":2597,"title":{},"body":{"index.html":{}}}],["depuis",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["des",{"_index":513,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["desc",{"_index":1350,"title":{},"body":{"injectables/LogService.html":{}}}],["description",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePrivilegeDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"controllers/UtilisateurController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1305,"title":{},"body":{"injectables/LogListener.html":{},"injectables/LogService.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":2553,"title":{},"body":{"index.html":{}}}],["devez",{"_index":1035,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/PrivilegeService.html":{}}}],["devise",{"_index":814,"title":{"classes/Devise.html":{}},"body":{"classes/Devise.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/Tarif.html":{},"injectables/TarifService.html":{},"coverage.html":{}}}],["devise.dto",{"_index":871,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto.html":{}}}],["devise.dto.ts",{"_index":523,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"coverage.html":{}}}],["devise.dto.ts:11",{"_index":602,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:12",{"_index":2106,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:13",{"_index":532,"title":{},"body":{"classes/ConnectDeviseDto.html":{}}}],["devise.dto.ts:15",{"_index":603,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:17",{"_index":2108,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:18",{"_index":528,"title":{},"body":{"classes/ConnectDeviseDto.html":{}}}],["devise.dto.ts:19",{"_index":597,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:22",{"_index":2109,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:23",{"_index":616,"title":{},"body":{"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:27",{"_index":2105,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:30",{"_index":620,"title":{},"body":{"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:34",{"_index":2107,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:7",{"_index":600,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["devise.entity",{"_index":1990,"title":{},"body":{"classes/Tarif.html":{}}}],["devise.service",{"_index":870,"title":{},"body":{"controllers/DeviseController.html":{}}}],["devise/devise.controller",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["devise/devise.service",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["devisecontroller",{"_index":67,"title":{"controllers/DeviseController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DeviseController.html":{},"coverage.html":{}}}],["devisedto",{"_index":890,"title":{"classes/DeviseDto.html":{}},"body":{"classes/DeviseDto.html":{},"coverage.html":{}}}],["devises",{"_index":832,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{}}}],["deviseservice",{"_index":54,"title":{"injectables/DeviseService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"coverage.html":{},"overview.html":{}}}],["devtools",{"_index":2627,"title":{},"body":{"index.html":{}}}],["dimanche",{"_index":1056,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["dirpath",{"_index":2242,"title":{},"body":{"injectables/UploadService.html":{}}}],["disable",{"_index":1160,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["discord",{"_index":2613,"title":{},"body":{"index.html":{}}}],["dispo",{"_index":1104,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["dispo.idmedecinsousservice",{"_index":1105,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["disponibilit",{"_index":658,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{}}}],["disponibilite",{"_index":946,"title":{"classes/Disponibilite.html":{}},"body":{"classes/Disponibilite.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"coverage.html":{}}}],["disponibilite.controller",{"_index":995,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["disponibilite.dto",{"_index":972,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts",{"_index":534,"title":{},"body":{"classes/ConnectDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"coverage.html":{}}}],["disponibilite.dto.ts:11",{"_index":663,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:12",{"_index":535,"title":{},"body":{"classes/ConnectDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:13",{"_index":646,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:15",{"_index":661,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:17",{"_index":2113,"title":{},"body":{"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:18",{"_index":636,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:19",{"_index":662,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:22",{"_index":2114,"title":{},"body":{"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:23",{"_index":639,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:26",{"_index":660,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:28",{"_index":651,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:29",{"_index":2112,"title":{},"body":{"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:33",{"_index":654,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:8",{"_index":642,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.entity",{"_index":1371,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["disponibilite.idmedecinsousservice",{"_index":1088,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["disponibilite.service",{"_index":971,"title":{},"body":{"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{}}}],["disponibilite/disponibilite.controller",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["disponibilite/disponibilite.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["disponibilite/disponibilite.service",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["disponibilitecontroller",{"_index":66,"title":{"controllers/DisponibiliteController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"coverage.html":{}}}],["disponibilitedto",{"_index":983,"title":{"classes/DisponibiliteDto.html":{}},"body":{"classes/DisponibiliteDto.html":{},"coverage.html":{}}}],["disponibilitemodule",{"_index":41,"title":{"modules/DisponibiliteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DisponibiliteModule.html":{},"modules.html":{},"overview.html":{}}}],["disponibilites",{"_index":960,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{}}}],["disponibiliteservice",{"_index":55,"title":{"injectables/DisponibiliteService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"coverage.html":{},"overview.html":{}}}],["disponibilité'})@isnotempty()@isstring",{"_index":645,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilités",{"_index":964,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{}}}],["disponible",{"_index":182,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["disponibles",{"_index":1013,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["dive",{"_index":2615,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2481,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":807,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["doe'})@isnotempty()@isstring",{"_index":791,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["doe'})@validateif(o",{"_index":2171,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["doit",{"_index":724,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"injectables/PrivilegeService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["donnée",{"_index":2426,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["dossiermedical",{"_index":1107,"title":{"classes/DossierMedical.html":{}},"body":{"classes/DossierMedical.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["dossiermedical.dto.ts",{"_index":537,"title":{},"body":{"classes/ConnectDossierMedicalDto.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{},"coverage.html":{}}}],["dossiermedical.dto.ts:11",{"_index":671,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:12",{"_index":538,"title":{},"body":{"classes/ConnectDossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:15",{"_index":670,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:17",{"_index":2118,"title":{},"body":{"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:20",{"_index":668,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:23",{"_index":2116,"title":{},"body":{"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:27",{"_index":669,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:30",{"_index":2117,"title":{},"body":{"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.entity",{"_index":2287,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dossiermedicaldto",{"_index":1121,"title":{"classes/DossierMedicalDto.html":{}},"body":{"classes/DossierMedicalDto.html":{},"coverage.html":{}}}],["dossiers",{"_index":2265,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto",{"_index":850,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{}}}],["dto.icon",{"_index":1541,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["dto.idmedecin",{"_index":1435,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["dto.idsousservice",{"_index":1430,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["dto.libelle",{"_index":1539,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{}}}],["dto/change",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["dto/connect",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"coverage.html":{}}}],["dto/create",{"_index":614,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["dto/devise.dto.ts",{"_index":891,"title":{},"body":{"classes/DeviseDto.html":{},"coverage.html":{}}}],["dto/devise.dto.ts:10",{"_index":896,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:14",{"_index":893,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:18",{"_index":897,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:22",{"_index":898,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:26",{"_index":892,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:31",{"_index":894,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:36",{"_index":899,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:42",{"_index":895,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.entity.ts",{"_index":815,"title":{},"body":{"classes/Devise.html":{},"coverage.html":{}}}],["dto/devise.entity.ts:11",{"_index":823,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:15",{"_index":820,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:19",{"_index":824,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:23",{"_index":825,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:27",{"_index":819,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:33",{"_index":828,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:38",{"_index":821,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:43",{"_index":829,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:49",{"_index":822,"title":{},"body":{"classes/Devise.html":{}}}],["dto/disponibilite.dto.ts",{"_index":984,"title":{},"body":{"classes/DisponibiliteDto.html":{},"coverage.html":{}}}],["dto/disponibilite.dto.ts:10",{"_index":989,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:14",{"_index":990,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:18",{"_index":987,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:22",{"_index":988,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:27",{"_index":985,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:32",{"_index":991,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:38",{"_index":986,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.entity.ts",{"_index":947,"title":{},"body":{"classes/Disponibilite.html":{},"coverage.html":{}}}],["dto/disponibilite.entity.ts:11",{"_index":953,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:16",{"_index":954,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:20",{"_index":955,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:24",{"_index":951,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:28",{"_index":952,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:33",{"_index":956,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:38",{"_index":949,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:43",{"_index":957,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:49",{"_index":950,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/dossiermedical.dto.ts",{"_index":1122,"title":{},"body":{"classes/DossierMedicalDto.html":{},"coverage.html":{}}}],["dto/dossiermedical.dto.ts:10",{"_index":1128,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:14",{"_index":1127,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:18",{"_index":1126,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:23",{"_index":1124,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:28",{"_index":1123,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:33",{"_index":1129,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:39",{"_index":1125,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.entity.ts",{"_index":1108,"title":{},"body":{"classes/DossierMedical.html":{},"coverage.html":{}}}],["dto/dossiermedical.entity.ts:11",{"_index":1116,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:16",{"_index":1117,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:20",{"_index":1115,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:24",{"_index":1114,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:29",{"_index":1112,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:34",{"_index":1118,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:39",{"_index":1111,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:44",{"_index":1119,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:50",{"_index":1113,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/log.dto.ts",{"_index":1286,"title":{},"body":{"classes/LogDto.html":{},"coverage.html":{}}}],["dto/log.dto.ts:10",{"_index":1291,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:14",{"_index":1287,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:18",{"_index":1292,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:23",{"_index":1289,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:28",{"_index":1288,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:33",{"_index":1293,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:39",{"_index":1290,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.entity.ts",{"_index":1257,"title":{},"body":{"classes/Log.html":{},"coverage.html":{}}}],["dto/log.entity.ts:11",{"_index":1264,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:16",{"_index":1265,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:20",{"_index":1260,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:24",{"_index":1266,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:29",{"_index":1262,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:34",{"_index":1268,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:39",{"_index":1261,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:44",{"_index":1267,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:50",{"_index":1263,"title":{},"body":{"classes/Log.html":{}}}],["dto/medecinsousservice.dto.ts",{"_index":1416,"title":{},"body":{"classes/MedecinSousServiceDto.html":{},"coverage.html":{}}}],["dto/medecinsousservice.dto.ts:10",{"_index":1419,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.dto.ts:15",{"_index":1417,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.dto.ts:20",{"_index":1420,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.dto.ts:26",{"_index":1418,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.entity.ts",{"_index":1357,"title":{},"body":{"classes/MedecinSousService.html":{},"coverage.html":{}}}],["dto/medecinsousservice.entity.ts:14",{"_index":1362,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:19",{"_index":1363,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:24",{"_index":1364,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:29",{"_index":1365,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:34",{"_index":1368,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:40",{"_index":1361,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:46",{"_index":1367,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:51",{"_index":1359,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:56",{"_index":1369,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:62",{"_index":1360,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/modepaiement.dto.ts",{"_index":1508,"title":{},"body":{"classes/ModePaiementDto.html":{},"coverage.html":{}}}],["dto/modepaiement.dto.ts:10",{"_index":1512,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:14",{"_index":1513,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:19",{"_index":1511,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:24",{"_index":1509,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:29",{"_index":1514,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:35",{"_index":1510,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.entity.ts",{"_index":1463,"title":{},"body":{"classes/ModePaiement.html":{},"coverage.html":{}}}],["dto/modepaiement.entity.ts:11",{"_index":1468,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:15",{"_index":1469,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:20",{"_index":1467,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:26",{"_index":1470,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:31",{"_index":1465,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:36",{"_index":1471,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:42",{"_index":1466,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/ordonnance.dto.ts",{"_index":1572,"title":{},"body":{"classes/OrdonnanceDto.html":{},"coverage.html":{}}}],["dto/ordonnance.dto.ts:10",{"_index":1576,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:14",{"_index":1573,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:19",{"_index":1574,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:24",{"_index":1577,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:30",{"_index":1575,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.entity.ts",{"_index":1561,"title":{},"body":{"classes/Ordonnance.html":{},"coverage.html":{}}}],["dto/ordonnance.entity.ts:11",{"_index":1565,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:16",{"_index":1567,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:21",{"_index":1566,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:25",{"_index":1562,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:30",{"_index":1569,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:35",{"_index":1568,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:40",{"_index":1563,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:45",{"_index":1570,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:51",{"_index":1564,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/paiement.dto.ts",{"_index":1593,"title":{},"body":{"classes/PaiementDto.html":{},"coverage.html":{}}}],["dto/paiement.dto.ts:10",{"_index":1597,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:15",{"_index":1598,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:19",{"_index":1599,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:23",{"_index":1596,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:28",{"_index":1594,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:33",{"_index":1600,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:39",{"_index":1595,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.entity.ts",{"_index":1578,"title":{},"body":{"classes/Paiement.html":{},"coverage.html":{}}}],["dto/paiement.entity.ts:12",{"_index":1583,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:17",{"_index":1585,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:22",{"_index":1587,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:27",{"_index":1584,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:31",{"_index":1588,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:35",{"_index":1582,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:40",{"_index":1589,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:45",{"_index":1586,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:50",{"_index":1580,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:55",{"_index":1590,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:61",{"_index":1581,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/privilege.dto.ts",{"_index":1671,"title":{},"body":{"classes/PrivilegeDto.html":{},"coverage.html":{}}}],["dto/privilege.dto.ts:10",{"_index":1674,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:14",{"_index":1675,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:19",{"_index":1672,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:24",{"_index":1676,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:30",{"_index":1673,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.entity.ts",{"_index":1632,"title":{},"body":{"classes/Privilege.html":{},"coverage.html":{}}}],["dto/privilege.entity.ts:11",{"_index":1636,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:15",{"_index":1637,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:21",{"_index":1639,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:26",{"_index":1634,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:31",{"_index":1638,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:37",{"_index":1635,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/reservation.dto.ts",{"_index":1727,"title":{},"body":{"classes/ReservationDto.html":{},"coverage.html":{}}}],["dto/reservation.dto.ts:10",{"_index":1731,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:14",{"_index":1732,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:18",{"_index":1730,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:23",{"_index":1728,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:28",{"_index":1733,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:34",{"_index":1729,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.entity.ts",{"_index":1709,"title":{},"body":{"classes/Reservation.html":{},"coverage.html":{}}}],["dto/reservation.entity.ts:14",{"_index":1715,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:19",{"_index":1718,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:24",{"_index":1716,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:29",{"_index":1717,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:33",{"_index":1722,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:37",{"_index":1714,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:42",{"_index":1724,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:47",{"_index":1719,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:52",{"_index":1721,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:58",{"_index":1720,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:63",{"_index":1712,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:68",{"_index":1723,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:74",{"_index":1713,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reset",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/service.dto.ts",{"_index":1808,"title":{},"body":{"classes/ServiceDto.html":{},"coverage.html":{}}}],["dto/service.dto.ts:10",{"_index":1811,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:14",{"_index":1812,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:19",{"_index":1809,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:24",{"_index":1813,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:30",{"_index":1810,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.entity.ts",{"_index":1780,"title":{},"body":{"classes/Service.html":{},"coverage.html":{}}}],["dto/service.entity.ts:11",{"_index":1784,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:15",{"_index":1785,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:21",{"_index":1786,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:26",{"_index":1782,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:31",{"_index":1787,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:37",{"_index":1783,"title":{},"body":{"classes/Service.html":{}}}],["dto/sousservice.dto.ts",{"_index":1887,"title":{},"body":{"classes/SousServiceDto.html":{},"coverage.html":{}}}],["dto/sousservice.dto.ts:10",{"_index":1890,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:14",{"_index":1891,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:19",{"_index":1888,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:24",{"_index":1892,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:30",{"_index":1889,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.entity.ts",{"_index":1849,"title":{},"body":{"classes/SousService.html":{},"coverage.html":{}}}],["dto/sousservice.entity.ts:13",{"_index":1853,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:17",{"_index":1855,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:22",{"_index":1854,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:27",{"_index":1857,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:33",{"_index":1856,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:39",{"_index":1858,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:44",{"_index":1851,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:49",{"_index":1859,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:55",{"_index":1852,"title":{},"body":{"classes/SousService.html":{}}}],["dto/statutreservation.dto.ts",{"_index":1952,"title":{},"body":{"classes/StatutReservationDto.html":{},"coverage.html":{}}}],["dto/statutreservation.dto.ts:10",{"_index":1955,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:14",{"_index":1956,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:19",{"_index":1953,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:24",{"_index":1957,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:30",{"_index":1954,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.entity.ts",{"_index":1923,"title":{},"body":{"classes/StatutReservation.html":{},"coverage.html":{}}}],["dto/statutreservation.entity.ts:11",{"_index":1926,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:15",{"_index":1927,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:21",{"_index":1928,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:26",{"_index":1924,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:31",{"_index":1929,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:37",{"_index":1925,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/tarif.dto.ts",{"_index":2037,"title":{},"body":{"classes/TarifDto.html":{},"coverage.html":{}}}],["dto/tarif.dto.ts:10",{"_index":2041,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:15",{"_index":2042,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:19",{"_index":2038,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:24",{"_index":2039,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:29",{"_index":2043,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:35",{"_index":2040,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.entity.ts",{"_index":1979,"title":{},"body":{"classes/Tarif.html":{},"coverage.html":{}}}],["dto/tarif.entity.ts:12",{"_index":1984,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:17",{"_index":1986,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:22",{"_index":1985,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:27",{"_index":1987,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:31",{"_index":1980,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:36",{"_index":1988,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:41",{"_index":1983,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:46",{"_index":1981,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:51",{"_index":1989,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:57",{"_index":1982,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/update",{"_index":872,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["dto/utilisateur.dto.ts",{"_index":2356,"title":{},"body":{"classes/UtilisateurDto.html":{},"coverage.html":{}}}],["dto/utilisateur.dto.ts:10",{"_index":2360,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:14",{"_index":2361,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:18",{"_index":2363,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:22",{"_index":2359,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:26",{"_index":2362,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:30",{"_index":2365,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:35",{"_index":2364,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:40",{"_index":2357,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:45",{"_index":2366,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:51",{"_index":2358,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.entity.ts",{"_index":2264,"title":{},"body":{"classes/Utilisateur.html":{},"coverage.html":{}}}],["dto/utilisateur.entity.ts:103",{"_index":2275,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:16",{"_index":2272,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:20",{"_index":2276,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:24",{"_index":2280,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:28",{"_index":2271,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:32",{"_index":2279,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:36",{"_index":2284,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:41",{"_index":2282,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:46",{"_index":2273,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:51",{"_index":2281,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:57",{"_index":2283,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:63",{"_index":2270,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:69",{"_index":2274,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:75",{"_index":2277,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:81",{"_index":2278,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:86",{"_index":2268,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:91",{"_index":2285,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:97",{"_index":2269,"title":{},"body":{"classes/Utilisateur.html":{}}}],["du",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePrivilegeDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"modules/ServiceModule.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"injectables/UploadService.html":{}}}],["début",{"_index":648,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["début'})@isnotempty()@matches(/^([01]\\d|2[0",{"_index":631,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["déconnexion",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["défaut",{"_index":611,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"injectables/DeviseService.html":{}}}],["déj",{"_index":187,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["désactiv",{"_index":2099,"title":{},"body":{"injectables/TarifService.html":{}}}],["désactiver",{"_index":842,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{}}}],["détect",{"_index":1754,"title":{},"body":{"injectables/ResponseService.html":{}}}],["d’un",{"_index":2010,"title":{},"body":{"controllers/TarifController.html":{}}}],["e2e",{"_index":2562,"title":{},"body":{"index.html":{}}}],["effectuer",{"_index":1536,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["efficient",{"_index":2540,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":2575,"title":{},"body":{"index.html":{}}}],["elle",{"_index":905,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/UtilisateurService.html":{}}}],["email",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["email'})@apiresponse({status",{"_index":2316,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["emitter",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["en",{"_index":1020,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{}}}],["enableimplicitconversion",{"_index":2476,"title":{},"body":{"injectables/ValidationService.html":{}}}],["endpoint",{"_index":2338,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["ensure",{"_index":2573,"title":{},"body":{"index.html":{}}}],["ensuredirectory",{"_index":2220,"title":{},"body":{"injectables/UploadService.html":{}}}],["ensuredirectory(folder",{"_index":2225,"title":{},"body":{"injectables/UploadService.html":{}}}],["enterprise",{"_index":2631,"title":{},"body":{"index.html":{}}}],["entier",{"_index":1210,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["entre",{"_index":801,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["envoy",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["err",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["erreur",{"_index":482,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ExceptionService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/ResponseService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{}}}],["error",{"_index":480,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/PrismaService.html":{},"injectables/ResponseService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{}}}],["error(\"résultat",{"_index":488,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["error('cl",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('method",{"_index":1166,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["error(`échec",{"_index":512,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["error(message",{"_index":1757,"title":{},"body":{"injectables/ResponseService.html":{}}}],["error.children",{"_index":1183,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["error.children.length",{"_index":1184,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["error.constraints",{"_index":1180,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["error.message",{"_index":511,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["errors",{"_index":1154,"title":{},"body":{"injectables/ExceptionService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"injectables/ValidationService.html":{}}}],["errors.foreach((error",{"_index":1179,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["eslint",{"_index":1159,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["eslint/no",{"_index":1163,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["est",{"_index":181,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/DeviseService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["et",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUtilisateurDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["etatpaiement",{"_index":729,"title":{},"body":{"classes/CreateReservationDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/UpdateReservationDto.html":{}}}],["etattransaction",{"_index":709,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/UpdatePaiementDto.html":{}}}],["eur",{"_index":609,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["eventemitter",{"_index":1614,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["eventemitter.emit('prisma.log",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter2",{"_index":1612,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["eventemittermodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["ex",{"_index":185,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"classes/CreateDeviseDto.html":{}}}],["example",{"_index":427,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"index.html":{}}}],["exception",{"_index":1342,"title":{},"body":{"injectables/LogService.html":{}}}],["exception/exception.service",{"_index":2458,"title":{},"body":{"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["exception/response/response.service",{"_index":2459,"title":{},"body":{"modules/ValidationModule.html":{}}}],["exceptionfactory",{"_index":2477,"title":{},"body":{"injectables/ValidationService.html":{}}}],["exceptionservice",{"_index":1130,"title":{"injectables/ExceptionService.html":{}},"body":{"injectables/ExceptionService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["executioncontext",{"_index":132,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["existe",{"_index":920,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["existing",{"_index":1443,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{}}}],["existing.idmedecin",{"_index":1452,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["existingdevise",{"_index":915,"title":{},"body":{"injectables/DeviseService.html":{}}}],["existingdisponibilite",{"_index":1065,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["existingemail",{"_index":2401,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["existingphone",{"_index":2405,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["existingprivilege",{"_index":1692,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["existingprivilege.id",{"_index":1705,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["existingservice",{"_index":1831,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["existingtarif",{"_index":2068,"title":{},"body":{"injectables/TarifService.html":{}}}],["existinguser",{"_index":2421,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["existinguser.profilurl",{"_index":2427,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["experience",{"_index":2618,"title":{},"body":{"index.html":{}}}],["expir",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresat",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlacklistService.html":{}}}],["expiresin",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["exporte",{"_index":2464,"title":{},"body":{"modules/ValidationModule.html":{}}}],["exporter",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["express",{"_index":179,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":453,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["ext",{"_index":2246,"title":{},"body":{"injectables/UploadService.html":{}}}],["extends",{"_index":1219,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"injectables/ValidationService.html":{}}}],["extractjwt",{"_index":1243,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1247,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(req",{"_index":1250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["faible",{"_index":2181,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["failed",{"_index":1629,"title":{},"body":{"injectables/PrismaService.html":{}}}],["false",{"_index":527,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DossierMedical.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/ModePaiement.html":{},"classes/Ordonnance.html":{},"classes/Paiement.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{},"classes/Service.html":{},"classes/SousService.html":{},"classes/StatutReservation.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"injectables/ValidationService.html":{}}}],["false})@apiproperty({type",{"_index":753,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["false})@isoptional",{"_index":696,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["false})@isoptional()@isemail",{"_index":1204,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["false})@isoptional()@isint({message",{"_index":1207,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["false})@isoptional()@isstring",{"_index":738,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["false})@isoptional()@isstring({message",{"_index":1212,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["false})@isoptional()@matches(/^([01]\\d|2[0",{"_index":650,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["fast",{"_index":2591,"title":{},"body":{"index.html":{}}}],["features",{"_index":2601,"title":{},"body":{"index.html":{}}}],["few",{"_index":2593,"title":{},"body":{"index.html":{}}}],["fichier",{"_index":501,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["fichiers",{"_index":666,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":2256,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.buffer?.length",{"_index":500,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["fileid",{"_index":451,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["fileinterceptor",{"_index":1490,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["filename",{"_index":2252,"title":{},"body":{"injectables/UploadService.html":{}}}],["filepath",{"_index":1191,"title":{},"body":{"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["files",{"_index":458,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["files.foreach((file",{"_index":499,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["files.map((file",{"_index":507,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["files?.length",{"_index":498,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["filestorageservice",{"_index":466,"title":{"interfaces/FileStorageService.html":{}},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["fileuploadresult",{"_index":467,"title":{"interfaces/FileUploadResult.html":{}},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filtrer",{"_index":1203,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["fin",{"_index":653,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["fin'})@isnotempty()@matches(/^([01]\\d|2[0",{"_index":638,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["findall",{"_index":836,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findall(@query('idsousservice",{"_index":2022,"title":{},"body":{"controllers/TarifController.html":{}}}],["findall(@request",{"_index":1282,"title":{},"body":{"controllers/LogController.html":{},"controllers/PrivilegeController.html":{}}}],["findall(currentuser",{"_index":1684,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["findall(idsousservice",{"_index":2003,"title":{},"body":{"controllers/TarifController.html":{}}}],["findall(req",{"_index":1272,"title":{},"body":{"controllers/LogController.html":{},"controllers/PrivilegeController.html":{}}}],["findall(user",{"_index":1321,"title":{},"body":{"injectables/LogService.html":{}}}],["findallbysousservice",{"_index":2049,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallbysousservice(idsousservice",{"_index":2058,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallbysousservicefull",{"_index":2050,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallbysousservicefull(idsousservice",{"_index":2060,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallclients",{"_index":2293,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findallexceptclients",{"_index":2294,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findalltarifsofsousservice",{"_index":1993,"title":{},"body":{"controllers/TarifController.html":{}}}],["findalltarifsofsousservice(@param('id",{"_index":2026,"title":{},"body":{"controllers/TarifController.html":{}}}],["findalltarifsofsousservice(id",{"_index":2006,"title":{},"body":{"controllers/TarifController.html":{}}}],["findallwithoutadminsandclients",{"_index":2379,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findbyemail",{"_index":2295,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findbyemail(@param('email",{"_index":2347,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findbyemail(email",{"_index":2314,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findbyid",{"_index":837,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["findbyid(@param('id",{"_index":879,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/TarifController.html":{}}}],["findbyid(id",{"_index":860,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["findbymedecin",{"_index":961,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["findbymedecin(@param('idmedecin",{"_index":981,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["findbymedecin(idmedecin",{"_index":967,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["findbyserviceid",{"_index":1863,"title":{},"body":{"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["findbyserviceid(@param('idservice",{"_index":1880,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["findbyserviceid(idservice",{"_index":1867,"title":{},"body":{"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["finddisponibilitesbyid",{"_index":997,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["finddisponibilitesbyid(id",{"_index":1010,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["finddisponibilitesbymedecin",{"_index":998,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["finddisponibilitesbymedecin(idmedecin",{"_index":1014,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["findone",{"_index":1375,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findone(@param('id",{"_index":1410,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["findone(id",{"_index":1388,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findprivilegedto",{"_index":1197,"title":{"classes/FindPrivilegeDto.html":{}},"body":{"classes/FindPrivilegeDto.html":{},"coverage.html":{}}}],["findutilisateurbyemail",{"_index":2380,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findutilisateurbyemail(email",{"_index":2391,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findutilisateurdto",{"_index":1200,"title":{"classes/FindUtilisateurDto.html":{}},"body":{"classes/FindUtilisateurDto.html":{},"coverage.html":{}}}],["float",{"_index":714,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreateTarifDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdateTarifDto.html":{}}}],["focus",{"_index":2600,"title":{},"body":{"index.html":{}}}],["folder",{"_index":454,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["follow",{"_index":2635,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":1743,"title":{},"body":{"injectables/ResponseService.html":{}}}],["forbidden(message",{"_index":1761,"title":{},"body":{"injectables/ResponseService.html":{}}}],["forbiddenexception",{"_index":1033,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["forbiddenexception(this.responseservice.forbidden(\"seuls",{"_index":1044,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["forbiddenexception(this.responseservice.forbidden(\"vous",{"_index":1034,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["forbidnonwhitelisted",{"_index":2473,"title":{},"body":{"injectables/ValidationService.html":{}}}],["format",{"_index":530,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["formaterrors",{"_index":1137,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["formaterrors(errors",{"_index":1155,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["formatheure",{"_index":999,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["formatheure(date",{"_index":1017,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["formatter",{"_index":1019,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["framework",{"_index":2538,"title":{},"body":{"index.html":{}}}],["fs",{"_index":2236,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs.mkdir(dirpath",{"_index":2244,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs.unlink(fullpath",{"_index":2262,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs.writefile(filepath",{"_index":2255,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs/promises",{"_index":2237,"title":{},"body":{"injectables/UploadService.html":{}}}],["full",{"_index":2630,"title":{},"body":{"index.html":{}}}],["fullpath",{"_index":2261,"title":{},"body":{"injectables/UploadService.html":{}}}],["function",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2532,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2596,"title":{},"body":{"index.html":{}}}],["generatefilename",{"_index":2221,"title":{},"body":{"injectables/UploadService.html":{}}}],["generatefilename(originalname",{"_index":2227,"title":{},"body":{"injectables/UploadService.html":{}}}],["generercreneauxdisponibles",{"_index":1000,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["generercreneauxdisponibles(disponibilite",{"_index":1022,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["get(':id",{"_index":878,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["get(':id')@apibearerauth('access",{"_index":1389,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["get(':id')@apioperation({summary",{"_index":861,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["get(':id')@useguards(jwtauthguard)@apibearerauth('access",{"_index":2319,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('by",{"_index":1868,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["get('clients",{"_index":2305,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('email/:email",{"_index":2346,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('email/:email')@apioperation({summary",{"_index":2315,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('medecin/:idmedecin",{"_index":980,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["get('medecin/:idmedecin')@apioperation({summary",{"_index":968,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["get('non",{"_index":2307,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('sous",{"_index":2007,"title":{},"body":{"controllers/TarifController.html":{}}}],["get()@apibearerauth('access",{"_index":1384,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["get()@apiconsumes('application/json",{"_index":1865,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["get()@apioperation({summary",{"_index":856,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth('access",{"_index":2303,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnumerosemaine",{"_index":1001,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["getting",{"_index":2534,"title":{"index.html":{}},"body":{}}],["global",{"_index":1605,"title":{},"body":{"modules/PrismaModule.html":{},"modules/UploadModule.html":{},"controllers/UtilisateurController.html":{},"modules/ValidationModule.html":{}}}],["graph",{"_index":2623,"title":{},"body":{"index.html":{}}}],["grow",{"_index":2645,"title":{},"body":{"index.html":{}}}],["guard",{"_index":2351,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["générer",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DisponibiliteService.html":{}}}],["handleprismalogevent",{"_index":1296,"title":{},"body":{"injectables/LogListener.html":{}}}],["handleprismalogevent(payload",{"_index":1299,"title":{},"body":{"injectables/LogListener.html":{}}}],["handlerequest",{"_index":1222,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1227,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["hands",{"_index":2617,"title":{},"body":{"index.html":{}}}],["handy",{"_index":2606,"title":{},"body":{"index.html":{}}}],["hash",{"_index":2248,"title":{},"body":{"injectables/UploadService.html":{}}}],["hashedpassword",{"_index":2408,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["hash}${ext",{"_index":2250,"title":{},"body":{"injectables/UploadService.html":{}}}],["headers",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["hello",{"_index":124,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":2621,"title":{},"body":{"index.html":{}}}],["here",{"_index":2653,"title":{},"body":{"index.html":{}}}],["heure",{"_index":630,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["heuredebut",{"_index":623,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto-1.html":{}}}],["heurefin",{"_index":624,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto-1.html":{}}}],["hh:mm",{"_index":635,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["historique",{"_index":667,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["horaires",{"_index":1100,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["horairesdisponibles",{"_index":1093,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["hotel",{"_index":459,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["httpexception",{"_index":1146,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpexception(response",{"_index":1171,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpresponseservice",{"_index":1140,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["https://exemple.com/icon.png",{"_index":752,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["https://nestjs.com",{"_index":2659,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":1157,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.bad_request",{"_index":1172,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.forbidden",{"_index":1174,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.internal_server_error",{"_index":1178,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.not_found",{"_index":1176,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["ici",{"_index":2213,"title":{},"body":{"modules/UploadModule.html":{}}}],["icon",{"_index":688,"title":{},"body":{"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{}}}],["icons",{"_index":1544,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["iconurl",{"_index":737,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["iconurl?:string",{"_index":744,"title":{},"body":{"classes/CreateServiceDto-1.html":{}}}],["id",{"_index":437,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["id'})@apiparam({name",{"_index":1939,"title":{},"body":{"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["id'})@apiresponse({status",{"_index":1391,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["iddevise",{"_index":769,"title":{},"body":{"classes/CreateTarifDto-1.html":{},"classes/Tarif.html":{},"injectables/TarifService.html":{}}}],["identifier",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["idmedecin",{"_index":682,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"injectables/MedecinSousServiceService.html":{},"classes/Ordonnance.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["idmedecinsousservice",{"_index":625,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/Disponibilite.html":{},"injectables/DisponibiliteService.html":{},"classes/Reservation.html":{}}}],["idmodepaiement",{"_index":1579,"title":{},"body":{"classes/Paiement.html":{}}}],["idpatient",{"_index":1109,"title":{},"body":{"classes/DossierMedical.html":{},"classes/Ordonnance.html":{}}}],["idprivilege",{"_index":434,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["idreservation",{"_index":555,"title":{},"body":{"classes/ConnectPaiementDto.html":{},"classes/Paiement.html":{}}}],["idservice",{"_index":750,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["idsousservice",{"_index":683,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/MedecinSousService.html":{},"injectables/MedecinSousServiceService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["idstatutreservation",{"_index":1710,"title":{},"body":{"classes/Reservation.html":{}}}],["idutilisateur",{"_index":1259,"title":{},"body":{"classes/Log.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/Reservation.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":199,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{}}}],["image",{"_index":517,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["images",{"_index":514,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["implemented",{"_index":1167,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["implements",{"_index":146,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/CloudinaryService.html":{},"injectables/PrismaService.html":{},"injectables/UploadService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["importer",{"_index":2373,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UtilisateurModule.html":{}}}],["impossible",{"_index":2263,"title":{},"body":{"injectables/UploadService.html":{}}}],["inactif",{"_index":2098,"title":{},"body":{"injectables/TarifService.html":{}}}],["inactifs",{"_index":2009,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["include",{"_index":1042,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["incorrect",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["information",{"_index":2580,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":2603,"title":{},"body":{"index.html":{}}}],["inject",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["inject('uploadservice",{"_index":1531,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["injectable",{"_index":120,"title":{"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["injectables",{"_index":121,"title":{},"body":{"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"overview.html":{}}}],["injection",{"_index":1830,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["inscription",{"_index":2300,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["install",{"_index":2595,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":2551,"title":{},"body":{"index.html":{}}}],["int32",{"_index":531,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["integer",{"_index":529,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["interact",{"_index":2624,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":130,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["intercept(context",{"_index":131,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["interdit",{"_index":1763,"title":{},"body":{"injectables/ResponseService.html":{}}}],["interface",{"_index":1186,"title":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"interfaces/Response.html":{}},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["interfaces",{"_index":1187,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["interfaces/upload.interface",{"_index":468,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["internalerror",{"_index":1744,"title":{},"body":{"injectables/ResponseService.html":{}}}],["internalerror(message",{"_index":1764,"title":{},"body":{"injectables/ResponseService.html":{}}}],["interne",{"_index":1759,"title":{},"body":{"injectables/ResponseService.html":{}}}],["introuvable",{"_index":1552,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["invalide",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/ResponseService.html":{}}}],["ip",{"_index":159,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/UpdateLogDto.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":827,"title":{},"body":{"classes/Devise.html":{},"classes/MedecinSousService.html":{},"classes/ModePaiement.html":{},"classes/Privilege.html":{},"classes/Service.html":{},"classes/SousService.html":{},"classes/StatutReservation.html":{},"classes/Utilisateur.html":{}}}],["isblacklisted",{"_index":1251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isboolean",{"_index":604,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["isboolean()@isoptional",{"_index":596,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["isemail",{"_index":584,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isglobal",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":655,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isint()@isnotempty",{"_index":684,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{}}}],["isint()@isoptional",{"_index":2123,"title":{},"body":{"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["isnotempty",{"_index":424,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/ResetPasswordDto.html":{}}}],["isnumber",{"_index":440,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["isnumber()@isnotempty",{"_index":771,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["isnumber()@ispositive()@isnotempty",{"_index":774,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["isoptional",{"_index":605,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@isemail",{"_index":2166,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@isint",{"_index":2169,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@isstring",{"_index":2172,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@matches(/^\\+?\\d{9,15",{"_index":2189,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@minlength(8",{"_index":2174,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["ispasswordvalid",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["ispositive",{"_index":775,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["isstring",{"_index":585,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isstring()@isnotempty",{"_index":601,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["isstring()@isnotempty()@length(2",{"_index":598,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["istokenblacklisted",{"_index":398,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["istokenblacklisted(token",{"_index":405,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["item",{"_index":1975,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["jamais",{"_index":153,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["jeudi",{"_index":1053,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["job",{"_index":2638,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":2640,"title":{},"body":{"index.html":{}}}],["john",{"_index":808,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["john'})@isnotempty()@isstring",{"_index":793,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["john'})@validateif(o",{"_index":2182,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["john.doe@example.com",{"_index":809,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/ResetPasswordDto.html":{}}}],["john.doe@example.com'})@isnotempty()@isemail",{"_index":788,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/ResetPasswordDto.html":{}}}],["john@example.com",{"_index":2195,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["john@example.com'})@validateif(o",{"_index":2165,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["johndoe@example.com",{"_index":1202,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["join",{"_index":2651,"title":{},"body":{"index.html":{}}}],["jour",{"_index":644,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateServiceDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["jours",{"_index":1049,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursemaine",{"_index":626,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto-1.html":{}}}],["joursemainenormalized",{"_index":1057,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursvalid",{"_index":1050,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursvalid.includes(joursemainenormalized",{"_index":1059,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursvalid.join",{"_index":1063,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["json",{"_index":1339,"title":{},"body":{"injectables/LogService.html":{}}}],["json.stringify(error",{"_index":485,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["jsonwebtoken",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{},"dependencies.html":{}}}],["jwt'})@apiresponse({status",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt.strategy",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt.verify(token",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":186,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DisponibiliteController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":1246,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"modules/UtilisateurModule.html":{}}}],["jwtstrategy",{"_index":297,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":2656,"title":{},"body":{"index.html":{}}}],["key",{"_index":2570,"title":{},"body":{"index.html":{}}}],["l'admin",{"_index":1690,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["l'application",{"_index":2463,"title":{},"body":{"modules/ValidationModule.html":{}}}],["l'authentification",{"_index":184,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/PrivilegeController.html":{}}}],["l'email",{"_index":1205,"title":{},"body":{"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["l'enregistrement",{"_index":2260,"title":{},"body":{"injectables/UploadService.html":{}}}],["l'erreur",{"_index":2376,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["l'icône",{"_index":751,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["l'id",{"_index":1208,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["l'index",{"_index":502,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["l'upload",{"_index":484,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["l'utilisateur",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LogService.html":{},"miscellaneous/variables.html":{}}}],["l'utiliser",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["l\\'email",{"_index":1214,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["l\\'id",{"_index":1216,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["la",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateDisponibiliteDto.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["le",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CloudinaryService.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["learn",{"_index":2609,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["length",{"_index":606,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["length(2",{"_index":607,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["les",{"_index":843,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{}}}],["libell",{"_index":699,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["libelle",{"_index":547,"title":{},"body":{"classes/ConnectModePaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/FindPrivilegeDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["libre",{"_index":2335,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["libre)'})@apiresponse({status",{"_index":2301,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["license",{"_index":2662,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2643,"title":{},"body":{"index.html":{}}}],["lieu",{"_index":1070,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["line",{"_index":1161,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["linkedin",{"_index":2637,"title":{},"body":{"index.html":{}}}],["lisible",{"_index":1021,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["list",{"_index":1972,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["liste",{"_index":1273,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["listener",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{}}}],["listener.ts",{"_index":1295,"title":{},"body":{"injectables/LogListener.html":{},"coverage.html":{}}}],["listener.ts:11",{"_index":1302,"title":{},"body":{"injectables/LogListener.html":{}}}],["listener.ts:7",{"_index":1298,"title":{},"body":{"injectables/LogListener.html":{}}}],["listener/log",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"coverage.html":{}}}],["lister",{"_index":1385,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["literal",{"_index":1300,"title":{},"body":{"injectables/LogListener.html":{},"injectables/LogService.html":{}}}],["local",{"_index":2217,"title":{},"body":{"modules/UploadModule.html":{}}}],["log",{"_index":86,"title":{"classes/Log.html":{}},"body":{"modules/AppModule.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/Utilisateur.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log.controller",{"_index":1312,"title":{},"body":{"modules/LogModule.html":{}}}],["log.dto.ts",{"_index":540,"title":{},"body":{"classes/ConnectLogDto.html":{},"classes/CreateLogDto.html":{},"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:11",{"_index":674,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:12",{"_index":541,"title":{},"body":{"classes/ConnectLogDto.html":{},"classes/UpdateLogDto.html":{}}}],["log.dto.ts:15",{"_index":676,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":2121,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["log.dto.ts:22",{"_index":675,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:24",{"_index":2120,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["log.entity",{"_index":2288,"title":{},"body":{"classes/Utilisateur.html":{}}}],["log.service",{"_index":1278,"title":{},"body":{"controllers/LogController.html":{},"modules/LogModule.html":{}}}],["log/log.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["log/log.service",{"_index":1304,"title":{},"body":{"injectables/LogListener.html":{}}}],["logcontroller",{"_index":1269,"title":{"controllers/LogController.html":{}},"body":{"controllers/LogController.html":{},"modules/LogModule.html":{},"coverage.html":{}}}],["logdto",{"_index":1285,"title":{"classes/LogDto.html":{}},"body":{"classes/LogDto.html":{},"coverage.html":{}}}],["logger",{"_index":444,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["logger(cloudinaryservice.name",{"_index":463,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["logger(uploadservice.name",{"_index":2234,"title":{},"body":{"injectables/UploadService.html":{}}}],["loggingmiddleware",{"_index":1618,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(connectutilisateurdto",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["logique",{"_index":1347,"title":{},"body":{"injectables/LogService.html":{}}}],["loglistener",{"_index":85,"title":{"injectables/LogListener.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"coverage.html":{},"overview.html":{}}}],["logmodule",{"_index":42,"title":{"modules/LogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@headers('authorization",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(authheader",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(token",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":1271,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"classes/Utilisateur.html":{}}}],["logservice",{"_index":1277,"title":{"injectables/LogService.html":{}},"body":{"controllers/LogController.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"coverage.html":{},"overview.html":{}}}],["looking",{"_index":2581,"title":{},"body":{"index.html":{}}}],["loop",{"_index":2633,"title":{},"body":{"index.html":{}}}],["lors",{"_index":483,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["lui",{"_index":1438,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["lundi",{"_index":643,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["l’ancienne",{"_index":2428,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["mais",{"_index":2352,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["makes",{"_index":2589,"title":{},"body":{"index.html":{}}}],["managing",{"_index":2602,"title":{},"body":{"index.html":{}}}],["manquante",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["manuellement",{"_index":2033,"title":{},"body":{"controllers/TarifController.html":{}}}],["manuellement'})@apiparam({name",{"_index":1999,"title":{},"body":{"controllers/TarifController.html":{}}}],["mardi",{"_index":1051,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["matches",{"_index":656,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["matches(/^(?=.*[a",{"_index":2200,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["matches(/^([01]\\d|2[0",{"_index":659,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["matches(/^\\+?\\d{9,15",{"_index":811,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":2585,"title":{},"body":{"index.html":{}}}],["medecin",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/Ordonnance.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["medecin.privilege.libelle",{"_index":1440,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["medecin/admin",{"_index":1008,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["medecins",{"_index":1850,"title":{},"body":{"classes/SousService.html":{}}}],["medecinsousservice",{"_index":948,"title":{"classes/MedecinSousService.html":{}},"body":{"classes/Disponibilite.html":{},"classes/MedecinSousService.html":{},"classes/Reservation.html":{},"classes/SousService.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["medecinsousservice.dto.ts",{"_index":543,"title":{},"body":{"classes/ConnectMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"coverage.html":{}}}],["medecinsousservice.dto.ts:12",{"_index":544,"title":{},"body":{"classes/ConnectMedecinSousServiceDto.html":{}}}],["medecinsousservice.dto.ts:14",{"_index":678,"title":{},"body":{"classes/CreateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{}}}],["medecinsousservice.entity",{"_index":958,"title":{},"body":{"classes/Disponibilite.html":{},"classes/Reservation.html":{},"classes/SousService.html":{},"classes/Utilisateur.html":{}}}],["medecinsousservicecontroller",{"_index":1373,"title":{"controllers/MedecinSousServiceController.html":{}},"body":{"controllers/MedecinSousServiceController.html":{},"modules/MedecinSousserviceModule.html":{},"coverage.html":{}}}],["medecinsousservicedto",{"_index":1415,"title":{"classes/MedecinSousServiceDto.html":{}},"body":{"classes/MedecinSousServiceDto.html":{},"coverage.html":{}}}],["medecinsousservicemodule",{"_index":43,"title":{"modules/MedecinSousserviceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules.html":{},"overview.html":{}}}],["medecinsousserviceservice",{"_index":1403,"title":{"injectables/MedecinSousServiceService.html":{}},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"coverage.html":{},"overview.html":{}}}],["mercredi",{"_index":1052,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["message",{"_index":634,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["messages",{"_index":1168,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["messages.push(...this.formaterrors(error.children",{"_index":1185,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["messages.push(message",{"_index":1182,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["metadata",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["mettre",{"_index":866,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["middleware",{"_index":1331,"title":{},"body":{"injectables/LogService.html":{}}}],["minlength",{"_index":425,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["minlength(6",{"_index":430,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUtilisateurDto-1.html":{}}}],["minlength(8",{"_index":2199,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["mis",{"_index":1401,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["miscellaneous",{"_index":2531,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":942,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/MedecinSousServiceService.html":{},"classes/UpdateServiceDto-1.html":{}}}],["mit",{"_index":2642,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":2128,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{}}}],["mode",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateModePaiementDto-1.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{},"index.html":{}}}],["models",{"_index":1626,"title":{},"body":{"injectables/PrismaService.html":{}}}],["modepaiement",{"_index":1462,"title":{"classes/ModePaiement.html":{}},"body":{"classes/ModePaiement.html":{},"classes/Paiement.html":{},"coverage.html":{}}}],["modepaiement.dto.ts",{"_index":546,"title":{},"body":{"classes/ConnectModePaiementDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/UpdateModePaiementDto.html":{},"coverage.html":{}}}],["modepaiement.dto.ts:11",{"_index":691,"title":{},"body":{"classes/CreateModePaiementDto.html":{}}}],["modepaiement.dto.ts:12",{"_index":2125,"title":{},"body":{"classes/UpdateModePaiementDto.html":{}}}],["modepaiement.dto.ts:13",{"_index":548,"title":{},"body":{"classes/ConnectModePaiementDto.html":{}}}],["modepaiement.dto.ts:17",{"_index":690,"title":{},"body":{"classes/CreateModePaiementDto.html":{}}}],["modepaiement.dto.ts:18",{"_index":549,"title":{},"body":{"classes/ConnectModePaiementDto.html":{},"classes/UpdateModePaiementDto.html":{}}}],["modepaiement.dto.ts:24",{"_index":689,"title":{},"body":{"classes/CreateModePaiementDto.html":{}}}],["modepaiement.dto.ts:25",{"_index":2124,"title":{},"body":{"classes/UpdateModePaiementDto.html":{}}}],["modepaiement.entity",{"_index":1591,"title":{},"body":{"classes/Paiement.html":{}}}],["modepaiementcontroller",{"_index":1473,"title":{"controllers/ModePaiementController.html":{}},"body":{"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"coverage.html":{}}}],["modepaiementdto",{"_index":1507,"title":{"classes/ModePaiementDto.html":{}},"body":{"classes/ModePaiementDto.html":{},"coverage.html":{}}}],["modepaiementmodule",{"_index":44,"title":{"modules/ModePaiementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModePaiementModule.html":{},"modules.html":{},"overview.html":{}}}],["modepaiementservice",{"_index":1492,"title":{"injectables/ModePaiementService.html":{}},"body":{"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"coverage.html":{},"overview.html":{}}}],["modes",{"_index":1548,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["modifier",{"_index":1400,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/StatutReservationController.html":{}}}],["modifiez",{"_index":1068,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["moins",{"_index":2175,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["money",{"_index":704,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{}}}],["money'})@isnotempty()@isstring",{"_index":702,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["montant",{"_index":710,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdateTarifDto.html":{}}}],["more",{"_index":2579,"title":{},"body":{"index.html":{}}}],["mot",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["mss.id",{"_index":1098,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["mtn",{"_index":2127,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{}}}],["myśliwiec",{"_index":2657,"title":{},"body":{"index.html":{}}}],["médecin",{"_index":640,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{}}}],["médecins",{"_index":1045,"title":{},"body":{"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{}}}],["méthode",{"_index":1329,"title":{},"body":{"injectables/LogService.html":{}}}],["même",{"_index":1439,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"controllers/TarifController.html":{}}}],["n'a",{"_index":503,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["n'est",{"_index":1206,"title":{},"body":{"classes/FindUtilisateurDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["n'existe",{"_index":1432,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["n\\'est",{"_index":1215,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["name",{"_index":137,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["ne",{"_index":155,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"classes/CreatePrivilegeDto-1.html":{}}}],["need",{"_index":2628,"title":{},"body":{"index.html":{}}}],["nest",{"_index":2545,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2661,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":142,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["nestjs",{"_index":2568,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2103,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OptionalJwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1491,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":178,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["new",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":416,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["newpassword123",{"_index":2197,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["newpassword123!'})@validateif(o",{"_index":2173,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["next",{"_index":133,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["next(params",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next.handle",{"_index":162,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["nextfunction",{"_index":174,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["node.js",{"_index":2537,"title":{},"body":{"index.html":{}}}],["nom",{"_index":777,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["nombre",{"_index":1209,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["non",{"_index":195,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PrivilegeController.html":{},"injectables/ResponseService.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["notfound",{"_index":1745,"title":{},"body":{"injectables/ResponseService.html":{}}}],["notfound(message",{"_index":1766,"title":{},"body":{"injectables/ResponseService.html":{}}}],["notfoundexception",{"_index":913,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["notfoundexception('log",{"_index":1354,"title":{},"body":{"injectables/LogService.html":{}}}],["notfoundexception('utilisateur",{"_index":2422,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["notfoundexception(this.responseservice.notfound(`devise",{"_index":934,"title":{},"body":{"injectables/DeviseService.html":{}}}],["notfoundexception(this.responseservice.notfound(`disponibilit",{"_index":1085,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["notfoundexception(this.responseservice.notfound(`service",{"_index":1908,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["notfoundexception(this.responseservice.notfound(`sous",{"_index":1914,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["nouveau",{"_index":1933,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["nouveaumotdepasse456",{"_index":429,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["nouveaumotdepasse456'})@isnotempty()@minlength(6",{"_index":419,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["nouvel",{"_index":436,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"controllers/UtilisateurController.html":{}}}],["nouvelle",{"_index":922,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["npm",{"_index":2550,"title":{},"body":{"index.html":{}}}],["null",{"_index":617,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["nullable",{"_index":619,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["number",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreatePaiementDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"interfaces/Response.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["numéro",{"_index":796,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["nécessaire",{"_index":1340,"title":{},"body":{"injectables/LogService.html":{},"controllers/UtilisateurController.html":{}}}],["nécessitent",{"_index":1663,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["o.email",{"_index":2196,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.idprivilege",{"_index":2204,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.nom",{"_index":2194,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.password",{"_index":2198,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.prenom",{"_index":2193,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.profil",{"_index":2203,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.telephone",{"_index":2202,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["object.keys(this",{"_index":1627,"title":{},"body":{"injectables/PrismaService.html":{}}}],["object.values(error.constraints).foreach((message",{"_index":1181,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["object.values(updateutilisateurdto).some((val",{"_index":2423,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["observable",{"_index":141,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["obtenir",{"_index":1390,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["offer",{"_index":2639,"title":{},"body":{"index.html":{}}}],["official",{"_index":2586,"title":{},"body":{"index.html":{}}}],["oldpassword",{"_index":417,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["onevent",{"_index":1303,"title":{},"body":{"injectables/LogListener.html":{}}}],["onevent('prisma.log",{"_index":1301,"title":{},"body":{"injectables/LogListener.html":{}}}],["onmoduledestroy",{"_index":1609,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":1610,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":2644,"title":{},"body":{"index.html":{}}}],["optional",{"_index":139,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/Paiement.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["optionaljwtauthguard",{"_index":1555,"title":{"injectables/OptionalJwtAuthGuard.html":{}},"body":{"injectables/OptionalJwtAuthGuard.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["optionnels",{"_index":2325,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["options",{"_index":2470,"title":{},"body":{"injectables/ValidationService.html":{}}}],["opération",{"_index":1770,"title":{},"body":{"injectables/ResponseService.html":{}}}],["orange",{"_index":701,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["orderby",{"_index":1081,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{}}}],["ordonnance",{"_index":1560,"title":{"classes/Ordonnance.html":{}},"body":{"classes/Ordonnance.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["ordonnance.dto.ts",{"_index":551,"title":{},"body":{"classes/ConnectOrdonnanceDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"coverage.html":{}}}],["ordonnance.dto.ts:11",{"_index":706,"title":{},"body":{"classes/CreateOrdonnanceDto.html":{}}}],["ordonnance.dto.ts:12",{"_index":552,"title":{},"body":{"classes/ConnectOrdonnanceDto.html":{},"classes/UpdateOrdonnanceDto.html":{}}}],["ordonnance.dto.ts:18",{"_index":707,"title":{},"body":{"classes/CreateOrdonnanceDto.html":{}}}],["ordonnance.dto.ts:19",{"_index":2131,"title":{},"body":{"classes/UpdateOrdonnanceDto.html":{}}}],["ordonnance.entity",{"_index":2289,"title":{},"body":{"classes/Utilisateur.html":{}}}],["ordonnancedto",{"_index":1571,"title":{"classes/OrdonnanceDto.html":{}},"body":{"classes/OrdonnanceDto.html":{},"coverage.html":{}}}],["ordonnancesmedecin",{"_index":2266,"title":{},"body":{"classes/Utilisateur.html":{}}}],["ordonnancespatient",{"_index":2267,"title":{},"body":{"classes/Utilisateur.html":{}}}],["originalname",{"_index":2229,"title":{},"body":{"injectables/UploadService.html":{}}}],["ou",{"_index":191,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateDisponibiliteDto.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["out",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":2666,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2510,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paiement",{"_index":700,"title":{"classes/Paiement.html":{}},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"classes/Paiement.html":{},"classes/Reservation.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement.controller",{"_index":1519,"title":{},"body":{"modules/ModePaiementModule.html":{}}}],["paiement.controller.ts",{"_index":1474,"title":{},"body":{"controllers/ModePaiementController.html":{},"coverage.html":{}}}],["paiement.controller.ts:24",{"_index":1478,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:29",{"_index":1480,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:34",{"_index":1482,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:41",{"_index":1487,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:46",{"_index":1484,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.dto",{"_index":1494,"title":{},"body":{"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{}}}],["paiement.dto..ts",{"_index":694,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement.dto..ts:12",{"_index":697,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["paiement.dto..ts:8",{"_index":703,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["paiement.dto.ts",{"_index":554,"title":{},"body":{"classes/ConnectPaiementDto.html":{},"classes/CreatePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdatePaiementDto.html":{},"coverage.html":{}}}],["paiement.dto.ts:12",{"_index":715,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{}}}],["paiement.dto.ts:13",{"_index":556,"title":{},"body":{"classes/ConnectPaiementDto.html":{},"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:16",{"_index":716,"title":{},"body":{"classes/CreatePaiementDto.html":{}}}],["paiement.dto.ts:18",{"_index":2135,"title":{},"body":{"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:19",{"_index":557,"title":{},"body":{"classes/ConnectPaiementDto.html":{}}}],["paiement.dto.ts:20",{"_index":713,"title":{},"body":{"classes/CreatePaiementDto.html":{}}}],["paiement.dto.ts:23",{"_index":2134,"title":{},"body":{"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:27",{"_index":712,"title":{},"body":{"classes/CreatePaiementDto.html":{}}}],["paiement.dto.ts:30",{"_index":2133,"title":{},"body":{"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:8",{"_index":2129,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{}}}],["paiement.entity",{"_index":1472,"title":{},"body":{"classes/ModePaiement.html":{},"classes/Reservation.html":{}}}],["paiement.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["paiement.module.ts",{"_index":1518,"title":{},"body":{"modules/ModePaiementModule.html":{}}}],["paiement.service",{"_index":1493,"title":{},"body":{"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{}}}],["paiement.service.ts",{"_index":1520,"title":{},"body":{"injectables/ModePaiementService.html":{},"coverage.html":{}}}],["paiement.service.ts:10",{"_index":1521,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:17",{"_index":1528,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:28",{"_index":1522,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:51",{"_index":1523,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:56",{"_index":1524,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:62",{"_index":1526,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:80",{"_index":1525,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement/dto/create",{"_index":693,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement/dto/update",{"_index":2126,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement/mode",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"coverage.html":{}}}],["paiementdto",{"_index":1592,"title":{"classes/PaiementDto.html":{}},"body":{"classes/PaiementDto.html":{},"coverage.html":{}}}],["paiements",{"_index":1464,"title":{},"body":{"classes/ModePaiement.html":{}}}],["par",{"_index":610,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{}}}],["param",{"_index":869,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["param('id",{"_index":2343,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["parameters",{"_index":136,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["params",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.action",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.args",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.model",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parent",{"_index":754,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{}}}],["parmi",{"_index":1062,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["parsetime",{"_index":1002,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["parsetime(time",{"_index":1030,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["part",{"_index":2629,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":2102,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{}}}],["partialtype(createdevisedto",{"_index":2101,"title":{},"body":{"classes/UpdateDeviseDto.html":{}}}],["partialtype(createdisponibilitedto",{"_index":2111,"title":{},"body":{"classes/UpdateDisponibiliteDto.html":{}}}],["partialtype(createprivilegedto",{"_index":2139,"title":{},"body":{"classes/UpdatePrivilegeDto-1.html":{}}}],["partialtype(createtarifdto",{"_index":2155,"title":{},"body":{"classes/UpdateTarifDto-1.html":{}}}],["pas",{"_index":163,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/CloudinaryService.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["passe",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["passport",{"_index":1245,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":1249,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["password')@apioperation({summary",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["password')@useguards(jwtauthguard)@apioperation({summary",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["password.dto.ts",{"_index":414,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:12",{"_index":420,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":422,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:8",{"_index":1735,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password123",{"_index":587,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{}}}],["password123'})@isnotempty()@isstring",{"_index":582,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{}}}],["password123'})@isnotempty()@minlength(6",{"_index":792,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["patch",{"_index":868,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["patch(':id",{"_index":881,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["patch(':id')@apibearerauth('access",{"_index":1399,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["patch(':id')@apiconsumes('application/json')@apioperation({summary",{"_index":1944,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":865,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{}}}],["patch(':id')@useguards(jwtauthguard)@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":2323,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["patch(':id')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1795,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["patch(':id/activate",{"_index":884,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["patch(':id/activate')@apioperation({summary",{"_index":840,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["patch(':id/deactivate",{"_index":2032,"title":{},"body":{"controllers/TarifController.html":{}}}],["patch(':id/deactivate')@apioperation({summary",{"_index":1998,"title":{},"body":{"controllers/TarifController.html":{}}}],["path",{"_index":1737,"title":{},"body":{"interfaces/Response.html":{},"injectables/UploadService.html":{}}}],["path.extname(originalname",{"_index":2247,"title":{},"body":{"injectables/UploadService.html":{}}}],["path.join(dirpath",{"_index":2254,"title":{},"body":{"injectables/UploadService.html":{}}}],["path.join(folder",{"_index":2258,"title":{},"body":{"injectables/UploadService.html":{}}}],["path.join(this.basedir",{"_index":2243,"title":{},"body":{"injectables/UploadService.html":{}}}],["patient",{"_index":1110,"title":{},"body":{"classes/DossierMedical.html":{},"classes/Ordonnance.html":{}}}],["pause",{"_index":649,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["pausedebut",{"_index":627,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["pausefin",{"_index":628,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["payload",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{}}}],["payload.action",{"_index":1334,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.details",{"_index":1338,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.idutilisateur",{"_index":1333,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.ip",{"_index":1335,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.sub",{"_index":1256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["peut",{"_index":721,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"injectables/MedecinSousServiceService.html":{}}}],["peuvent",{"_index":1047,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["platform",{"_index":2584,"title":{},"body":{"index.html":{}}}],["please",{"_index":2612,"title":{},"body":{"index.html":{}}}],["possible",{"_index":2576,"title":{},"body":{"index.html":{}}}],["post",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["post('change",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@useguards(jwtauthguard)@apioperation({summary",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apibearerauth('access",{"_index":1377,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["post()@apiconsumes('application/json')@apioperation({summary",{"_index":1932,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["post()@apioperation({summary",{"_index":847,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{}}}],["post()@useguards(jwtauthguard)@apioperation({summary",{"_index":962,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["post()@useguards(optionaljwtauthguard)@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":2297,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["post()@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1476,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["pour",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateDeviseDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{}}}],["pouvez",{"_index":1336,"title":{},"body":{"injectables/LogService.html":{}}}],["prefix",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["prenom",{"_index":778,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["prisma",{"_index":401,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["prisma.devise.create",{"_index":925,"title":{},"body":{"injectables/DeviseService.html":{}}}],["prisma.devise.update",{"_index":944,"title":{},"body":{"injectables/DeviseService.html":{}}}],["prisma.devise.updatemany",{"_index":924,"title":{},"body":{"injectables/DeviseService.html":{}}}],["prisma.middleware",{"_index":1619,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma.middlewareparams",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":1606,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.tarif.create",{"_index":2073,"title":{},"body":{"injectables/TarifService.html":{}}}],["prisma.tarif.update",{"_index":2088,"title":{},"body":{"injectables/TarifService.html":{}}}],["prisma.tarif.updatemany",{"_index":2072,"title":{},"body":{"injectables/TarifService.html":{}}}],["prisma/client",{"_index":1617,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/client/runtime/library",{"_index":2330,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["prisma/prisma.middleware",{"_index":145,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{}}}],["prisma/prisma.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{}}}],["prisma/prisma.service",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["prismaclient",{"_index":1608,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":45,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":56,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["privilege",{"_index":354,"title":{"classes/Privilege.html":{},"classes/Privilege-1.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["privilege.controller",{"_index":1680,"title":{},"body":{"modules/PrivilegeModule.html":{}}}],["privilege.dto",{"_index":1658,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/UpdatePrivilegeDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["privilege.dto.ts",{"_index":433,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/FindPrivilegeDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["privilege.dto.ts:11",{"_index":718,"title":{},"body":{"classes/CreatePrivilegeDto.html":{}}}],["privilege.dto.ts:12",{"_index":2137,"title":{},"body":{"classes/UpdatePrivilegeDto.html":{}}}],["privilege.dto.ts:13",{"_index":559,"title":{},"body":{"classes/ConnectPrivilegeDto.html":{}}}],["privilege.dto.ts:18",{"_index":560,"title":{},"body":{"classes/ConnectPrivilegeDto.html":{},"classes/CreatePrivilegeDto.html":{}}}],["privilege.dto.ts:19",{"_index":2136,"title":{},"body":{"classes/UpdatePrivilegeDto.html":{}}}],["privilege.dto.ts:2",{"_index":1199,"title":{},"body":{"classes/FindPrivilegeDto.html":{}}}],["privilege.dto.ts:8",{"_index":439,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{}}}],["privilege.entity",{"_index":2286,"title":{},"body":{"classes/Utilisateur.html":{}}}],["privilege.libelle",{"_index":2450,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilege.service",{"_index":1657,"title":{},"body":{"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{}}}],["privilege/privilege.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["privilege?.libelle",{"_index":2413,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilegeclient",{"_index":2396,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilegeclient.id",{"_index":2398,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilegecontroller",{"_index":1641,"title":{"controllers/PrivilegeController.html":{}},"body":{"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"coverage.html":{}}}],["privilegedto",{"_index":1670,"title":{"classes/PrivilegeDto.html":{}},"body":{"classes/PrivilegeDto.html":{},"coverage.html":{}}}],["privilegemodule",{"_index":46,"title":{"modules/PrivilegeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrivilegeModule.html":{},"modules.html":{},"overview.html":{}}}],["privileges",{"_index":1643,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{}}}],["privilegeservice",{"_index":1656,"title":{"injectables/PrivilegeService.html":{}},"body":{"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"coverage.html":{},"overview.html":{}}}],["privilège",{"_index":441,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["privilège'})@isnotempty()@isnumber",{"_index":438,"title":{},"body":{"classes/ChangePrivilegeDto.html":{}}}],["privilèges",{"_index":1649,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["process.env.cloudinary_api_key",{"_index":473,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["process.env.cloudinary_api_secret",{"_index":475,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["process.env.cloudinary_cloud_name",{"_index":471,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["process.env.storage_service",{"_index":2216,"title":{},"body":{"modules/UploadModule.html":{}}}],["process.env.upload_dir",{"_index":2240,"title":{},"body":{"injectables/UploadService.html":{}}}],["process.exit(1",{"_index":1630,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":2557,"title":{},"body":{"index.html":{}}}],["profil",{"_index":779,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["profilurl",{"_index":787,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["profilurl?:string",{"_index":813,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["progressive",{"_index":2536,"title":{},"body":{"index.html":{}}}],["project",{"_index":2548,"title":{},"body":{"index.html":{}}}],["promise",{"_index":407,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":476,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["promise.all",{"_index":506,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["promise.all(disponibilites.map(async",{"_index":1103,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["properties",{"_index":415,"title":{"properties.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"properties.html":{}}}],["provide",{"_index":2214,"title":{},"body":{"modules/UploadModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["prénom",{"_index":1213,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["public",{"_index":2329,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["puissent",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{}}}],["que",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LogService.html":{}}}],["query",{"_index":2015,"title":{},"body":{"controllers/TarifController.html":{}}}],["questions",{"_index":2610,"title":{},"body":{"index.html":{}}}],["r.heuredebut",{"_index":1091,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["r.heurefin",{"_index":1092,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["radiologie",{"_index":743,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{}}}],["radiologie'})@isnotempty",{"_index":741,"title":{},"body":{"classes/CreateServiceDto-1.html":{}}}],["read",{"_index":2652,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/BlacklistService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["ready",{"_index":2566,"title":{},"body":{"index.html":{}}}],["real",{"_index":2625,"title":{},"body":{"index.html":{}}}],["reconnecter",{"_index":1255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["recursive",{"_index":2245,"title":{},"body":{"injectables/UploadService.html":{}}}],["referencetransaction",{"_index":711,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/UpdatePaiementDto.html":{}}}],["reflect",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":477,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["reject(error",{"_index":486,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["reject(new",{"_index":487,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["relativepath",{"_index":2257,"title":{},"body":{"injectables/UploadService.html":{}}}],["remove",{"_index":1376,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["remove(@param('id",{"_index":1413,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["remove(id",{"_index":1393,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["rend",{"_index":2460,"title":{},"body":{"modules/ValidationModule.html":{}}}],["renvoie",{"_index":1341,"title":{},"body":{"injectables/LogService.html":{}}}],["repository",{"_index":2547,"title":{},"body":{"index.html":{}}}],["req",{"_index":176,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["req.ip",{"_index":197,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["req.user",{"_index":180,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["req.user?.id",{"_index":189,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["request",{"_index":148,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["request.ip",{"_index":160,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["request.user?.id",{"_index":152,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["required",{"_index":526,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/Disponibilite.html":{},"classes/DossierMedical.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/ModePaiement.html":{},"classes/Ordonnance.html":{},"classes/Paiement.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{},"classes/Service.html":{},"classes/SousService.html":{},"classes/StatutReservation.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{}}}],["requiring",{"_index":2592,"title":{},"body":{"index.html":{}}}],["requis",{"_index":1661,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["requête",{"_index":1750,"title":{},"body":{"injectables/ResponseService.html":{}}}],["res",{"_index":172,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["reservation",{"_index":1366,"title":{"classes/Reservation.html":{}},"body":{"classes/MedecinSousService.html":{},"classes/Paiement.html":{},"classes/Reservation.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["reservation.controller",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/StatutReservationModule.html":{}}}],["reservation.controller.ts",{"_index":1930,"title":{},"body":{"controllers/StatutReservationController.html":{},"coverage.html":{}}}],["reservation.controller.ts:18",{"_index":1935,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:24",{"_index":1938,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:31",{"_index":1940,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:39",{"_index":1945,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:46",{"_index":1942,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.dto",{"_index":1946,"title":{},"body":{"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{}}}],["reservation.dto.ts",{"_index":562,"title":{},"body":{"classes/ConnectReservationDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["reservation.dto.ts:11",{"_index":733,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:12",{"_index":563,"title":{},"body":{"classes/ConnectReservationDto.html":{},"classes/UpdateReservationDto.html":{}}}],["reservation.dto.ts:15",{"_index":732,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:17",{"_index":2142,"title":{},"body":{"classes/UpdateReservationDto.html":{}}}],["reservation.dto.ts:22",{"_index":731,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:24",{"_index":2141,"title":{},"body":{"classes/UpdateReservationDto.html":{}}}],["reservation.dto.ts:8",{"_index":763,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["reservation.entity",{"_index":1372,"title":{},"body":{"classes/MedecinSousService.html":{},"classes/Paiement.html":{},"classes/StatutReservation.html":{},"classes/Utilisateur.html":{}}}],["reservation.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["reservation.module.ts",{"_index":1960,"title":{},"body":{"modules/StatutReservationModule.html":{}}}],["reservation.service",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{}}}],["reservation.service.ts",{"_index":1961,"title":{},"body":{"injectables/StatutReservationService.html":{},"coverage.html":{}}}],["reservation.service.ts:14",{"_index":1968,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:25",{"_index":1963,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:39",{"_index":1964,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:44",{"_index":1965,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:49",{"_index":1967,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:57",{"_index":1966,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:8",{"_index":1962,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation/dto/create",{"_index":761,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"coverage.html":{}}}],["reservation/dto/update",{"_index":2149,"title":{},"body":{"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["reservation/statut",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"coverage.html":{}}}],["reservationdto",{"_index":1726,"title":{"classes/ReservationDto.html":{}},"body":{"classes/ReservationDto.html":{},"coverage.html":{}}}],["reservations",{"_index":1086,"title":{},"body":{"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"classes/StatutReservation.html":{},"classes/Utilisateur.html":{}}}],["reservationsset",{"_index":1023,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["reset",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(resetpassworddto",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassworddto",{"_index":248,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resolve",{"_index":494,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["resources",{"_index":2604,"title":{},"body":{"index.html":{}}}],["response",{"_index":173,"title":{"interfaces/Response.html":{}},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"coverage.html":{}}}],["response.interface",{"_index":1773,"title":{},"body":{"injectables/ResponseService.html":{}}}],["response/response.service",{"_index":1158,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["responseservice",{"_index":298,"title":{"injectables/ResponseService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"coverage.html":{},"overview.html":{}}}],["ressource",{"_index":1235,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/ResponseService.html":{}}}],["result",{"_index":410,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"miscellaneous/variables.html":{}}}],["result.public_id",{"_index":493,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["result.secure_url",{"_index":496,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":1557,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["rien",{"_index":157,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["routes",{"_index":1662,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["run",{"_index":2552,"title":{},"body":{"index.html":{}}}],["runs",{"_index":2574,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":143,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"dependencies.html":{}}}],["récupère",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["récupér",{"_index":1356,"title":{},"body":{"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["récupérer",{"_index":857,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["récupérée",{"_index":937,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["récupérées",{"_index":933,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["récupérés",{"_index":1921,"title":{},"body":{"injectables/SousServiceService.html":{},"injectables/TarifService.html":{}}}],["réinitialisation",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["réinitialiser",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["réservation",{"_index":1934,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["réussie",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ResponseService.html":{}}}],["rôles",{"_index":1037,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["s'il",{"_index":1558,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{}}}],["samedi",{"_index":1055,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["sans",{"_index":912,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/UtilisateurService.html":{}}}],["sauf",{"_index":2309,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["scalable",{"_index":2541,"title":{},"body":{"index.html":{}}}],["secret",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrétaire",{"_index":657,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["secrétaire'})@isnotempty()@isint",{"_index":641,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["select",{"_index":1089,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["selon",{"_index":1326,"title":{},"body":{"injectables/LogService.html":{}}}],["semaine",{"_index":1028,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["server",{"_index":2542,"title":{},"body":{"index.html":{}}}],["serveur",{"_index":1760,"title":{},"body":{"injectables/ResponseService.html":{}}}],["service",{"_index":740,"title":{"classes/Service.html":{}},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"classes/Service.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["service'})@apiparam({name",{"_index":1994,"title":{},"body":{"controllers/TarifController.html":{}}}],["service'})@apiresponse({status",{"_index":1380,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["service.controller",{"_index":1819,"title":{},"body":{"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{}}}],["service.controller.ts",{"_index":1862,"title":{},"body":{"controllers/SousServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:20",{"_index":1864,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:25",{"_index":1871,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:30",{"_index":1870,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:37",{"_index":1874,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:42",{"_index":1872,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:48",{"_index":1866,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.dto",{"_index":1428,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["service.dto.ts",{"_index":565,"title":{},"body":{"classes/ConnectServiceDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["service.dto.ts:11",{"_index":735,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:12",{"_index":739,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:13",{"_index":566,"title":{},"body":{"classes/ConnectServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["service.dto.ts:18",{"_index":567,"title":{},"body":{"classes/ConnectServiceDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{}}}],["service.dto.ts:19",{"_index":2143,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:7",{"_index":742,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["service.entity",{"_index":1860,"title":{},"body":{"classes/SousService.html":{}}}],["service.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["service.module.ts",{"_index":1897,"title":{},"body":{"modules/SousServiceModule.html":{}}}],["service.service",{"_index":1797,"title":{},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{}}}],["service.service.ts",{"_index":1898,"title":{},"body":{"injectables/SousServiceService.html":{},"coverage.html":{}}}],["service.service.ts:16",{"_index":1907,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:29",{"_index":1901,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:53",{"_index":1904,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:59",{"_index":1906,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:69",{"_index":1905,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:73",{"_index":1903,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:86",{"_index":1902,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:9",{"_index":1899,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.ts",{"_index":681,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":686,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["service.ts:6",{"_index":685,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["service/:id/full",{"_index":2025,"title":{},"body":{"controllers/TarifController.html":{}}}],["service/:id/full')@apioperation({summary",{"_index":2008,"title":{},"body":{"controllers/TarifController.html":{}}}],["service/:idservice",{"_index":1869,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service/dto/create",{"_index":749,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"coverage.html":{}}}],["service/dto/update",{"_index":2146,"title":{},"body":{"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["service/service.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["service/service.service",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["service/sous",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"coverage.html":{}}}],["servicecontroller",{"_index":1788,"title":{"controllers/ServiceController.html":{}},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["servicedto",{"_index":1807,"title":{"classes/ServiceDto.html":{}},"body":{"classes/ServiceDto.html":{},"coverage.html":{}}}],["servicemodule",{"_index":47,"title":{"modules/ServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["services",{"_index":1406,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"modules/ValidationModule.html":{}}}],["services'})@apiresponse({status",{"_index":1386,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["serviceservice",{"_index":57,"title":{"injectables/ServiceService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["serviceservice,uploadservice",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1024,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["set(reservations.map(r",{"_index":1090,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["setup",{"_index":2549,"title":{},"body":{"index.html":{}}}],["seulement",{"_index":1007,"title":{},"body":{"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{}}}],["si",{"_index":183,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/ServiceService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":2543,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":2594,"title":{},"body":{"index.html":{}}}],["sinon",{"_index":158,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/LogService.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["soft",{"_index":855,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["son",{"_index":1352,"title":{},"body":{"injectables/LogService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"index.html":{}}}],["sous",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["sousservice",{"_index":1358,"title":{"classes/SousService.html":{}},"body":{"classes/MedecinSousService.html":{},"injectables/MedecinSousServiceService.html":{},"classes/Service.html":{},"classes/SousService.html":{},"injectables/SousServiceService.html":{},"classes/Tarif.html":{},"injectables/TarifService.html":{},"coverage.html":{}}}],["sousservice.controller",{"_index":1461,"title":{},"body":{"modules/MedecinSousserviceModule.html":{}}}],["sousservice.controller.ts",{"_index":1374,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"coverage.html":{}}}],["sousservice.controller.ts:20",{"_index":1383,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:29",{"_index":1387,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:38",{"_index":1392,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:47",{"_index":1402,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:56",{"_index":1397,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.dto.ts",{"_index":569,"title":{},"body":{"classes/ConnectSousServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"coverage.html":{}}}],["sousservice.dto.ts:11",{"_index":747,"title":{},"body":{"classes/CreateSousServiceDto.html":{}}}],["sousservice.dto.ts:12",{"_index":570,"title":{},"body":{"classes/ConnectSousServiceDto.html":{},"classes/UpdateSousServiceDto.html":{}}}],["sousservice.dto.ts:18",{"_index":746,"title":{},"body":{"classes/CreateSousServiceDto.html":{}}}],["sousservice.dto.ts:19",{"_index":2145,"title":{},"body":{"classes/UpdateSousServiceDto.html":{}}}],["sousservice.entity",{"_index":1370,"title":{},"body":{"classes/MedecinSousService.html":{},"classes/Service.html":{},"classes/Tarif.html":{}}}],["sousservice.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["sousservice.module.ts",{"_index":1460,"title":{},"body":{"modules/MedecinSousserviceModule.html":{}}}],["sousservice.service",{"_index":1404,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"modules/MedecinSousserviceModule.html":{}}}],["sousservice.service.ts",{"_index":1421,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"coverage.html":{}}}],["sousservice.service.ts:10",{"_index":1422,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:107",{"_index":1427,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:147",{"_index":1426,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:17",{"_index":1423,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:81",{"_index":1424,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:91",{"_index":1425,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice/dto/create",{"_index":680,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["sousservice/dto/update",{"_index":2122,"title":{},"body":{"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["sousservice/medecin",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"coverage.html":{}}}],["sousservicecontroller",{"_index":1861,"title":{"controllers/SousServiceController.html":{}},"body":{"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"coverage.html":{}}}],["sousservicedto",{"_index":1886,"title":{"classes/SousServiceDto.html":{}},"body":{"classes/SousServiceDto.html":{},"coverage.html":{}}}],["sousservicemodule",{"_index":48,"title":{"modules/SousServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SousServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["sousservices",{"_index":1781,"title":{},"body":{"classes/Service.html":{},"injectables/SousServiceService.html":{}}}],["sousserviceservice",{"_index":1875,"title":{"injectables/SousServiceService.html":{}},"body":{"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["sponsors",{"_index":2647,"title":{},"body":{"index.html":{}}}],["spécifi",{"_index":1442,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["spécifique",{"_index":1016,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/UtilisateurService.html":{}}}],["src/.../main.ts",{"_index":2533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.middleware.ts",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../upload.interface.ts",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":122,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":123,"title":{},"body":{"injectables/AppService.html":{}}}],["src/async",{"_index":127,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:48",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/blacklist/blacklist.service.ts",{"_index":396,"title":{},"body":{"injectables/BlacklistService.html":{},"coverage.html":{}}}],["src/auth/blacklist/blacklist.service.ts:17",{"_index":406,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["src/auth/blacklist/blacklist.service.ts:5",{"_index":400,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["src/auth/blacklist/blacklist.service.ts:8",{"_index":404,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["src/auth/dto/change",{"_index":413,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/connect",{"_index":578,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"coverage.html":{}}}],["src/auth/dto/reset",{"_index":1734,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/jwt",{"_index":1217,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1236,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:22",{"_index":1241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":1239,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/optional",{"_index":1556,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{},"coverage.html":{}}}],["src/common/middleware/async",{"_index":168,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["src/devise/devise.controller.ts",{"_index":831,"title":{},"body":{"controllers/DeviseController.html":{},"coverage.html":{}}}],["src/devise/devise.controller.ts:17",{"_index":849,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:26",{"_index":859,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:35",{"_index":862,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:44",{"_index":867,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:53",{"_index":845,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:62",{"_index":854,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.service.ts",{"_index":900,"title":{},"body":{"injectables/DeviseService.html":{},"coverage.html":{}}}],["src/devise/devise.service.ts:110",{"_index":907,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:17",{"_index":904,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:52",{"_index":908,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:60",{"_index":910,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:73",{"_index":911,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:8",{"_index":901,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:87",{"_index":902,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/dto/create",{"_index":592,"title":{},"body":{"classes/CreateDeviseDto.html":{},"coverage.html":{}}}],["src/devise/dto/update",{"_index":2100,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"coverage.html":{}}}],["src/disponibilite/disponibilite.controller.ts",{"_index":959,"title":{},"body":{"controllers/DisponibiliteController.html":{},"coverage.html":{}}}],["src/disponibilite/disponibilite.controller.ts:16",{"_index":963,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.controller.ts:22",{"_index":965,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.controller.ts:29",{"_index":966,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.controller.ts:34",{"_index":970,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.module.ts",{"_index":994,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["src/disponibilite/disponibilite.service.ts",{"_index":996,"title":{},"body":{"injectables/DisponibiliteService.html":{},"coverage.html":{}}}],["src/disponibilite/disponibilite.service.ts:111",{"_index":1025,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:133",{"_index":1026,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:143",{"_index":1031,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:153",{"_index":1018,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:159",{"_index":1015,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:17",{"_index":1006,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:75",{"_index":1009,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:8",{"_index":1003,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:87",{"_index":1011,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/dto/create",{"_index":622,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"coverage.html":{}}}],["src/disponibilite/dto/update",{"_index":2110,"title":{},"body":{"classes/UpdateDisponibiliteDto.html":{},"coverage.html":{}}}],["src/generated/nestjs",{"_index":522,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"coverage.html":{}}}],["src/log",{"_index":1294,"title":{},"body":{"injectables/LogListener.html":{},"coverage.html":{}}}],["src/log/log.controller.ts",{"_index":1270,"title":{},"body":{"controllers/LogController.html":{},"coverage.html":{}}}],["src/log/log.controller.ts:15",{"_index":1275,"title":{},"body":{"controllers/LogController.html":{}}}],["src/log/log.controller.ts:21",{"_index":1276,"title":{},"body":{"controllers/LogController.html":{}}}],["src/log/log.module.ts",{"_index":1311,"title":{},"body":{"modules/LogModule.html":{}}}],["src/log/log.service.ts",{"_index":1315,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/log/log.service.ts:13",{"_index":1320,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:25",{"_index":1325,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:35",{"_index":1322,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:45",{"_index":1323,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:6",{"_index":1318,"title":{},"body":{"injectables/LogService.html":{}}}],["src/main.ts",{"_index":2504,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/medecin",{"_index":679,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["src/mode",{"_index":692,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["src/prisma/prisma.middleware.ts",{"_index":2506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.module.ts",{"_index":1604,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1607,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:13",{"_index":1616,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:24",{"_index":1615,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":1613,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/privilege/dto/create",{"_index":719,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"coverage.html":{}}}],["src/privilege/dto/find",{"_index":1198,"title":{},"body":{"classes/FindPrivilegeDto.html":{},"coverage.html":{}}}],["src/privilege/dto/update",{"_index":2138,"title":{},"body":{"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["src/privilege/entities/privilege.entity.ts",{"_index":1640,"title":{},"body":{"classes/Privilege-1.html":{},"coverage.html":{}}}],["src/privilege/privilege.controller.ts",{"_index":1642,"title":{},"body":{"controllers/PrivilegeController.html":{},"coverage.html":{}}}],["src/privilege/privilege.controller.ts:19",{"_index":1648,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:25",{"_index":1651,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:31",{"_index":1652,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:37",{"_index":1655,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:43",{"_index":1653,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.module.ts",{"_index":1679,"title":{},"body":{"modules/PrivilegeModule.html":{}}}],["src/privilege/privilege.service.ts",{"_index":1681,"title":{},"body":{"injectables/PrivilegeService.html":{},"coverage.html":{}}}],["src/privilege/privilege.service.ts:115",{"_index":1687,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:15",{"_index":1689,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:30",{"_index":1683,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:53",{"_index":1685,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:63",{"_index":1686,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:79",{"_index":1688,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:8",{"_index":1682,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/service/dto/create",{"_index":736,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"coverage.html":{}}}],["src/service/dto/update",{"_index":2144,"title":{},"body":{"classes/UpdateServiceDto-1.html":{},"coverage.html":{}}}],["src/service/service.controller.ts",{"_index":1789,"title":{},"body":{"controllers/ServiceController.html":{},"coverage.html":{}}}],["src/service/service.controller.ts:22",{"_index":1790,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:27",{"_index":1791,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:32",{"_index":1792,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:39",{"_index":1796,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:44",{"_index":1793,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.module.ts",{"_index":1818,"title":{},"body":{"modules/ServiceModule.html":{}}}],["src/service/service.service.ts",{"_index":1821,"title":{},"body":{"injectables/ServiceService.html":{},"coverage.html":{}}}],["src/service/service.service.ts:16",{"_index":1829,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:29",{"_index":1824,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:49",{"_index":1825,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:54",{"_index":1826,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:60",{"_index":1828,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:70",{"_index":1827,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:9",{"_index":1822,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/sous",{"_index":748,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["src/statut",{"_index":760,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["src/tarif/dto/create",{"_index":768,"title":{},"body":{"classes/CreateTarifDto-1.html":{},"coverage.html":{}}}],["src/tarif/dto/update",{"_index":2154,"title":{},"body":{"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["src/tarif/tarif.controller.ts",{"_index":1991,"title":{},"body":{"controllers/TarifController.html":{},"coverage.html":{}}}],["src/tarif/tarif.controller.ts:14",{"_index":1996,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:21",{"_index":2005,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:31",{"_index":2011,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:38",{"_index":2012,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:45",{"_index":2014,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:52",{"_index":1995,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:59",{"_index":2002,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:65",{"_index":2000,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.module.ts",{"_index":2046,"title":{},"body":{"modules/TarifModule.html":{}}}],["src/tarif/tarif.service.ts",{"_index":2048,"title":{},"body":{"injectables/TarifService.html":{},"coverage.html":{}}}],["src/tarif/tarif.service.ts:119",{"_index":2061,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:14",{"_index":2054,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:145",{"_index":2062,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:165",{"_index":2063,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:204",{"_index":2052,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:241",{"_index":2056,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:261",{"_index":2055,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:79",{"_index":2057,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:8",{"_index":2051,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:93",{"_index":2059,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts",{"_index":443,"title":{},"body":{"injectables/CloudinaryService.html":{},"coverage.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:11",{"_index":448,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:21",{"_index":462,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:50",{"_index":455,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:73",{"_index":450,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/interfaces/upload.interface.ts",{"_index":1188,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/upload/interfaces/upload.interface.ts:14",{"_index":1192,"title":{},"body":{"interfaces/FileStorageService.html":{}}}],["src/upload/interfaces/upload.interface.ts:19",{"_index":1190,"title":{},"body":{"interfaces/FileStorageService.html":{}}}],["src/upload/interfaces/upload.interface.ts:9",{"_index":1194,"title":{},"body":{"interfaces/FileStorageService.html":{}}}],["src/upload/upload.module.ts",{"_index":2209,"title":{},"body":{"modules/UploadModule.html":{}}}],["src/upload/upload.service.ts",{"_index":2218,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/upload/upload.service.ts:12",{"_index":2231,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:15",{"_index":2235,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:16",{"_index":2223,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:22",{"_index":2226,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:28",{"_index":2228,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:34",{"_index":2233,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:58",{"_index":2232,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:73",{"_index":2224,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/utilisateur/dto/change",{"_index":432,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"coverage.html":{}}}],["src/utilisateur/dto/create",{"_index":786,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"coverage.html":{}}}],["src/utilisateur/dto/find",{"_index":1201,"title":{},"body":{"classes/FindUtilisateurDto.html":{},"coverage.html":{}}}],["src/utilisateur/dto/update",{"_index":2163,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{},"coverage.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts",{"_index":2290,"title":{},"body":{"classes/Utilisateur-1.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.controller.ts",{"_index":2292,"title":{},"body":{"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.controller.ts:105",{"_index":2318,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:42",{"_index":2302,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:54",{"_index":2304,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:62",{"_index":2313,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:68",{"_index":2306,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:77",{"_index":2320,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:87",{"_index":2326,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:98",{"_index":2322,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.module.ts",{"_index":2371,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["src/utilisateur/utilisateur.service.ts",{"_index":2377,"title":{},"body":{"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.service.ts:100",{"_index":2386,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:109",{"_index":2390,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:124",{"_index":2394,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:168",{"_index":2393,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:17",{"_index":2381,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:179",{"_index":2383,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:204",{"_index":2389,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:207",{"_index":2388,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:228",{"_index":2387,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:24",{"_index":2385,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:241",{"_index":2392,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/validation/exception/exception.service.ts",{"_index":1131,"title":{},"body":{"injectables/ExceptionService.html":{},"coverage.html":{}}}],["src/validation/exception/exception.service.ts:11",{"_index":1139,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:14",{"_index":1153,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:23",{"_index":1145,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:28",{"_index":1150,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:33",{"_index":1148,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:38",{"_index":1156,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:9",{"_index":1142,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/response/response.interface.ts",{"_index":1736,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{}}}],["src/validation/exception/response/response.service.ts",{"_index":1740,"title":{},"body":{"injectables/ResponseService.html":{},"coverage.html":{}}}],["src/validation/exception/response/response.service.ts:15",{"_index":1756,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:24",{"_index":1749,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:33",{"_index":1762,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:41",{"_index":1767,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:49",{"_index":1765,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:57",{"_index":1752,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:6",{"_index":1769,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:67",{"_index":1758,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:74",{"_index":1772,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/validation.module.ts",{"_index":2456,"title":{},"body":{"modules/ValidationModule.html":{}}}],["src/validation/validation.service.ts",{"_index":2465,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{}}}],["src/validation/validation.service.ts:7",{"_index":2468,"title":{},"body":{"injectables/ValidationService.html":{}}}],["start",{"_index":2554,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2556,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2558,"title":{},"body":{"index.html":{}}}],["started",{"_index":2535,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2546,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/UtilisateurController.html":{}}}],["statuscode",{"_index":1738,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseService.html":{}}}],["statut",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateStatutReservationDto-1.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["statutreservation",{"_index":1711,"title":{"classes/StatutReservation.html":{}},"body":{"classes/Reservation.html":{},"classes/StatutReservation.html":{},"coverage.html":{}}}],["statutreservation.dto.ts",{"_index":572,"title":{},"body":{"classes/ConnectStatutReservationDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto.html":{},"coverage.html":{}}}],["statutreservation.dto.ts:11",{"_index":759,"title":{},"body":{"classes/CreateStatutReservationDto.html":{}}}],["statutreservation.dto.ts:12",{"_index":2148,"title":{},"body":{"classes/UpdateStatutReservationDto.html":{}}}],["statutreservation.dto.ts:13",{"_index":573,"title":{},"body":{"classes/ConnectStatutReservationDto.html":{}}}],["statutreservation.dto.ts:18",{"_index":574,"title":{},"body":{"classes/ConnectStatutReservationDto.html":{},"classes/CreateStatutReservationDto.html":{}}}],["statutreservation.dto.ts:19",{"_index":2147,"title":{},"body":{"classes/UpdateStatutReservationDto.html":{}}}],["statutreservation.entity",{"_index":1725,"title":{},"body":{"classes/Reservation.html":{}}}],["statutreservationcontroller",{"_index":69,"title":{"controllers/StatutReservationController.html":{}},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"coverage.html":{}}}],["statutreservationdto",{"_index":1951,"title":{"classes/StatutReservationDto.html":{}},"body":{"classes/StatutReservationDto.html":{},"coverage.html":{}}}],["statutreservationmodule",{"_index":49,"title":{"modules/StatutReservationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatutReservationModule.html":{},"modules.html":{},"overview.html":{}}}],["statutreservationservice",{"_index":58,"title":{"injectables/StatutReservationService.html":{}},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"coverage.html":{},"overview.html":{}}}],["statuts",{"_index":1931,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["stay",{"_index":2632,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2571,"title":{},"body":{"index.html":{}}}],["stocke",{"_index":165,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["store",{"_index":150,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"miscellaneous/variables.html":{}}}],["store.ip",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.userid",{"_index":161,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"miscellaneous/variables.html":{}}}],["store?.userid",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["straightforward",{"_index":2590,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1244,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":1746,"title":{},"body":{"injectables/ResponseService.html":{}}}],["success(data",{"_index":1768,"title":{},"body":{"injectables/ResponseService.html":{}}}],["succès",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["succès'})@apiresponse({status",{"_index":1646,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["summary",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["super",{"_index":1230,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super(options",{"_index":2479,"title":{},"body":{"injectables/ValidationService.html":{}}}],["super.canactivate(context",{"_index":1231,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":2611,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suppression",{"_index":520,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/MedecinSousServiceService.html":{}}}],["supprim",{"_index":1396,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["supprimer",{"_index":853,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["supprimée",{"_index":518,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{}}}],["surtout",{"_index":2205,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["svg",{"_index":2664,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1660,"title":{},"body":{"controllers/PrivilegeController.html":{},"classes/UpdateUtilisateurDto-1.html":{},"dependencies.html":{}}}],["symbole",{"_index":594,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto-1.html":{}}}],["sécurisée",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["sérialiser",{"_index":1337,"title":{},"body":{"injectables/LogService.html":{}}}],["t",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"injectables/UtilisateurService.html":{}}}],["table",{"_index":2509,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2572,"title":{},"body":{"index.html":{}}}],["target",{"_index":2474,"title":{},"body":{"injectables/ValidationService.html":{}}}],["tarif",{"_index":826,"title":{"classes/Tarif.html":{}},"body":{"classes/Devise.html":{},"classes/SousService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"coverage.html":{}}}],["tarif'})@apiparam({name",{"_index":2001,"title":{},"body":{"controllers/TarifController.html":{}}}],["tarif.actif",{"_index":2096,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarif.controller",{"_index":2047,"title":{},"body":{"modules/TarifModule.html":{}}}],["tarif.dto",{"_index":2017,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateTarifDto-1.html":{}}}],["tarif.dto.ts",{"_index":576,"title":{},"body":{"classes/ConnectTarifDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["tarif.dto.ts:11",{"_index":772,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["tarif.dto.ts:12",{"_index":577,"title":{},"body":{"classes/ConnectTarifDto.html":{},"classes/CreateTarifDto.html":{}}}],["tarif.dto.ts:13",{"_index":2153,"title":{},"body":{"classes/UpdateTarifDto.html":{}}}],["tarif.dto.ts:16",{"_index":766,"title":{},"body":{"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["tarif.dto.ts:18",{"_index":2151,"title":{},"body":{"classes/UpdateTarifDto.html":{}}}],["tarif.dto.ts:20",{"_index":770,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["tarif.dto.ts:23",{"_index":767,"title":{},"body":{"classes/CreateTarifDto.html":{}}}],["tarif.dto.ts:25",{"_index":2152,"title":{},"body":{"classes/UpdateTarifDto.html":{}}}],["tarif.dto.ts:7",{"_index":773,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["tarif.entity",{"_index":830,"title":{},"body":{"classes/Devise.html":{},"classes/SousService.html":{}}}],["tarif.iddevise",{"_index":2091,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarif.idsousservice",{"_index":2090,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarif.service",{"_index":2016,"title":{},"body":{"controllers/TarifController.html":{},"modules/TarifModule.html":{}}}],["tarif/tarif.controller",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["tarif/tarif.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["tarif/tarif.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["tarifcontroller",{"_index":68,"title":{"controllers/TarifController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"coverage.html":{}}}],["tarifdto",{"_index":2036,"title":{"classes/TarifDto.html":{}},"body":{"classes/TarifDto.html":{},"coverage.html":{}}}],["tarifexisting",{"_index":2081,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarifexisting.iddevise",{"_index":2086,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarifexisting.idsousservice",{"_index":2084,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarifmodule",{"_index":50,"title":{"modules/TarifModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TarifModule.html":{},"modules.html":{},"overview.html":{}}}],["tarifs",{"_index":817,"title":{},"body":{"classes/Devise.html":{},"classes/SousService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["tarifs'})@apiquery({name",{"_index":2004,"title":{},"body":{"controllers/TarifController.html":{}}}],["tarifservice",{"_index":59,"title":{"injectables/TarifService.html":{}},"body":{"modules/AppModule.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"coverage.html":{},"overview.html":{}}}],["telephone",{"_index":588,"title":{},"body":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["test",{"_index":2561,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":2564,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2563,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2559,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":2646,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":1621,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":1631,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$use(loggingmiddleware(this.eventemitter",{"_index":1620,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.changepassword(req.user.id",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(connectutilisateurdto.email",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(token",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(resetpassworddto",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.basedir",{"_index":2239,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.blacklistservice.blacklisttoken(token",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.blacklistservice.istokenblacklisted(token",{"_index":1252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.configservice.get('jwt_secret",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.deviseservice.activate(+id",{"_index":886,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.create(dto",{"_index":876,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.delete(+id",{"_index":889,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.findall",{"_index":877,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.findbyid(+id",{"_index":880,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.update(+id",{"_index":883,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.disponibiliteservice.create(dto",{"_index":977,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.disponibiliteservice.findall",{"_index":978,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.disponibiliteservice.finddisponibilitesbyid(+id",{"_index":979,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.disponibiliteservice.finddisponibilitesbymedecin(+idmedecin",{"_index":982,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.ensuredirectory(folder",{"_index":2251,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.exceptionservice.createvalidationexception(errors",{"_index":2478,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.findbyid(id",{"_index":938,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.findone(id",{"_index":2448,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.formaterrors(errors",{"_index":1169,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.generatefilename(file.originalname",{"_index":2253,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.generercreneauxdisponibles(dispo",{"_index":1106,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.generercreneauxdisponibles(disponibilite",{"_index":1094,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.getnumerosemaine",{"_index":1078,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.httpresponseservice.badrequest",{"_index":1170,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.httpresponseservice.forbidden(message",{"_index":1173,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.httpresponseservice.internalerror(message",{"_index":1177,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.httpresponseservice.notfound(message",{"_index":1175,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.jwtservice.sign(payload",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error",{"_index":481,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logger.error(`échec",{"_index":509,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logger.log",{"_index":516,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logger.log(`image",{"_index":491,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["this.logger.warn",{"_index":519,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logservice.createlog(payload",{"_index":1306,"title":{},"body":{"injectables/LogListener.html":{}}}],["this.logservice.findall(req.user",{"_index":1283,"title":{},"body":{"controllers/LogController.html":{}}}],["this.logservice.findbyid(+id",{"_index":1284,"title":{},"body":{"controllers/LogController.html":{}}}],["this.modepaiementservice.create(dto",{"_index":1502,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.findall",{"_index":1503,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.findone(+id",{"_index":1504,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.remove(+id",{"_index":1506,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.update(+id",{"_index":1505,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.parsetime(disponibilite.heuredebut",{"_index":1096,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.parsetime(disponibilite.heurefin",{"_index":1097,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.$transaction(async",{"_index":921,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/TarifService.html":{}}}],["this.prisma.blacklistedtoken.create",{"_index":408,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["this.prisma.blacklistedtoken.findunique",{"_index":411,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["this.prisma.devise.findmany",{"_index":931,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.prisma.devise.findunique",{"_index":916,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/TarifService.html":{}}}],["this.prisma.devise.update",{"_index":940,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.prisma.disponibilite.create",{"_index":1073,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.disponibilite.findfirst",{"_index":1066,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.disponibilite.findmany",{"_index":1080,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.disponibilite.findunique",{"_index":1084,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.log.create",{"_index":1332,"title":{},"body":{"injectables/LogService.html":{}}}],["this.prisma.log.findfirst",{"_index":1353,"title":{},"body":{"injectables/LogService.html":{}}}],["this.prisma.log.findmany",{"_index":1349,"title":{},"body":{"injectables/LogService.html":{}}}],["this.prisma.medecinsousservice.create",{"_index":1448,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.medecinsousservice.findfirst",{"_index":1444,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.medecinsousservice.findmany",{"_index":1450,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.medecinsousservice.update",{"_index":1456,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.modepaiement.create",{"_index":1546,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.findfirst",{"_index":1538,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.findmany",{"_index":1549,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.findunique",{"_index":1551,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.update",{"_index":1554,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.privilege.create",{"_index":1698,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.prisma.privilege.findfirst",{"_index":1702,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.privilege.findmany",{"_index":1700,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.prisma.privilege.findunique",{"_index":1693,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.privilege.update",{"_index":1707,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.prisma.reservation.findmany",{"_index":1087,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.service.create",{"_index":1838,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findfirst",{"_index":1832,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findmany",{"_index":1840,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findunique",{"_index":1842,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["this.prisma.service.update",{"_index":1847,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.sousservice.create",{"_index":1912,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.sousservice.findfirst",{"_index":1909,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.sousservice.findmany",{"_index":1920,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.sousservice.findunique",{"_index":1429,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{}}}],["this.prisma.sousservice.update",{"_index":1918,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.statutreservation.create",{"_index":1971,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.findfirst",{"_index":1969,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.findmany",{"_index":1973,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.findunique",{"_index":1976,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.update",{"_index":1978,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.tarif.findfirst",{"_index":2069,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.tarif.findmany",{"_index":2076,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.tarif.findunique",{"_index":2078,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.tarif.update",{"_index":2095,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.utilisateur.create",{"_index":2415,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.findfirst",{"_index":1534,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.findmany",{"_index":2417,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.findunique",{"_index":1040,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.update",{"_index":2446,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.privilegeservice.create(createprivilegedto",{"_index":1665,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.findall(req.user",{"_index":1666,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.findone(+id",{"_index":1667,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.remove(+id",{"_index":1669,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.update(+id",{"_index":1668,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.responseservice.badrequest",{"_index":1695,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/TarifService.html":{}}}],["this.responseservice.badrequest(['ce",{"_index":2407,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.badrequest(['cet",{"_index":2403,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.badrequest([`devise",{"_index":2067,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.badrequest([`le",{"_index":2097,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.badrequest([`sous",{"_index":2065,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.created(created",{"_index":1449,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{}}}],["this.responseservice.created(devise",{"_index":928,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.created(disponibilite",{"_index":1079,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.responseservice.created(privilege",{"_index":1699,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.created(service",{"_index":1839,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.created(sousservice",{"_index":1913,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.created(tarif",{"_index":2074,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.created(utilisateur",{"_index":2416,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.error(error.message",{"_index":2075,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.forbidden(\"l'utilisateur",{"_index":1441,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden(\"seul",{"_index":1453,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden(\"seuls",{"_index":1535,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.forbidden(\"utilisateur",{"_index":1433,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden('ce",{"_index":1445,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden('seul",{"_index":1436,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden('vous",{"_index":1232,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.responseservice.notfound(`aucun",{"_index":2451,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.notfound(`l'utilisateur",{"_index":2419,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.notfound(`le",{"_index":1431,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.notfound(`tarif",{"_index":2079,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DisponibiliteService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(activateddevise",{"_index":945,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(activatedtarif",{"_index":2093,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(data",{"_index":1451,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.success(devise",{"_index":936,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(devises",{"_index":932,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(disponibilites",{"_index":1083,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.responseservice.success(item",{"_index":1977,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.responseservice.success(list",{"_index":1974,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.responseservice.success(log",{"_index":1355,"title":{},"body":{"injectables/LogService.html":{}}}],["this.responseservice.success(logs",{"_index":1351,"title":{},"body":{"injectables/LogService.html":{}}}],["this.responseservice.success(mode",{"_index":1553,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.responseservice.success(modes",{"_index":1550,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.responseservice.success(null",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(privilege",{"_index":1703,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.success(privileges",{"_index":1701,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.success(service",{"_index":1844,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.success(services",{"_index":1841,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.success(sousservice",{"_index":1915,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.success(sousservices",{"_index":1922,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.success(tarif",{"_index":2080,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(tarifs",{"_index":2077,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(updated",{"_index":1457,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{}}}],["this.responseservice.success(updateddevise",{"_index":941,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(updatedprivilege",{"_index":1708,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.success(updatedservice",{"_index":1848,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.success(updatedsousservice",{"_index":1919,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.success(updatedtarif",{"_index":2089,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(updatedutilisateur",{"_index":2447,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(user",{"_index":2452,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(utilisateur",{"_index":2420,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(utilisateurs",{"_index":2418,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.unauthorized",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.responseservice.unauthorized('token",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.create(dto",{"_index":1408,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.findall",{"_index":1409,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.findone(+id",{"_index":1411,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.remove(+id",{"_index":1414,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.update(+id",{"_index":1412,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.serviceservice.create(createservicedto",{"_index":1801,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.findall",{"_index":1802,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.findone(+id",{"_index":1803,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.remove(+id",{"_index":1806,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.update(+id",{"_index":1805,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.sousserviceservice.create(createsousservicedto",{"_index":1878,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.findall",{"_index":1885,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.findbyserviceid((+idservice",{"_index":1881,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.findone(+id",{"_index":1879,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.remove(+id",{"_index":1883,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.update(+id",{"_index":1882,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.tarifservice.activate(+id",{"_index":2030,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.create(dto",{"_index":2021,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.deactivate(+id",{"_index":2035,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.delete(+id",{"_index":2031,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findall",{"_index":2024,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findallbysousservice(+idsousservice",{"_index":2023,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findallbysousservicefull(+id",{"_index":2027,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findbyid(+id",{"_index":2028,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.update(+id",{"_index":2029,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.uploadservice.deletefile(profilurl",{"_index":2429,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.uploadservice.uploadsingle(file",{"_index":1543,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["this.uploadsingle(file",{"_index":508,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.utilisateurservice.create(createutilisateurdto",{"_index":2336,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findall",{"_index":2337,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findallclients",{"_index":2341,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findallwithoutadminsandclients",{"_index":2340,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findbyemail(email",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.findone(+id",{"_index":2342,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findutilisateurbyemail(email",{"_index":2348,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.remove(+id",{"_index":2345,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.update(+id",{"_index":2344,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.validateutilisateur(email",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifyadmin(currentuser",{"_index":1537,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["this.verifyadmin(user",{"_index":1348,"title":{},"body":{"injectables/LogService.html":{}}}],["throw",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["time",{"_index":618,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"index.html":{}}}],["timestamp",{"_index":1739,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseService.html":{}}}],["token",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["token')@apioperation({summary",{"_index":2299,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["token')@useguards(jwtauthguard)@apioperation({summary",{"_index":1378,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["token'})@apiresponse({status",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["ton",{"_index":2353,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["touch",{"_index":2654,"title":{},"body":{"index.html":{}}}],["tous",{"_index":1274,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{}}}],["toute",{"_index":2462,"title":{},"body":{"modules/ValidationModule.html":{}}}],["toutes",{"_index":858,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/PrivilegeController.html":{}}}],["transform",{"_index":2472,"title":{},"body":{"injectables/ValidationService.html":{}}}],["transformer",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2475,"title":{},"body":{"injectables/ValidationService.html":{}}}],["tre",{"_index":722,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/PrivilegeService.html":{}}}],["trop",{"_index":2180,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["trouv",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["trouvé'})@apiresponse({status",{"_index":2317,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["trouvée",{"_index":935,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ResponseService.html":{},"injectables/TarifService.html":{}}}],["true",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["try",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/PrismaService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{}}}],["ts",{"_index":198,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{}}}],["tu",{"_index":2349,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["twitter",{"_index":2660,"title":{},"body":{"index.html":{}}}],["type",{"_index":138,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeconsultation",{"_index":730,"title":{},"body":{"classes/CreateReservationDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/UpdateReservationDto.html":{}}}],["types",{"_index":2104,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"dependencies.html":{}}}],["typescript",{"_index":1162,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["téléphone",{"_index":797,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["ui",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":1747,"title":{},"body":{"injectables/ResponseService.html":{}}}],["unauthorized(message",{"_index":1771,"title":{},"body":{"injectables/ResponseService.html":{}}}],["unauthorizedexception",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["unauthorizedexception(\"non",{"_index":1532,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["unauthorizedexception(\"vous",{"_index":1691,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["unauthorizedexception('mot",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('seuls",{"_index":1345,"title":{},"body":{"injectables/LogService.html":{}}}],["unauthorizedexception('token",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('utilisateur",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('vous",{"_index":1343,"title":{},"body":{"injectables/LogService.html":{}}}],["undefined",{"_index":613,"title":{},"body":{"classes/CreateDeviseDto.html":{},"injectables/ModePaiementService.html":{},"injectables/UtilisateurService.html":{}}}],["une",{"_index":192,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"classes/CreatePrivilegeDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/LogService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["unique",{"_index":1696,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["uniquement",{"_index":1650,"title":{},"body":{"controllers/PrivilegeController.html":{},"controllers/UtilisateurController.html":{},"miscellaneous/variables.html":{}}}],["uniquement)'})@apiresponse({status",{"_index":1645,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["unit",{"_index":2560,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["unlicensed",{"_index":2673,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":1164,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["update",{"_index":838,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["update(@param('id",{"_index":882,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["update(id",{"_index":863,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["updated",{"_index":1455,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{}}}],["updatedat",{"_index":818,"title":{},"body":{"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["updateddevise",{"_index":939,"title":{},"body":{"injectables/DeviseService.html":{}}}],["updatedevisedto",{"_index":864,"title":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{}},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"coverage.html":{}}}],["updatedisponibilitedto",{"_index":973,"title":{"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{}},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"coverage.html":{}}}],["updatedossiermedicaldto",{"_index":2115,"title":{"classes/UpdateDossierMedicalDto.html":{}},"body":{"classes/UpdateDossierMedicalDto.html":{},"coverage.html":{}}}],["updatedprivilege",{"_index":1706,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["updatedservice",{"_index":1846,"title":{},"body":{"injectables/ServiceService.html":{}}}],["updatedsousservice",{"_index":1917,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["updatedtarif",{"_index":2087,"title":{},"body":{"injectables/TarifService.html":{}}}],["updatedutilisateur",{"_index":2445,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatelogdto",{"_index":2119,"title":{"classes/UpdateLogDto.html":{}},"body":{"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["updatemedecinsousservicedto",{"_index":1398,"title":{"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["updatemodepaiementdto",{"_index":1485,"title":{"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{}},"body":{"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["updateordonnancedto",{"_index":2130,"title":{"classes/UpdateOrdonnanceDto.html":{}},"body":{"classes/UpdateOrdonnanceDto.html":{},"coverage.html":{}}}],["updatepaiementdto",{"_index":2132,"title":{"classes/UpdatePaiementDto.html":{}},"body":{"classes/UpdatePaiementDto.html":{},"coverage.html":{}}}],["updateprivilegedto",{"_index":1654,"title":{"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{}},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["updateprivilegedto.libelle",{"_index":1704,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["updatereservationdto",{"_index":2140,"title":{"classes/UpdateReservationDto.html":{}},"body":{"classes/UpdateReservationDto.html":{},"coverage.html":{}}}],["updates",{"_index":2634,"title":{},"body":{"index.html":{}}}],["updateservicedto",{"_index":1794,"title":{"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{}},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"coverage.html":{}}}],["updateservicedto.iconurl",{"_index":1845,"title":{},"body":{"injectables/ServiceService.html":{}}}],["updatesousservicedto",{"_index":1873,"title":{"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{}},"body":{"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["updatesousservicedto.iconurl",{"_index":1916,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["updatestatutreservationdto",{"_index":1943,"title":{"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{}},"body":{"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["updatetarifdto",{"_index":2013,"title":{"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{}},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["updatetarifdto.actif",{"_index":2082,"title":{},"body":{"injectables/TarifService.html":{}}}],["updatetarifdto.iddevise",{"_index":2085,"title":{},"body":{"injectables/TarifService.html":{}}}],["updatetarifdto.idsousservice",{"_index":2083,"title":{},"body":{"injectables/TarifService.html":{}}}],["updateutilisateurdto",{"_index":2156,"title":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["updateutilisateurdto.email",{"_index":2434,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.idprivilege",{"_index":2441,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.nom",{"_index":2430,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.password",{"_index":2436,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.prenom",{"_index":2432,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.profil",{"_index":2443,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.telephone",{"_index":2439,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["upload",{"_index":1196,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"miscellaneous/variables.html":{}}}],["upload.service",{"_index":2211,"title":{},"body":{"modules/UploadModule.html":{}}}],["upload/interfaces/upload.interface",{"_index":1530,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["upload/upload.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/ModePaiementModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/UtilisateurModule.html":{}}}],["upload/upload.service",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["uploaded",{"_index":1542,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["uploaded.url",{"_index":1545,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["uploadedfile",{"_index":1488,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["uploadfile",{"_index":2222,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(image",{"_index":2230,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadmodule",{"_index":51,"title":{"modules/UploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModePaiementModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadmultiple",{"_index":446,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["uploadmultiple(files",{"_index":452,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["uploadresult",{"_index":1836,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["uploadresult.url",{"_index":1837,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["uploads",{"_index":2241,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploads/${relativepath",{"_index":2259,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservice",{"_index":60,"title":{"injectables/UploadService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ModePaiementService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadsingle",{"_index":447,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["uploadsingle(file",{"_index":461,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["uploadstream",{"_index":478,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["uploadstream.end(file.buffer",{"_index":497,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["uploadée",{"_index":492,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["url",{"_index":495,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateSousServiceDto-1.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"injectables/UploadService.html":{}}}],["usd",{"_index":608,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["use",{"_index":170,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["use(req",{"_index":171,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["useclass",{"_index":2215,"title":{},"body":{"modules/UploadModule.html":{}}}],["usefactory",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["useguards(jwtauthguard",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":1483,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":1479,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":1481,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(jwtauthguard)@patch(':id')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1486,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(optionaljwtauthguard",{"_index":2333,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["useinterceptors",{"_index":1489,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1804,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["useinterceptors(fileinterceptor('icon",{"_index":1499,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useinterceptors(fileinterceptor('iconurl",{"_index":1800,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["useinterceptors(fileinterceptor('profilurl",{"_index":2334,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["user",{"_index":1039,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["user.privilege.libelle",{"_index":1434,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["user.privilege?.libelle",{"_index":1344,"title":{},"body":{"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["userid",{"_index":151,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":2626,"title":{},"body":{"index.html":{}}}],["utilis",{"_index":2404,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur",{"_index":227,"title":{"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DossierMedical.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/Ordonnance.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["utilisateur.controller",{"_index":2372,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["utilisateur.dto",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.dto.ts",{"_index":579,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"coverage.html":{}}}],["utilisateur.dto.ts:11",{"_index":782,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:12",{"_index":2159,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:13",{"_index":583,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["utilisateur.dto.ts:15",{"_index":783,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:17",{"_index":2160,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:18",{"_index":589,"title":{},"body":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["utilisateur.dto.ts:19",{"_index":781,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:22",{"_index":2158,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:23",{"_index":590,"title":{},"body":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:27",{"_index":785,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:28",{"_index":1211,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["utilisateur.dto.ts:29",{"_index":2167,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:31",{"_index":805,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:32",{"_index":2162,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:33",{"_index":784,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:35",{"_index":790,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:38",{"_index":2161,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:39",{"_index":794,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:40",{"_index":780,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:45",{"_index":2157,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:46",{"_index":2190,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:52",{"_index":2184,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:58",{"_index":2170,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:62",{"_index":2187,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:8",{"_index":581,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["utilisateur.email",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.entity",{"_index":1120,"title":{},"body":{"classes/DossierMedical.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/Ordonnance.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{}}}],["utilisateur.id",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.idprivilege",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.password",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.service",{"_index":2327,"title":{},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{}}}],["utilisateur/utilisateur.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["utilisateur/utilisateur.service",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["utilisateurcontroller",{"_index":2291,"title":{"controllers/UtilisateurController.html":{}},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"coverage.html":{}}}],["utilisateurdto",{"_index":2355,"title":{"classes/UtilisateurDto.html":{}},"body":{"classes/UtilisateurDto.html":{},"coverage.html":{}}}],["utilisateurid",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateurmodule",{"_index":52,"title":{"modules/UtilisateurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["utilisateurs",{"_index":1633,"title":{},"body":{"classes/Privilege.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateurservice",{"_index":299,"title":{"injectables/UtilisateurService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["utilises",{"_index":2350,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["utilisée",{"_index":1330,"title":{},"body":{"injectables/LogService.html":{}}}],["v2",{"_index":464,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["val",{"_index":2424,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["valeur",{"_index":194,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"classes/CreateDeviseDto.html":{}}}],["validate",{"_index":1238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":1240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":2191,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["validateif(o",{"_index":2192,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["validateutilisateur",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateutilisateur(email",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":1048,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["validation.service",{"_index":2457,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation/exception/response/response.service",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["validation/validation.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["validation/validation.service",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["validationerror",{"_index":1152,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/ValidationService.html":{}}}],["validationmodule",{"_index":53,"title":{"modules/ValidationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2466,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validationpipeoptions",{"_index":2469,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validationservice",{"_index":61,"title":{"injectables/ValidationService.html":{}},"body":{"modules/AppModule.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":426,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["valide",{"_index":505,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["value",{"_index":457,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"injectables/ResponseService.html":{},"injectables/UploadService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2674,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1165,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["vendredi",{"_index":1054,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["ventuellement",{"_index":799,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["verifyadmin",{"_index":1317,"title":{},"body":{"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["verifyadmin(currentuser",{"_index":1527,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["verifyadmin(user",{"_index":1324,"title":{},"body":{"injectables/LogService.html":{}}}],["version",{"_index":2671,"title":{},"body":{"properties.html":{}}}],["veuillez",{"_index":1253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["vide",{"_index":490,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreatePrivilegeDto-1.html":{}}}],["vide'})@isstring({message",{"_index":723,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{}}}],["video",{"_index":2619,"title":{},"body":{"index.html":{}}}],["visit",{"_index":2608,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2622,"title":{},"body":{"index.html":{}}}],["viter",{"_index":612,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UtilisateurModule.html":{}}}],["void",{"_index":177,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"injectables/LogService.html":{},"injectables/UploadService.html":{}}}],["votre",{"_index":1327,"title":{},"body":{"injectables/LogService.html":{}}}],["vous",{"_index":1254,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LogService.html":{}}}],["vérification",{"_index":812,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{}}}],["vérifier",{"_index":1064,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["watch",{"_index":2555,"title":{},"body":{"index.html":{}}}],["website",{"_index":2658,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":2471,"title":{},"body":{"injectables/ValidationService.html":{}}}],["withcreneaux",{"_index":1102,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["working",{"_index":2607,"title":{},"body":{"index.html":{}}}],["world",{"_index":125,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":2636,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1193,"title":{},"body":{"interfaces/FileStorageService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/TarifController.html":{},"injectables/UtilisateurService.html":{}}}],["you'd",{"_index":2650,"title":{},"body":{"index.html":{}}}],["you're",{"_index":2565,"title":{},"body":{"index.html":{}}}],["z])(?=.*[a",{"_index":2178,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&]).{8",{"_index":2179,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["zoom",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["zéro",{"_index":154,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDisponibiliteModule\n\nDisponibiliteModule\n\nAppModule -->\n\nDisponibiliteModule->AppModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nAppModule -->\n\nLogModule->AppModule\n\n\n\n\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule\n\nAppModule -->\n\nMedecinSousserviceModule->AppModule\n\n\n\n\n\nModePaiementModule\n\nModePaiementModule\n\nAppModule -->\n\nModePaiementModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrivilegeModule\n\nPrivilegeModule\n\nAppModule -->\n\nPrivilegeModule->AppModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nSousServiceModule\n\nSousServiceModule\n\nAppModule -->\n\nSousServiceModule->AppModule\n\n\n\n\n\nStatutReservationModule\n\nStatutReservationModule\n\nAppModule -->\n\nStatutReservationModule->AppModule\n\n\n\n\n\nTarifModule\n\nTarifModule\n\nAppModule -->\n\nTarifModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nAppModule -->\n\nValidationModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDeviseService\n\nDeviseService\n\nAppModule -->\n\nDeviseService->AppModule\n\n\n\n\n\nDisponibiliteService\n\nDisponibiliteService\n\nAppModule -->\n\nDisponibiliteService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nAppModule -->\n\nServiceService->AppModule\n\n\n\n\n\nStatutReservationService\n\nStatutReservationService\n\nAppModule -->\n\nStatutReservationService->AppModule\n\n\n\n\n\nTarifService\n\nTarifService\n\nAppModule -->\n\nTarifService->AppModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nAppModule -->\n\nUploadService->AppModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nAppModule -->\n\nValidationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DeviseService\n                        \n                        \n                            DisponibiliteService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ServiceService\n                        \n                        \n                            StatutReservationService\n                        \n                        \n                            TarifService\n                        \n                        \n                            UploadService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            DisponibiliteController\n                        \n                        \n                            DeviseController\n                        \n                        \n                            TarifController\n                        \n                        \n                            StatutReservationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DisponibiliteModule\n                        \n                        \n                            LogModule\n                        \n                        \n                            MedecinSousserviceModule\n                        \n                        \n                            ModePaiementModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            PrivilegeModule\n                        \n                        \n                            ServiceModule\n                        \n                        \n                            SousServiceModule\n                        \n                        \n                            StatutReservationModule\n                        \n                        \n                            TarifModule\n                        \n                        \n                            UploadModule\n                        \n                        \n                            UtilisateurModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { PrivilegeModule } from './privilege/privilege.module';\nimport { ValidationService } from './validation/validation.service';\nimport { ValidationModule } from './validation/validation.module';\nimport { UtilisateurModule } from './utilisateur/utilisateur.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { LogModule } from './log/log.module';\nimport { LogListener } from './log-listener/log-listener';\nimport { UploadModule } from './upload/upload.module';\nimport { ServiceService } from './service/service.service';\n\nimport { ServiceModule } from './service/service.module';\nimport { SousServiceModule } from './sous-service/sous-service.module';\nimport { UploadService } from './upload/upload.service';\nimport { MedecinSousserviceModule } from './medecin-sousservice/medecin-sousservice.module';\nimport { DisponibiliteService } from './disponibilite/disponibilite.service';\nimport { DisponibiliteController } from './disponibilite/disponibilite.controller';\nimport { DisponibiliteModule } from './disponibilite/disponibilite.module';\nimport { DeviseService } from './devise/devise.service';\nimport { DeviseController } from './devise/devise.controller';\nimport { TarifController } from './tarif/tarif.controller';\nimport { TarifService } from './tarif/tarif.service';\nimport { TarifModule } from './tarif/tarif.module';\nimport { StatutReservationService } from './statut-reservation/statut-reservation.service';\nimport { StatutReservationController } from './statut-reservation/statut-reservation.controller';\nimport { StatutReservationModule } from './statut-reservation/statut-reservation.module';\nimport { ModePaiementModule } from './mode-paiement/mode-paiement.module';\n\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot(),\n    ConfigModule.forRoot({ isGlobal: true }),\n    PrismaModule, PrivilegeModule, ValidationModule, UtilisateurModule, AuthModule, LogModule, UploadModule, ServiceModule, SousServiceModule, MedecinSousserviceModule, DisponibiliteModule, TarifModule, StatutReservationModule, ModePaiementModule],\n  controllers: [AppController, DisponibiliteController, DeviseController, TarifController, StatutReservationController],\n  providers: [AppService, PrismaService, ValidationService, ServiceService,UploadService, DisponibiliteService, DeviseService, TarifService, StatutReservationService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AsyncContextInterceptor.html":{"url":"injectables/AsyncContextInterceptor.html","title":"injectable - AsyncContextInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AsyncContextInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/async-context/async-context.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/async-context/async-context.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { asyncLocalStorage } from '../prisma/prisma.middleware';\n\n@Injectable()\nexport class AsyncContextInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    const store = {\n      userId: request.user?.id, // Jamais zéro. Ne crée rien sinon.\n      ip: request.ip,\n    };\n\n    if (!store.userId) {\n      return next.handle(); // Pas d'utilisateur, on ne stocke rien\n    }\n\n    return asyncLocalStorage.run(store, () => next.handle());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AsyncContextMiddleware.html":{"url":"injectables/AsyncContextMiddleware.html","title":"injectable - AsyncContextMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AsyncContextMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/async-context/async-context.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/middleware/async-context/async-context.middleware.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { asyncLocalStorage } from '../../../prisma/prisma.middleware';\n\n@Injectable()\nexport class AsyncContextMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    // req.user est disponible si l'authentification (ex. JwtAuthGuard) est déjà appliquée\n    const context = {\n      userId: req.user?.id || 0, // 0 (ou une autre valeur) si non authentifié\n      ip: req.ip,\n    };\n\n    // @ts-ignore\n    asyncLocalStorage.run(context, () => {\n      next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(req, changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Changer le mot de passe de l'utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(connectUtilisateurDto: ConnectUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'Authentifier un utilisateur et générer un token JWT'})@ApiResponse({status: 200, description: 'Connexion réussie'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                connectUtilisateurDto\n                                            \n                                                            ConnectUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(authHeader: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Déconnexion sécurisée avec blacklist du token'})@ApiResponse({status: 200, description: 'Déconnexion réussie'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authHeader\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(resetPasswordDto: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@ApiOperation({summary: 'Réinitialiser le mot de passe'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resetPasswordDto\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Request, Headers } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ConnectUtilisateurDto } from './dto/connect-utilisateur.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { JwtAuthGuard } from './jwt-auth/jwt-auth.guard';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Authentification')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('login')\n  @ApiOperation({ summary: \"Authentifier un utilisateur et générer un token JWT\" })\n  @ApiResponse({ status: 200, description: 'Connexion réussie' })\n  async login(@Body() connectUtilisateurDto: ConnectUtilisateurDto) {\n    return this.authService.login(connectUtilisateurDto.email, connectUtilisateurDto.password);\n  }\n\n  @Post('logout')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Déconnexion sécurisée avec blacklist du token\" })\n  @ApiResponse({ status: 200, description: 'Déconnexion réussie' })\n  async logout(@Headers('authorization') authHeader: string) {\n    const token = authHeader?.split(' ')[1]; // Récupère le token depuis \"Bearer \"\n    return this.authService.logout(token);\n  }\n\n  @Post('reset-password')\n  @ApiOperation({ summary: \"Réinitialiser le mot de passe\" })\n  async resetPassword(@Body() resetPasswordDto: ResetPasswordDto) {\n    return this.authService.resetPassword(resetPasswordDto);\n  }\n\n  @Post('change-password')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Changer le mot de passe de l'utilisateur\" })\n  async changePassword(@Request() req, @Body() changePasswordDto: ChangePasswordDto) {\n    return this.authService.changePassword(req.user.id, changePasswordDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBlacklistService\n\nBlacklistService\n\nAuthModule -->\n\nBlacklistService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nAuthModule -->\n\nResponseService->AuthModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nAuthModule -->\n\nUtilisateurService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            BlacklistService\n                        \n                        \n                            JwtAuthGuard\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            UtilisateurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UtilisateurService } from '../utilisateur/utilisateur.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtAuthGuard } from './jwt-auth/jwt-auth.guard';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { BlacklistService } from './blacklist/blacklist.service';\n\n@Module({\n  imports: [\n    ConfigModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: configService.get('JWT_EXPIRES_IN') || '1h' },\n      }),\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    UtilisateurService,\n    PrismaService,\n    JwtStrategy,\n    JwtAuthGuard,\n    ResponseService,\n    BlacklistService,\n  ],\n  exports: [AuthService, JwtModule], // ✅ Exporter JwtModule pour que d'autres modules puissent l'utiliser\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                validateUtilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(utilisateurService: UtilisateurService, jwtService: JwtService, responseService: ResponseService, configService: ConfigService, blacklistService: BlacklistService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilisateurService\n                                                  \n                                                        \n                                                                        UtilisateurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blacklistService\n                                                  \n                                                        \n                                                                        BlacklistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(utilisateurId: number, changePasswordDto: ChangePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(resetPasswordDto: ResetPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resetPasswordDto\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateUtilisateur\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUtilisateur(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UtilisateurService } from '../utilisateur/utilisateur.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { ConfigService } from '@nestjs/config';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { BlacklistService } from './blacklist/blacklist.service';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private utilisateurService: UtilisateurService,\n    private jwtService: JwtService,\n    private responseService: ResponseService,\n    private configService: ConfigService,\n    private blacklistService: BlacklistService,\n  ) {}\n\n  async login(email: string, password: string) {\n    const utilisateur = await this.validateUtilisateur(email, password);\n    const payload = {\n      sub: utilisateur.id,\n      email: utilisateur.email,\n      privilege: utilisateur.idPrivilege,\n    };\n    const accessToken = this.jwtService.sign(payload);\n    return this.responseService.success(\n      { access_token: accessToken },\n      'Connexion réussie'\n    );\n  }\n\n  private async validateUtilisateur(email: string, password: string) {\n    const utilisateur = await this.utilisateurService.findByEmail(email);\n    if (!utilisateur) {\n      throw new UnauthorizedException('Utilisateur non trouvé');\n    }\n    const isPasswordValid = await bcrypt.compare(password, utilisateur.password);\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Mot de passe incorrect');\n    }\n    return utilisateur;\n  }\n\n  async logout(token: string) {\n    const secret = this.configService.get('JWT_SECRET');\n\n    if (!secret) {\n      throw new Error('Clé JWT manquante dans la configuration');\n    }\n\n    try {\n      const decoded: any = jwt.verify(token, secret);\n      const expiresAt = new Date(decoded.exp * 1000);\n      await this.blacklistService.blacklistToken(token, expiresAt);\n\n      return this.responseService.success(null, 'Déconnexion réussie');\n    } catch (err) {\n      return this.responseService.unauthorized\n        ? this.responseService.unauthorized('Token invalide ou expiré.')\n        : new UnauthorizedException('Token invalide ou expiré.');\n    }\n  }\n\n  async resetPassword(resetPasswordDto: ResetPasswordDto) {\n    return this.responseService.success(null, 'Un email de réinitialisation a été envoyé');\n  }\n\n  async changePassword(utilisateurId: number, changePasswordDto: ChangePasswordDto) {\n    return this.responseService.success(null, 'Mot de passe changé avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlacklistService.html":{"url":"injectables/BlacklistService.html","title":"injectable - BlacklistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlacklistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/blacklist/blacklist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                blacklistToken\n                            \n                            \n                                    Async\n                                isTokenBlacklisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/blacklist/blacklist.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        blacklistToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    blacklistToken(token: string, expiresAt: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/blacklist/blacklist.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresAt\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isTokenBlacklisted\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenBlacklisted(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/blacklist/blacklist.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {PrismaService} from '../../prisma/prisma.service';\n\n@Injectable()\nexport class BlacklistService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async blacklistToken(token: string, expiresAt: Date) {\n    return this.prisma.blacklistedToken.create({\n      data: {\n        token,\n        expiresAt,\n      },\n    });\n  }\n\n  async isTokenBlacklisted(token: string): Promise {\n    const result = await this.prisma.blacklistedToken.findUnique({\n      where: { token },\n    });\n    return !!result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'nouveauMotDePasse456'})@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ancienMotDePasse123'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, MinLength } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'ancienMotDePasse123' })\n  @IsNotEmpty()\n  oldPassword: string;\n\n  @ApiProperty({ example: 'nouveauMotDePasse456' })\n  @IsNotEmpty()\n  @MinLength(6)\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePrivilegeDto.html":{"url":"classes/ChangePrivilegeDto.html","title":"class - ChangePrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/change-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                idPrivilege\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2, description: 'Nouvel ID du privilège'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/change-privilege.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class ChangePrivilegeDto {\n  @ApiProperty({ example: 2, description: 'Nouvel ID du privilège' })\n  @IsNotEmpty()\n  @IsNumber()\n  idPrivilege: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CloudinaryService.html":{"url":"injectables/CloudinaryService.html","title":"injectable - CloudinaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CloudinaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/cloudinary/cloudinary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                uploadMultiple\n                            \n                            \n                                    Async\n                                uploadSingle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/upload/cloudinary/cloudinary.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/cloudinary/cloudinary.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadMultiple\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadMultiple(files: Express.Multer.File[], folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/cloudinary/cloudinary.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSingle(file: Express.Multer.File, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/cloudinary/cloudinary.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CloudinaryService.name)\n                    \n                \n                    \n                        \n                                Defined in src/upload/cloudinary/cloudinary.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { v2 as cloudinary } from 'cloudinary';\nimport {\n  FileStorageService,\n  FileUploadResult,\n} from '../interfaces/upload.interface';\n\n@Injectable()\nexport class CloudinaryService implements FileStorageService {\n  private logger = new Logger(CloudinaryService.name);\n\n  constructor() {\n    cloudinary.config({\n      cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n      api_key: process.env.CLOUDINARY_API_KEY,\n      api_secret: process.env.CLOUDINARY_API_SECRET,\n    });\n  }\n\n  async uploadSingle(\n    file: Express.Multer.File,\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const uploadStream = cloudinary.uploader.upload_stream(\n        { folder },\n        (error, result) => {\n          if (error) {\n            this.logger.error(\n              `Erreur lors de l'upload: ${JSON.stringify(error)}`,\n            );\n            return reject(error);\n          }\n          if (!result) {\n            return reject(new Error(\"Résultat d'upload vide\"));\n          }\n          this.logger.log(`Image uploadée avec succès: ${result.public_id}`);\n          resolve({\n            url: result.secure_url,\n            id: result.public_id,\n          });\n        },\n      );\n\n      uploadStream.end(file.buffer);\n    });\n  }\n\n  async uploadMultiple(\n    files: Express.Multer.File[],\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    if (!files?.length) return [];\n\n    files.forEach((file, index) => {\n      if (!file.buffer?.length) {\n        throw new Error(\n          `Le fichier à l'index ${index} n'a pas de contenu valide`,\n        );\n      }\n    });\n\n    try {\n      return await Promise.all(\n        files.map((file) => this.uploadSingle(file, folder)),\n      );\n    } catch (error) {\n      this.logger.error(`Échec de l'upload batch: ${error.message}`);\n      throw new Error(`Échec de l'upload des images: ${error.message}`);\n    }\n  }\n  async deleteFile(fileId: string): Promise {\n    try {\n      await cloudinary.uploader.destroy(fileId);\n      this.logger.log(`🗑️ Image supprimée de Cloudinary : ${fileId}`);\n    } catch (error) {\n      this.logger.warn(`⚠️ Erreur suppression Cloudinary : ${fileId}`);\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDeviseDto.html":{"url":"classes/ConnectDeviseDto.html","title":"class - ConnectDeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                code\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-devise.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-devise.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectDeviseDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\ncode?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDisponibiliteDto.html":{"url":"classes/ConnectDisponibiliteDto.html","title":"class - ConnectDisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-disponibilite.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectDisponibiliteDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDossierMedicalDto.html":{"url":"classes/ConnectDossierMedicalDto.html","title":"class - ConnectDossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-dossierMedical.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectDossierMedicalDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectLogDto.html":{"url":"classes/ConnectLogDto.html","title":"class - ConnectLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-log.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectLogDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectMedecinSousServiceDto.html":{"url":"classes/ConnectMedecinSousServiceDto.html","title":"class - ConnectMedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-medecinSousService.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectMedecinSousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectModePaiementDto.html":{"url":"classes/ConnectModePaiementDto.html","title":"class - ConnectModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-modePaiement.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-modePaiement.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectModePaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectOrdonnanceDto.html":{"url":"classes/ConnectOrdonnanceDto.html","title":"class - ConnectOrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectOrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-ordonnance.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectOrdonnanceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectPaiementDto.html":{"url":"classes/ConnectPaiementDto.html","title":"class - ConnectPaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectPaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                idReservation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-paiement.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        idReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-paiement.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectPaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nidReservation?: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectPrivilegeDto.html":{"url":"classes/ConnectPrivilegeDto.html","title":"class - ConnectPrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectPrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-privilege.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-privilege.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectPrivilegeDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectReservationDto.html":{"url":"classes/ConnectReservationDto.html","title":"class - ConnectReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-reservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectServiceDto.html":{"url":"classes/ConnectServiceDto.html","title":"class - ConnectServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-service.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectSousServiceDto.html":{"url":"classes/ConnectSousServiceDto.html","title":"class - ConnectSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-sousService.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectSousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectStatutReservationDto.html":{"url":"classes/ConnectStatutReservationDto.html","title":"class - ConnectStatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-statutReservation.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-statutReservation.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectStatutReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectTarifDto.html":{"url":"classes/ConnectTarifDto.html","title":"class - ConnectTarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-tarif.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectTarifDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUtilisateurDto.html":{"url":"classes/ConnectUtilisateurDto.html","title":"class - ConnectUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/connect-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'babaissandiaye242@gmail.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/connect-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password123'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/connect-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class ConnectUtilisateurDto {\n  @ApiProperty({ example: 'babaissandiaye242@gmail.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: 'password123' })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUtilisateurDto-1.html":{"url":"classes/ConnectUtilisateurDto-1.html","title":"class - ConnectUtilisateurDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectUtilisateurDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nemail?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\ntelephone?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviseDto.html":{"url":"classes/CreateDeviseDto.html","title":"class - CreateDeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/dto/create-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actif\n                            \n                            \n                                    \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    \n                                symbole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Length(2, 5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, Length } from 'class-validator';\n\nexport class CreateDeviseDto {\n  @IsString()\n  @IsNotEmpty()\n  @Length(2, 5) // Ex: \"USD\", \"EUR\"\n  code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  libelle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  symbole: string;\n\n  @IsBoolean()\n  @IsOptional()\n  actif: boolean = true; // Valeur par défaut pour éviter undefined\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviseDto-1.html":{"url":"classes/CreateDeviseDto-1.html","title":"class - CreateDeviseDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                symbole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateDeviseDto {\n  @ApiProperty({\n  type: 'string',\n})\ncode: string ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n})\nsymbole: string ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDisponibiliteDto.html":{"url":"classes/CreateDisponibiliteDto.html","title":"class - CreateDisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/dto/create-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                    \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                    \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                jourSemaine\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pauseDebut\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pauseFin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '09:00', description: 'Heure de début'})@IsNotEmpty()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '16:00', description: 'Heure de fin'})@IsNotEmpty()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'ID du médecin ou secrétaire'})@IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lundi', description: 'Jour de disponibilité'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pauseDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12:00', description: 'Début de la pause', required: false})@IsOptional()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pauseFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12:30', description: 'Fin de la pause', required: false})@IsOptional()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsOptional, IsInt, Matches } from 'class-validator';\n\nexport class CreateDisponibiliteDto {\n  @ApiProperty({ example: 1, description: 'ID du médecin ou secrétaire' })\n  @IsNotEmpty()\n  @IsInt()\n  idMedecinSousService: number;\n\n  @ApiProperty({ example: 'lundi', description: 'Jour de disponibilité' })\n  @IsNotEmpty()\n  @IsString()\n  jourSemaine: string;\n\n  @ApiProperty({ example: '09:00', description: 'Heure de début' })\n  @IsNotEmpty()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  heureDebut: string;\n\n  @ApiProperty({ example: '16:00', description: 'Heure de fin' })\n  @IsNotEmpty()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  heureFin: string;\n\n  @ApiProperty({ example: '12:00', description: 'Début de la pause', required: false })\n  @IsOptional()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  pauseDebut?: string;\n\n  @ApiProperty({ example: '12:30', description: 'Fin de la pause', required: false })\n  @IsOptional()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  pauseFin?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDisponibiliteDto-1.html":{"url":"classes/CreateDisponibiliteDto-1.html","title":"class - CreateDisponibiliteDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                jourSemaine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateDisponibiliteDto {\n  @ApiProperty({\n  type: 'string',\n})\njourSemaine: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureDebut: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureFin: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDossierMedicalDto.html":{"url":"classes/CreateDossierMedicalDto.html","title":"class - CreateDossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateMiseAJour\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                fichiers\n                            \n                            \n                                    \n                                historique\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateDossierMedicalDto {\n  @ApiProperty({\n  type: 'string',\n})\nhistorique: string ;\n@ApiProperty({\n  type: 'string',\n})\nfichiers: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateMiseAJour: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-log.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-log.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateLogDto {\n  @ApiProperty({\n  type: 'string',\n})\naction: string ;\n@ApiProperty({\n  type: 'string',\n})\nip: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMedecinSousServiceDto.html":{"url":"classes/CreateMedecinSousServiceDto.html","title":"class - CreateMedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-medecinSousService.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateMedecinSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMedecinSousServiceDto-1.html":{"url":"classes/CreateMedecinSousServiceDto-1.html","title":"class - CreateMedecinSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/dto/create-medecin-sous-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idMedecin\n                            \n                            \n                                    \n                                    \n                                idSousService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/create-medecin-sous-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/create-medecin-sous-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class CreateMedecinSousServiceDto {\n  @IsInt()\n  @IsNotEmpty()\n  idMedecin: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  idSousService: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateModePaiementDto.html":{"url":"classes/CreateModePaiementDto.html","title":"class - CreateModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-modePaiement.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-modePaiement.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-modePaiement.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateModePaiementDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nicon?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateModePaiementDto-1.html":{"url":"classes/CreateModePaiementDto-1.html","title":"class - CreateModePaiementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/dto/create-mode-paiement.dto..ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/create-mode-paiement.dto..ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du mode de paiement', example: 'Orange Money'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/create-mode-paiement.dto..ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateModePaiementDto {\n  @ApiProperty({ description: \"Libellé du mode de paiement\", example: \"Orange Money\" })\n  @IsNotEmpty()\n  @IsString()\n  libelle: string;\n\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  icon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrdonnanceDto.html":{"url":"classes/CreateOrdonnanceDto.html","title":"class - CreateOrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contenu\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-ordonnance.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-ordonnance.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateOrdonnanceDto {\n  @ApiProperty({\n  type: 'string',\n})\ncontenu: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaiementDto.html":{"url":"classes/CreatePaiementDto.html","title":"class - CreatePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                etatTransaction\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                referenceTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreatePaiementDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'string',\n})\nreferenceTransaction: string ;\n@ApiProperty({\n  type: 'string',\n})\netatTransaction: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePrivilegeDto.html":{"url":"classes/CreatePrivilegeDto.html","title":"class - CreatePrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-privilege.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-privilege.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreatePrivilegeDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePrivilegeDto-1.html":{"url":"classes/CreatePrivilegeDto-1.html","title":"class - CreatePrivilegeDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/dto/create-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du privilège', example: 'ADMIN'})@IsNotEmpty({message: 'Le libellé ne peut pas être vide'})@IsString({message: 'Le libellé doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/privilege/dto/create-privilege.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePrivilegeDto {\n  @ApiProperty({ description: 'Libellé du privilège', example: 'ADMIN' })\n  @IsNotEmpty({ message: 'Le libellé ne peut pas être vide' })\n  @IsString({ message: 'Le libellé doit être une chaîne de caractères' })\n  libelle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReservationDto.html":{"url":"classes/CreateReservationDto.html","title":"class - CreateReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                etatPaiement\n                            \n                            \n                                    \n                                typeConsultation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-reservation.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-reservation.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-reservation.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateReservationDto {\n  @ApiProperty({\n  type: 'string',\n})\ntypeConsultation: string ;\n@ApiProperty({\n  type: 'string',\n})\netatPaiement: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto.html":{"url":"classes/CreateServiceDto.html","title":"class - CreateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-service.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateServiceDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto-1.html":{"url":"classes/CreateServiceDto-1.html","title":"class - CreateServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/create-service.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du service', example: 'Radiologie'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/create-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateServiceDto {\n  @ApiProperty({ description: \"Libellé du service\", example: \"Radiologie\" })\n  @IsNotEmpty()\n  libelle: string;\n\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?:string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSousServiceDto.html":{"url":"classes/CreateSousServiceDto.html","title":"class - CreateSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-sousService.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-sousService.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSousServiceDto-1.html":{"url":"classes/CreateSousServiceDto-1.html","title":"class - CreateSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/dto/create-sous-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                idService\n                            \n                            \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL de l'icône du sous-service', example: 'https://exemple.com/icon.png', required: false})@ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/create-sous-service.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du service parent', example: 1})@IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/create-sous-service.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du sous-service', example: 'Échographie'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/create-sous-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString, IsInt } from 'class-validator';\n\nexport class CreateSousServiceDto {\n  @ApiProperty({ description: \"Libellé du sous-service\", example: \"Échographie\" })\n  @IsNotEmpty()\n  libelle: string;\n\n  @ApiProperty({ description: \"ID du service parent\", example: 1 })\n  @IsNotEmpty()\n  @IsInt()\n  idService: number;\n\n  @ApiProperty({ description: \"URL de l'icône du sous-service\", example: \"https://exemple.com/icon.png\", required: false })\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStatutReservationDto.html":{"url":"classes/CreateStatutReservationDto.html","title":"class - CreateStatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-statutReservation.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-statutReservation.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateStatutReservationDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStatutReservationDto-1.html":{"url":"classes/CreateStatutReservationDto-1.html","title":"class - CreateStatutReservationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/dto/create-statut-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du statut', example: 'Confirmée'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statut-reservation/dto/create-statut-reservation.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateStatutReservationDto {\n  @ApiProperty({ description: 'Libellé du statut', example: 'Confirmée' })\n  @IsNotEmpty()\n  @IsString()\n  libelle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTarifDto.html":{"url":"classes/CreateTarifDto.html","title":"class - CreateTarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-tarif.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-tarif.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-tarif.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateTarifDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTarifDto-1.html":{"url":"classes/CreateTarifDto-1.html","title":"class - CreateTarifDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/dto/create-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actif\n                            \n                            \n                                    \n                                    \n                                idDevise\n                            \n                            \n                                    \n                                    \n                                idSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idDevise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsNumber, IsOptional, IsPositive } from 'class-validator';\n\nexport class CreateTarifDto {\n  @IsNumber()\n  @IsNotEmpty()\n  idSousService: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  idDevise: number;\n\n  @IsNumber()\n  @IsPositive()\n  @IsNotEmpty()\n  montant: number;\n\n  @IsBoolean()\n  @IsOptional()\n  actif: boolean = true; // Actif par défaut\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto.html":{"url":"classes/CreateUtilisateurDto.html","title":"class - CreateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    Optional\n                                profil\n                            \n                            \n                                    \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateUtilisateurDto {\n  @ApiProperty({\n  type: 'string',\n})\nnom: string ;\n@ApiProperty({\n  type: 'string',\n})\nprenom: string ;\n@ApiProperty({\n  type: 'string',\n})\nemail: string ;\n@ApiProperty({\n  type: 'string',\n})\npassword: string ;\n@ApiProperty({\n  type: 'string',\n})\ntelephone: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nprofil?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto-1.html":{"url":"classes/CreateUtilisateurDto-1.html","title":"class - CreateUtilisateurDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                idPrivilege\n                            \n                            \n                                    \n                                    \n                                    \n                                nom\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                profilUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@example.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password123'})@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        profilUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1234567890'})@IsNotEmpty()@Matches(/^\\+?\\d{9,15}$/, {message: 'Le numéro de téléphone doit commencer éventuellement par + et contenir entre 9 et 15 chiffres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength, Matches, IsOptional } from 'class-validator';\n\nexport class CreateUtilisateurDto {\n  @ApiProperty({ example: 'Doe' })\n  @IsNotEmpty()\n  @IsString()\n  nom: string;\n\n  @ApiProperty({ example: 'John' })\n  @IsNotEmpty()\n  @IsString()\n  prenom: string;\n\n  @ApiProperty({ example: 'john.doe@example.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: 'password123' })\n  @IsNotEmpty()\n  @MinLength(6)\n  password: string;\n\n  @ApiProperty({ example: '1234567890' })\n  @IsNotEmpty()\n  @Matches(/^\\+?\\d{9,15}$/, {\n    message: \"Le numéro de téléphone doit commencer éventuellement par + et contenir entre 9 et 15 chiffres\",\n  })\n// ✅ Vérification du format\n  telephone: string;\n\n  @ApiProperty({ example: 1 })\n  @IsNotEmpty()\n  idPrivilege: number;\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  profilUrl?:string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Devise.html":{"url":"classes/Devise.html","title":"class - Devise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Devise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/devise.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                symbole\n                            \n                            \n                                    \n                                    Optional\n                                tarifs\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tarifs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tarif[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tarif, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Tarif} from './tarif.entity'\n\n\nexport class Devise {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ncode: string ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n})\nsymbole: string ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: () => Tarif,\n  isArray: true,\n  required: false,\n})\ntarifs?: Tarif[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeviseController.html":{"url":"controllers/DeviseController.html","title":"controller - DeviseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeviseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/devise.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                devises\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                activate\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/activate')@ApiOperation({summary: 'Activer une devise et désactiver les autres'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:53\n                        \n                    \n\n\n            \n                \n                        ✅ Activer une devise et désactiver les autres\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDeviseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer une devise'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:17\n                        \n                    \n\n\n            \n                \n                        ✅ Créer une devise\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer une devise'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:62\n                        \n                    \n\n\n            \n                \n                        ✅ Supprimer une devise (soft delete)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer toutes les devises'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:26\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les devises\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer une devise par ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:35\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer une devise par ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateDeviseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour une devise'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:44\n                        \n                    \n\n\n            \n                \n                        ✅ Mettre à jour une devise\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';\nimport { DeviseService } from './devise.service';\nimport { CreateDeviseDto } from './dto/create-devise.dto';\nimport { UpdateDeviseDto } from './dto/update-devise.dto';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\n\n@ApiTags('Devises')\n@Controller('devises')\nexport class DeviseController {\n  constructor(private readonly deviseService: DeviseService) {}\n\n  /**\n   * ✅ Créer une devise\n   */\n  @Post()\n  @ApiOperation({ summary: 'Créer une devise' })\n  create(@Body() dto: CreateDeviseDto) {\n    return this.deviseService.create(dto);\n  }\n\n  /**\n   * ✅ Récupérer toutes les devises\n   */\n  @Get()\n  @ApiOperation({ summary: 'Récupérer toutes les devises' })\n  findAll() {\n    return this.deviseService.findAll();\n  }\n\n  /**\n   * ✅ Récupérer une devise par ID\n   */\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer une devise par ID' })\n  findById(@Param('id') id: string) {\n    return this.deviseService.findById(+id);\n  }\n\n  /**\n   * ✅ Mettre à jour une devise\n   */\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour une devise' })\n  update(@Param('id') id: string, @Body() dto: UpdateDeviseDto) {\n    return this.deviseService.update(+id, dto);\n  }\n\n  /**\n   * ✅ Activer une devise et désactiver les autres\n   */\n  @Patch(':id/activate')\n  @ApiOperation({ summary: 'Activer une devise et désactiver les autres' })\n  activate(@Param('id') id: string) {\n    return this.deviseService.activate(+id);\n  }\n\n  /**\n   * ✅ Supprimer une devise (soft delete)\n   */\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer une devise' })\n  delete(@Param('id') id: string) {\n    return this.deviseService.delete(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviseDto.html":{"url":"classes/DeviseDto.html","title":"class - DeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                symbole\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class DeviseDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ncode: string ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n})\nsymbole: string ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviseService.html":{"url":"injectables/DeviseService.html","title":"injectable - DeviseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/devise.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/devise/devise.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:87\n                        \n                    \n\n\n            \n                \n                        ✅ Activer une devise et désactiver toutes les autres\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDeviseDto: CreateDeviseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:17\n                        \n                    \n\n\n            \n                \n                        ✅ Créer une devise et désactiver les autres si elle est active\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeviseDto\n                                            \n                                                            CreateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:110\n                        \n                    \n\n\n            \n                \n                        ✅ Supprimer une devise (soft delete)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:52\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les devises actives\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:60\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer une devise par ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateDeviseDto: UpdateDeviseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:73\n                        \n                    \n\n\n            \n                \n                        ✅ Mettre à jour une devise (sans activer)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeviseDto\n                                            \n                                                            UpdateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateDeviseDto } from './dto/create-devise.dto';\nimport { UpdateDeviseDto } from './dto/update-devise.dto';\n\n@Injectable()\nexport class DeviseService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  /**\n   * ✅ Créer une devise et désactiver les autres si elle est active\n   */\n  async create(createDeviseDto: CreateDeviseDto) {\n    const existingDevise = await this.prisma.devise.findUnique({\n      where: { code: createDeviseDto.code },\n    });\n\n    if (existingDevise) {\n      throw new BadRequestException('Une devise avec ce code existe déjà.');\n    }\n\n    return await this.prisma.$transaction(async (prisma) => {\n      // Si la nouvelle devise est active, désactiver les autres\n      if (createDeviseDto.actif) {\n        await prisma.devise.updateMany({\n          where: { actif: true },\n          data: { actif: false },\n        });\n      }\n\n      // Créer la nouvelle devise\n      const devise = await prisma.devise.create({\n        data: {\n          code: createDeviseDto.code,\n          libelle: createDeviseDto.libelle,\n          symbole: createDeviseDto.symbole,\n          actif: createDeviseDto.actif ?? true, // Actif par défaut\n        },\n      });\n\n      return this.responseService.created(devise, 'Devise créée avec succès et activée.');\n    });\n  }\n\n  /**\n   * ✅ Récupérer toutes les devises actives\n   */\n  async findAll() {\n    const devises = await this.prisma.devise.findMany();\n    return this.responseService.success(devises, 'Toutes les devises récupérées');\n  }\n\n  /**\n   * ✅ Récupérer une devise par ID\n   */\n  async findById(id: number) {\n    const devise = await this.prisma.devise.findUnique({ where: { id } });\n\n    if (!devise) {\n      throw new NotFoundException(this.responseService.notFound(`Devise #${id} non trouvée.`));\n    }\n\n    return this.responseService.success(devise, 'Devise récupérée');\n  }\n\n  /**\n   * ✅ Mettre à jour une devise (sans activer)\n   */\n  async update(id: number, updateDeviseDto: UpdateDeviseDto) {\n    await this.findById(id);\n\n    const updatedDevise = await this.prisma.devise.update({\n      where: { id },\n      data: updateDeviseDto,\n    });\n\n    return this.responseService.success(updatedDevise, 'Devise mise à jour avec succès');\n  }\n\n  /**\n   * ✅ Activer une devise et désactiver toutes les autres\n   */\n  async activate(id: number) {\n    const devise = await this.findById(id);\n\n    return await this.prisma.$transaction(async (prisma) => {\n      // Désactiver toutes les autres devises\n      await prisma.devise.updateMany({\n        where: { actif: true },\n        data: { actif: false },\n      });\n\n      // Activer la nouvelle devise\n      const activatedDevise = await prisma.devise.update({\n        where: { id },\n        data: { actif: true },\n      });\n\n      return this.responseService.success(activatedDevise, 'Devise activée avec succès.');\n    });\n  }\n\n  /**\n   * ✅ Supprimer une devise (soft delete)\n   */\n  async delete(id: number) {\n    await this.findById(id);\n\n    await this.prisma.devise.update({\n      where: { id },\n      data: { actif: false, deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Devise supprimée avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Disponibilite.html":{"url":"classes/Disponibilite.html","title":"class - Disponibilite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Disponibilite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/disponibilite.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                jourSemaine\n                            \n                            \n                                    \n                                    Optional\n                                medecinSousService\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MedecinSousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {MedecinSousService} from './medecinSousService.entity'\n\n\nexport class Disponibilite {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecinSousService: number ;\n@ApiProperty({\n  type: 'string',\n})\njourSemaine: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureDebut: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureFin: string ;\n@ApiProperty({\n  type: () => MedecinSousService,\n  required: false,\n})\nmedecinSousService?: MedecinSousService ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DisponibiliteController.html":{"url":"controllers/DisponibiliteController.html","title":"controller - DisponibiliteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DisponibiliteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/disponibilite.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                disponibilites\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                findByMedecin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDisponibiliteDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Créer une disponibilité'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateDisponibiliteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer toutes les disponibilités'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer une disponibilité par ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findByMedecin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByMedecin(idMedecin: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('medecin/:idMedecin')@ApiOperation({summary: 'Récupérer toutes les disponibilités d'un médecin'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idMedecin\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Body, Param, UseGuards, Request } from '@nestjs/common';\nimport { DisponibiliteService } from './disponibilite.service';\nimport { CreateDisponibiliteDto } from './dto/create-disponibilite.dto';\nimport { UpdateDisponibiliteDto } from './dto/update-disponibilite.dto';\nimport { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Disponibilités')\n@Controller('disponibilites')\nexport class DisponibiliteController {\n  constructor(private readonly disponibiliteService: DisponibiliteService) {}\n\n  @Post()\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Créer une disponibilité' })\n  create(@Body() dto: CreateDisponibiliteDto, @Request() req) {\n    return this.disponibiliteService.create(dto, req.user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Récupérer toutes les disponibilités' })\n  findAll() {\n    return this.disponibiliteService.findAll();\n  }\n\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer une disponibilité par ID' })\n  findById(@Param('id') id: string) {\n    return this.disponibiliteService.findDisponibilitesById(+id);\n  }\n  @Get('medecin/:idMedecin')\n  @ApiOperation({ summary: \"Récupérer toutes les disponibilités d'un médecin\" })\n  findByMedecin(@Param('idMedecin') idMedecin: string) {\n    return this.disponibiliteService.findDisponibilitesByMedecin(+idMedecin);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisponibiliteDto.html":{"url":"classes/DisponibiliteDto.html","title":"class - DisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                jourSemaine\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class DisponibiliteDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\njourSemaine: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureDebut: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureFin: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DisponibiliteModule.html":{"url":"modules/DisponibiliteModule.html","title":"module - DisponibiliteModule","body":"\n                   \n\n\n\n\n    Modules\n    DisponibiliteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DisponibiliteModule\n\n\n\ncluster_DisponibiliteModule_providers\n\n\n\n\nDisponibiliteService\n\nDisponibiliteService\n\n\n\nDisponibiliteModule\n\nDisponibiliteModule\n\nDisponibiliteModule -->\n\nDisponibiliteService->DisponibiliteModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nDisponibiliteModule -->\n\nResponseService->DisponibiliteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/disponibilite/disponibilite.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DisponibiliteService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DisponibiliteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DisponibiliteService } from './disponibilite.service';\nimport { DisponibiliteController } from './disponibilite.controller';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Module({\n  controllers: [DisponibiliteController],\n  providers: [DisponibiliteService, ResponseService],\n})\nexport class DisponibiliteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DisponibiliteService.html":{"url":"injectables/DisponibiliteService.html","title":"injectable - DisponibiliteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DisponibiliteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/disponibilite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findDisponibilitesById\n                            \n                            \n                                    Async\n                                findDisponibilitesByMedecin\n                            \n                            \n                                    Private\n                                formatHeure\n                            \n                            \n                                    Private\n                                genererCreneauxDisponibles\n                            \n                            \n                                    Private\n                                getNumeroSemaine\n                            \n                            \n                                    Private\n                                parseTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/disponibilite/disponibilite.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDisponibiliteDto: CreateDisponibiliteDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:17\n                        \n                    \n\n\n            \n                \n                        ✅ Créer une disponibilité (Seulement Medecin/Admin)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDisponibiliteDto\n                                            \n                                                            CreateDisponibiliteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:75\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les disponibilités actives\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDisponibilitesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDisponibilitesById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:87\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer une disponibilité par ID (Avec créneaux disponibles)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDisponibilitesByMedecin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDisponibilitesByMedecin(idMedecin: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:159\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les disponibilités d'un médecin spécifique\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idMedecin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatHeure\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatHeure(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:153\n                        \n                    \n\n\n            \n                \n                        ✅ Formatter une heure en chaîne lisible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        genererCreneauxDisponibles\n                        \n                    \n                \n            \n            \n                \n                        \n                    genererCreneauxDisponibles(disponibilite, reservationsSet: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:111\n                        \n                    \n\n\n            \n                \n                        ✅ Générer les créneaux disponibles\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disponibilite\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reservationsSet\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNumeroSemaine\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumeroSemaine()\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:133\n                        \n                    \n\n\n            \n                \n                        ✅ Calcul du numéro de la semaine actuelle\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseTime(time: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:143\n                        \n                    \n\n\n            \n                \n                        ✅ Convertir une heure en Date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                time\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Date\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException, ForbiddenException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateDisponibiliteDto } from './dto/create-disponibilite.dto';\nimport { UpdateDisponibiliteDto } from './dto/update-disponibilite.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Injectable()\nexport class DisponibiliteService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  /**\n   * ✅ Créer une disponibilité (Seulement Medecin/Admin)\n   */\n  async create(createDisponibiliteDto: CreateDisponibiliteDto, currentUser: any) {\n    if (!currentUser) {\n      throw new ForbiddenException(this.responseService.forbidden(\"Vous devez être connecté.\"));\n    }\n\n    // Vérification des rôles autorisés\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user || !['Medecin', 'Admin'].includes(user.privilege.libelle)) {\n      throw new ForbiddenException(this.responseService.forbidden(\"Seuls les médecins et administrateurs peuvent créer une disponibilité.\"));\n    }\n\n    // Validation des jours de la semaine\n    const joursValid = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\", \"dimanche\"];\n    const jourSemaineNormalized = createDisponibiliteDto.jourSemaine.trim().toLowerCase();\n\n    if (!joursValid.includes(jourSemaineNormalized)) {\n      throw new BadRequestException(`Jour invalide. Choisissez parmi : ${joursValid.join(\", \")}.`);\n    }\n\n    // Vérifier si une disponibilité existe déjà pour ce médecin et ce jour\n    const existingDisponibilite = await this.prisma.disponibilite.findFirst({\n      where: {\n        idMedecinSousService: createDisponibiliteDto.idMedecinSousService,\n        jourSemaine: jourSemaineNormalized,\n        active: true,\n      },\n    });\n\n    if (existingDisponibilite) {\n      throw new BadRequestException(\n        \"Une disponibilité pour ce jour existe déjà. Modifiez-la au lieu d'en créer une nouvelle.\"\n      );\n    }\n\n    // Création de la disponibilité\n    const disponibilite = await this.prisma.disponibilite.create({\n      data: {\n        idMedecinSousService: createDisponibiliteDto.idMedecinSousService,\n        jourSemaine: jourSemaineNormalized,\n        heureDebut: createDisponibiliteDto.heureDebut,\n        heureFin: createDisponibiliteDto.heureFin,\n        pauseDebut: createDisponibiliteDto.pauseDebut,\n        pauseFin: createDisponibiliteDto.pauseFin,\n        active: true,\n        semaine: this.getNumeroSemaine(),\n      },\n    });\n\n    return this.responseService.created(disponibilite, 'Disponibilité créée avec succès');\n  }\n\n  /**\n   * ✅ Récupérer toutes les disponibilités actives\n   */\n  async findAll() {\n    const disponibilites = await this.prisma.disponibilite.findMany({\n      where: { active: true },\n      orderBy: { jourSemaine: 'asc' },\n    });\n\n    return this.responseService.success(disponibilites, 'Toutes les disponibilités récupérées');\n  }\n\n  /**\n   * ✅ Récupérer une disponibilité par ID (Avec créneaux disponibles)\n   */\n  async findDisponibilitesById(id: number) {\n    const disponibilite = await this.prisma.disponibilite.findUnique({ where: { id } });\n\n    if (!disponibilite) {\n      throw new NotFoundException(this.responseService.notFound(`Disponibilité #${id} non trouvée.`));\n    }\n\n    const reservations = await this.prisma.reservation.findMany({\n      where: { idMedecinSousService: disponibilite.idMedecinSousService },\n      select: { heureDebut: true, heureFin: true },\n    });\n\n    const reservationsSet = new Set(reservations.map(r => `${r.heureDebut}-${r.heureFin}`));\n    const horairesDisponibles = this.genererCreneauxDisponibles(disponibilite, reservationsSet);\n\n    return this.responseService.success(\n      { ...disponibilite, horairesDisponibles },\n      'Disponibilité récupérée avec créneaux disponibles'\n    );\n  }\n\n  /**\n   * ✅ Générer les créneaux disponibles\n   */\n  private genererCreneauxDisponibles(disponibilite, reservationsSet: Set) {\n    const horairesDisponibles: string[] = [];\n    let currentHeure = this.parseTime(disponibilite.heureDebut);\n    const fin = this.parseTime(disponibilite.heureFin);\n\n    while (currentHeure  mss.id),\n        },\n        active: true,\n      },\n      orderBy: { jourSemaine: 'asc' },\n    });\n\n    // ✅ Ajouter les horaires disponibles à chaque disponibilité\n    const withCreneaux = await Promise.all(disponibilites.map(async (dispo) => {\n      const reservations = await this.prisma.reservation.findMany({\n        where: { idMedecinSousService: dispo.idMedecinSousService },\n        select: { heureDebut: true, heureFin: true },\n      });\n\n      const reservationsSet = new Set(reservations.map(r => `${r.heureDebut}-${r.heureFin}`));\n      const horairesDisponibles = this.genererCreneauxDisponibles(dispo, reservationsSet);\n\n      return {\n        ...dispo,\n        horairesDisponibles,\n      };\n    }));\n\n    return this.responseService.success(\n      withCreneaux,\n      `Disponibilités du médecin #${idMedecin} récupérées`\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DossierMedical.html":{"url":"classes/DossierMedical.html","title":"class - DossierMedical","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DossierMedical\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/dossierMedical.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateMiseAJour\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                fichiers\n                            \n                            \n                                    \n                                historique\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idPatient\n                            \n                            \n                                    \n                                    Optional\n                                patient\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idPatient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class DossierMedical {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidPatient: number ;\n@ApiProperty({\n  type: 'string',\n})\nhistorique: string ;\n@ApiProperty({\n  type: 'string',\n})\nfichiers: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateMiseAJour: Date ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\npatient?: Utilisateur ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DossierMedicalDto.html":{"url":"classes/DossierMedicalDto.html","title":"class - DossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateMiseAJour\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                fichiers\n                            \n                            \n                                    \n                                historique\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class DossierMedicalDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nhistorique: string ;\n@ApiProperty({\n  type: 'string',\n})\nfichiers: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateMiseAJour: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionService.html":{"url":"injectables/ExceptionService.html","title":"injectable - ExceptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/exception/exception.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBadRequestException\n                            \n                            \n                                createForbiddenException\n                            \n                            \n                                createInternalServerException\n                            \n                            \n                                createNotFoundException\n                            \n                            \n                                createValidationException\n                            \n                            \n                                    Private\n                                formatErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpResponseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/validation/exception/exception.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpResponseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBadRequestException\n                        \n                    \n                \n            \n            \n                \ncreateBadRequestException(arg0: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arg0\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForbiddenException\n                        \n                    \n                \n            \n            \n                \ncreateForbiddenException(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createInternalServerException\n                        \n                    \n                \n            \n            \n                \ncreateInternalServerException(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNotFoundException\n                        \n                    \n                \n            \n            \n                \ncreateNotFoundException(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createValidationException\n                        \n                    \n                \n            \n            \n                \ncreateValidationException(errors: ValidationError[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n                                            \n                                                        ValidationError[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatErrors(errors: ValidationError[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n                                            \n                                                        ValidationError[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { ResponseService } from './response/response.service';\n\n@Injectable()\nexport class ExceptionService {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createBadRequestException(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(private readonly httpResponseService: ResponseService) {}\n\n  createValidationException(errors: ValidationError[]): HttpException {\n    const messages = this.formatErrors(errors);\n    const response = this.httpResponseService.badRequest(\n      messages,\n      'Erreur de validation',\n    );\n    return new HttpException(response, HttpStatus.BAD_REQUEST);\n  }\n\n  createForbiddenException(message: string): HttpException {\n    const response = this.httpResponseService.forbidden(message);\n    return new HttpException(response, HttpStatus.FORBIDDEN);\n  }\n\n  createNotFoundException(message: string): HttpException {\n    const response = this.httpResponseService.notFound(message);\n    return new HttpException(response, HttpStatus.NOT_FOUND);\n  }\n\n  createInternalServerException(message: string): HttpException {\n    const response = this.httpResponseService.internalError(message);\n    return new HttpException(response, HttpStatus.INTERNAL_SERVER_ERROR);\n  }\n\n  private formatErrors(errors: ValidationError[]): string[] {\n    const messages: string[] = [];\n    errors.forEach((error) => {\n      if (error.constraints) {\n        Object.values(error.constraints).forEach((message) => {\n          messages.push(message);\n        });\n      }\n      if (error.children && error.children.length > 0) {\n        messages.push(...this.formatErrors(error.children));\n      }\n    });\n    return messages;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStorageService.html":{"url":"interfaces/FileStorageService.html","title":"interface - FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        deleteFile\n                                    \n                                \n                                \n                                    \n                                        uploadMultiple\n                                    \n                                \n                                \n                                    \n                                        uploadSingle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/interfaces/upload.interface.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadMultiple\n                        \n                    \n                \n            \n            \n                \nuploadMultiple(files: Express.Multer.File[], folder?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/interfaces/upload.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \nuploadSingle(file: Express.Multer.File, folder?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/interfaces/upload.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileUploadResult {\n  url: string;\n  id: string;\n}\n\nexport interface FileStorageService {\n  uploadSingle(\n    file: Express.Multer.File,\n    folder?: string,\n  ): Promise;\n\n  uploadMultiple(\n    files: Express.Multer.File[],\n    folder?: string,\n  ): Promise;\n\n  deleteFile(filePath: string): Promise;\n}\n\nexport const DATABASE_CONNECTION = 'UPLOAD';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploadResult.html":{"url":"interfaces/FileUploadResult.html","title":"interface - FileUploadResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileUploadResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileUploadResult {\n  url: string;\n  id: string;\n}\n\nexport interface FileStorageService {\n  uploadSingle(\n    file: Express.Multer.File,\n    folder?: string,\n  ): Promise;\n\n  uploadMultiple(\n    files: Express.Multer.File[],\n    folder?: string,\n  ): Promise;\n\n  deleteFile(filePath: string): Promise;\n}\n\nexport const DATABASE_CONNECTION = 'UPLOAD';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindPrivilegeDto.html":{"url":"classes/FindPrivilegeDto.html","title":"class - FindPrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindPrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/dto/find-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/privilege/dto/find-privilege.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FindPrivilegeDto {\n  libelle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindUtilisateurDto.html":{"url":"classes/FindUtilisateurDto.html","title":"class - FindUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/find-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                idPrivilege\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                nom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                prenom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                profil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'johndoe@example.com', description: 'Filtrer par email', required: false})@IsOptional()@IsEmail({}, {message: 'L'email n'est pas valide'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'Filtrer par ID de privilège', required: false})@IsOptional()@IsInt({message: 'L'ID du privilège doit être un nombre entier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', description: 'Filtrer par nom', required: false})@IsOptional()@IsString({message: 'Le nom doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', description: 'Filtrer par prénom', required: false})@IsOptional()@IsString({message: 'Le prénom doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', description: 'Filtrer par profil', required: false})@IsOptional()@IsString({message: 'Le profil doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsInt, IsEmail } from 'class-validator';\n\nexport class FindUtilisateurDto {\n  @ApiProperty({ example: 'John', description: 'Filtrer par prénom', required: false })\n  @IsOptional()\n  @IsString({ message: 'Le prénom doit être une chaîne de caractères' })\n  prenom?: string;\n\n  @ApiProperty({ example: 'Doe', description: 'Filtrer par nom', required: false })\n  @IsOptional()\n  @IsString({ message: 'Le nom doit être une chaîne de caractères' })\n  nom?: string;\n\n  @ApiProperty({ example: 'johndoe@example.com', description: 'Filtrer par email', required: false })\n  @IsOptional()\n  @IsEmail({}, { message: 'L\\'email n\\'est pas valide' })\n  email?: string;\n\n  @ApiProperty({ example: 'admin', description: 'Filtrer par profil', required: false })\n  @IsOptional()\n  @IsString({ message: 'Le profil doit être une chaîne de caractères' })\n  profil?: string;\n\n  @ApiProperty({ example: 1, description: 'Filtrer par ID de privilège', required: false })\n  @IsOptional()\n  @IsInt({ message: 'L\\'ID du privilège doit être un nombre entier' })\n  idPrivilege?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth/jwt-auth.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth/jwt-auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth/jwt-auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext, UnauthorizedException, Inject } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {ResponseService} from '../../validation/exception/response/response.service';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private readonly responseService: ResponseService) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      // @ts-ignore\n      throw new UnauthorizedException(\n        this.responseService.forbidden('Vous devez être authentifié pour accéder à cette ressource.')\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, blacklistService: BlacklistService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blacklistService\n                                                  \n                                                        \n                                                                        BlacklistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(req: any, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ConfigService } from '@nestjs/config';\nimport { BlacklistService } from './blacklist/blacklist.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly blacklistService: BlacklistService,\n    configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_SECRET'),\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(req: any, payload: any) {\n    const token = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n    const isBlacklisted = await this.blacklistService.isTokenBlacklisted(token);\n\n    if (isBlacklisted) {\n      throw new UnauthorizedException('Token blacklisté. Veuillez vous reconnecter.');\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: payload.sub },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException('Utilisateur non trouvé');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log.html":{"url":"classes/Log.html","title":"class - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/log.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateCreation\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idUtilisateur\n                            \n                            \n                                    \n                                ip\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                utilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUtilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class Log {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidUtilisateur: number ;\n@ApiProperty({\n  type: 'string',\n})\naction: string ;\n@ApiProperty({\n  type: 'string',\n})\nip: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateCreation: Date ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nutilisateur?: Utilisateur ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogController.html":{"url":"controllers/LogController.html","title":"controller - LogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste de tous les logs (Admin seulement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/log/log.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un log par ID (Admin seulement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/log/log.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Request, UseGuards } from '@nestjs/common';\nimport { ApiTags, ApiBearerAuth, ApiOperation } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { LogService } from './log.service';\n\n@ApiTags('Logs')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('logs')\nexport class LogController {\n  constructor(private readonly logService: LogService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Liste de tous les logs (Admin seulement)' })\n  async findAll(@Request() req) {\n    return await this.logService.findAll(req.user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un log par ID (Admin seulement)' })\n  async findById(@Param('id') id: string, @Request() req) {\n    return await this.logService.findById(+id, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogDto.html":{"url":"classes/LogDto.html","title":"class - LogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateCreation\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                ip\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class LogDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\naction: string ;\n@ApiProperty({\n  type: 'string',\n})\nip: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateCreation: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogListener.html":{"url":"injectables/LogListener.html","title":"injectable - LogListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log-listener/log-listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handlePrismaLogEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/log-listener/log-listener.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handlePrismaLogEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePrismaLogEvent(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('prisma.log')\n                \n            \n\n                    \n                        \n                            Defined in src/log-listener/log-listener.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { LogService } from '../log/log.service';\n\n@Injectable()\nexport class LogListener {\n  constructor(private readonly logService: LogService) {}\n\n  @OnEvent('prisma.log')\n  async handlePrismaLogEvent(payload: {\n    idUtilisateur: number;\n    action: string;\n    ip: string;\n    details?: any;\n  }) {\n    await this.logService.createLog(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_imports\n\n\n\ncluster_LogModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nLogModule\n\nLogModule\n\nLogModule -->\n\nPrismaModule->LogModule\n\n\n\n\n\nLogService \n\nLogService \n\nLogService  -->\n\nLogModule->LogService \n\n\n\n\n\nLogListener\n\nLogListener\n\nLogModule -->\n\nLogListener->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nLogModule -->\n\nResponseService->LogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/log/log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogListener\n                        \n                        \n                            LogService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LogController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LogService } from './log.service';\nimport { LogController } from './log.controller';\nimport { LogListener } from '../log-listener/log-listener';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { ResponseService } from '../validation/exception/response/response.service'; // adaptez le chemin\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [LogController],\n  providers: [LogService, LogListener, ResponseService],\n  exports: [LogService],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Private\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/log/log.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLog(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service'; // adaptez le chemin selon votre arborescence\n\n@Injectable()\nexport class LogService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  // Méthode utilisée par le middleware Prisma pour créer un log\n  async createLog(payload: { idUtilisateur: number; action: string; ip: string; details?: any }) {\n    await this.prisma.log.create({\n      data: {\n        idUtilisateur: payload.idUtilisateur,\n        action: payload.action,\n        ip: payload.ip,\n        // Vous pouvez sérialiser payload.details en JSON si nécessaire\n      },\n    });\n  }\n\n  // Vérification que l'utilisateur est admin, renvoie une exception sinon\n  private verifyAdmin(user: any): void {\n    if (!user) {\n      throw new UnauthorizedException('Vous devez être connecté.');\n    }\n    if (user.privilege?.libelle !== 'Admin') {\n      throw new UnauthorizedException('Seuls les administrateurs peuvent accéder à cette ressource.');\n    }\n  }\n\n  // Accès à tous les logs (logique dans le service)\n  async findAll(user: any) {\n    this.verifyAdmin(user);\n    const logs = await this.prisma.log.findMany({\n      where: { deletedAt: null },\n      orderBy: { dateCreation: 'desc' },\n    });\n    return this.responseService.success(logs, 'Liste des logs récupérée');\n  }\n\n  // Accès à un log par son ID\n  async findById(id: number, user: any) {\n    this.verifyAdmin(user);\n    const log = await this.prisma.log.findFirst({\n      where: { id, deletedAt: null },\n    });\n    if (!log) {\n      throw new NotFoundException('Log non trouvé');\n    }\n    return this.responseService.success(log, 'Log récupéré');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedecinSousService.html":{"url":"classes/MedecinSousService.html","title":"class - MedecinSousService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedecinSousService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/medecinSousService.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                disponibilites\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecin\n                            \n                            \n                                    \n                                idSousService\n                            \n                            \n                                    \n                                    Optional\n                                medecin\n                            \n                            \n                                    \n                                    Optional\n                                reservations\n                            \n                            \n                                    \n                                    Optional\n                                sousService\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        disponibilites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Disponibilite[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Disponibilite, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\nimport {SousService} from './sousService.entity'\nimport {Disponibilite} from './disponibilite.entity'\nimport {Reservation} from './reservation.entity'\n\n\nexport class MedecinSousService {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecin: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidSousService: number ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nmedecin?: Utilisateur ;\n@ApiProperty({\n  type: () => SousService,\n  required: false,\n})\nsousService?: SousService ;\n@ApiProperty({\n  type: () => Disponibilite,\n  isArray: true,\n  required: false,\n})\ndisponibilites?: Disponibilite[] ;\n@ApiProperty({\n  type: () => Reservation,\n  isArray: true,\n  required: false,\n})\nreservations?: Reservation[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MedecinSousServiceController.html":{"url":"controllers/MedecinSousServiceController.html","title":"controller - MedecinSousServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MedecinSousServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/medecin-sousservice.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                medecin-sous-service\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateMedecinSousServiceDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Associer un médecin à un sous-service'})@ApiResponse({status: 201, description: 'Médecin sous-service ajouté avec succès'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Lister tous les médecins sous-services'})@ApiResponse({status: 200, description: 'Liste récupérée avec succès'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Obtenir un médecin sous-service par ID'})@ApiResponse({status: 200, description: 'Médecin sous-service récupéré'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Supprimer un médecin sous-service (Soft Delete)'})@ApiResponse({status: 200, description: 'Médecin sous-service supprimé'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateMedecinSousServiceDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Modifier un médecin sous-service'})@ApiResponse({status: 200, description: 'Médecin sous-service mis à jour'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request\n} from '@nestjs/common';\nimport { MedecinSousServiceService } from './medecin-sousservice.service';\nimport { CreateMedecinSousServiceDto } from './dto/create-medecin-sous-service';\nimport { UpdateMedecinSousServiceDto } from './dto/update-medecin-sous-service';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Médecins Sous Services')\n@Controller('medecin-sous-service')\nexport class MedecinSousServiceController {\n  constructor(private readonly service: MedecinSousServiceService) {}\n\n  @Post()\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Associer un médecin à un sous-service\" })\n  @ApiResponse({ status: 201, description: 'Médecin sous-service ajouté avec succès' })\n  create(@Body() dto: CreateMedecinSousServiceDto, @Request() req) {\n    return this.service.create(dto, req.user);\n  }\n\n  @Get()\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Lister tous les médecins sous-services\" })\n  @ApiResponse({ status: 200, description: 'Liste récupérée avec succès' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get(':id')\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Obtenir un médecin sous-service par ID\" })\n  @ApiResponse({ status: 200, description: 'Médecin sous-service récupéré' })\n  findOne(@Param('id') id: string) {\n    return this.service.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Modifier un médecin sous-service\" })\n  @ApiResponse({ status: 200, description: 'Médecin sous-service mis à jour' })\n  update(@Param('id') id: string, @Body() dto: UpdateMedecinSousServiceDto, @Request() req) {\n    return this.service.update(+id, dto, req.user);\n  }\n\n  @Delete(':id')\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Supprimer un médecin sous-service (Soft Delete)\" })\n  @ApiResponse({ status: 200, description: 'Médecin sous-service supprimé' })\n  remove(@Param('id') id: string, @Request() req) {\n    return this.service.remove(+id, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedecinSousServiceDto.html":{"url":"classes/MedecinSousServiceDto.html","title":"class - MedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class MedecinSousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedecinSousServiceService.html":{"url":"injectables/MedecinSousServiceService.html","title":"injectable - MedecinSousServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MedecinSousServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/medecin-sousservice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/medecin-sousservice/medecin-sousservice.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateMedecinSousServiceDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateMedecinSousServiceDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\n// @ts-ignore\nimport { CreateMedecinSousServiceDto } from './dto/create-medecin-sous-service.dto';\n// @ts-ignore\nimport { UpdateMedecinSousServiceDto } from './dto/update-medecin-sous-service.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Injectable()\nexport class MedecinSousServiceService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  // ✅ Création d'un médecin sous service\n  async create(dto: CreateMedecinSousServiceDto, currentUser: any) {\n    const sousService = await this.prisma.sousService.findUnique({\n      where: { id: dto.idSousService },\n    });\n\n    if (!sousService) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le sous-service #${dto.idSousService} n'existe pas.`)\n      );\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Utilisateur non trouvé.\")\n      );\n    }\n\n    if (user.privilege.libelle !== 'Admin' && currentUser.id !== dto.idMedecin) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden('Seul un administrateur ou le médecin lui-même peut ajouter un sous-service.')\n      );\n    }\n\n    const medecin = await this.prisma.utilisateur.findUnique({\n      where: { id: dto.idMedecin },\n      include: { privilege: true },\n    });\n\n    if (!medecin || medecin.privilege.libelle !== 'Medecin') {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"L'utilisateur spécifié n'est pas un médecin.\")\n      );\n    }\n\n    const existing = await this.prisma.medecinSousService.findFirst({\n      where: {\n        idMedecin: dto.idMedecin,\n        idSousService: dto.idSousService,\n        deletedAt: null,\n      },\n    });\n\n    if (existing) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden('Ce médecin est déjà associé à ce sous-service.')\n      );\n    }\n\n    const created = await this.prisma.medecinSousService.create({\n      data: {\n        idMedecin: dto.idMedecin,\n        idSousService: dto.idSousService,\n      },\n    });\n\n    return this.responseService.created(created, 'Médecin sous-service ajouté avec succès');\n  }\n\n  // ✅ Liste des médecins sous service\n  async findAll() {\n    const data = await this.prisma.medecinSousService.findMany({\n      where: { deletedAt: null },\n      include: { medecin: true, sousService: true },\n    });\n\n    return this.responseService.success(data, 'Liste des médecins sous-services récupérée');\n  }\n\n  // ✅ Récupérer un médecin sous service par ID\n  async findOne(id: number) {\n    const data = await this.prisma.medecinSousService.findFirst({\n      where: { id, deletedAt: null },\n      include: { medecin: true, sousService: true },\n    });\n\n    if (!data) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le médecin sous-service #${id} n'existe pas ou a été supprimé.`)\n      );\n    }\n\n    return this.responseService.success(data, 'Médecin sous-service récupéré');\n  }\n\n  // ✅ Mise à jour d'un médecin sous service\n  async update(id: number, dto: UpdateMedecinSousServiceDto, currentUser: any) {\n    const existing = await this.prisma.medecinSousService.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!existing) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le médecin sous-service #${id} n'existe pas ou a été supprimé.`)\n      );\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Utilisateur non trouvé.\")\n      );\n    }\n\n    if (\n      user.privilege.libelle !== 'Admin' &&\n      currentUser.id !== existing.idMedecin\n    ) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Seul un administrateur ou le médecin concerné peut modifier ce sous-service.\")\n      );\n    }\n\n    const updated = await this.prisma.medecinSousService.update({\n      where: { id },\n      data: dto,\n    });\n\n    return this.responseService.success(updated, 'Médecin sous-service mis à jour avec succès');\n  }\n\n  // ✅ Suppression d'un médecin sous service (soft delete)\n  async remove(id: number, currentUser: any) {\n    const existing = await this.prisma.medecinSousService.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!existing) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le médecin sous-service #${id} n'existe pas ou a été supprimé.`)\n      );\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Utilisateur non trouvé.\")\n      );\n    }\n\n    if (\n      user.privilege.libelle !== 'Admin' &&\n      currentUser.id !== existing.idMedecin\n    ) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Seul un administrateur ou le médecin concerné peut supprimer ce sous-service.\")\n      );\n    }\n\n    await this.prisma.medecinSousService.update({\n      where: { id },\n      data: { deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Médecin sous-service supprimé avec succès (soft delete)');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MedecinSousserviceModule.html":{"url":"modules/MedecinSousserviceModule.html","title":"module - MedecinSousserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    MedecinSousserviceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MedecinSousserviceModule\n\n\n\ncluster_MedecinSousserviceModule_providers\n\n\n\n\nMedecinSousServiceService\n\nMedecinSousServiceService\n\n\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule -->\n\nMedecinSousServiceService->MedecinSousserviceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/medecin-sousservice/medecin-sousservice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MedecinSousServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MedecinSousServiceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MedecinSousServiceService } from './medecin-sousservice.service';\nimport { MedecinSousServiceController } from './medecin-sousservice.controller';\n\n@Module({\n  providers: [MedecinSousServiceService],\n  controllers: [ MedecinSousServiceController]\n})\nexport class MedecinSousserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModePaiement.html":{"url":"classes/ModePaiement.html","title":"class - ModePaiement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModePaiement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/modePaiement.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                paiements\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        paiements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paiement[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Paiement, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Paiement} from './paiement.entity'\n\n\nexport class ModePaiement {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nicon: string  | null;\n@ApiProperty({\n  type: () => Paiement,\n  isArray: true,\n  required: false,\n})\npaiements?: Paiement[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModePaiementController.html":{"url":"controllers/ModePaiementController.html","title":"controller - ModePaiementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModePaiementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/mode-paiement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mode-paiement\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req, dto: CreateModePaiementDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: CreateModePaiementDto})\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateModePaiementDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, Post, Body, Patch, Param, Delete,\n  UploadedFile, UseInterceptors, UseGuards, Request\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { ModePaiementService } from './mode-paiement.service';\n// @ts-ignore\nimport {CreateModePaiementDto} from './dto/create-mode-paiement.dto.';\nimport { UpdateModePaiementDto } from './dto/update-mode-paiement.dto';\nimport { ApiBearerAuth, ApiTags, ApiConsumes, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Mode de paiement')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('mode-paiement')\nexport class ModePaiementController {\n  constructor(private readonly modePaiementService: ModePaiementService) {}\n\n  @Post()\n  @UseInterceptors(FileInterceptor('icon'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: CreateModePaiementDto })\n  create(@Request() req, @Body() dto: CreateModePaiementDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.modePaiementService.create(dto, file, req.user);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll() {\n    return this.modePaiementService.findAll();\n  }\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.modePaiementService.findOne(+id);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('icon'))\n  @ApiConsumes('multipart/form-data')\n  update(@Param('id') id: string, @Body() dto: UpdateModePaiementDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.modePaiementService.update(+id, dto, file);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.modePaiementService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModePaiementDto.html":{"url":"classes/ModePaiementDto.html","title":"class - ModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class ModePaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nicon: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModePaiementModule.html":{"url":"modules/ModePaiementModule.html","title":"module - ModePaiementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModePaiementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModePaiementModule\n\n\n\ncluster_ModePaiementModule_imports\n\n\n\ncluster_ModePaiementModule_providers\n\n\n\n\nUploadModule\n\nUploadModule\n\n\n\nModePaiementModule\n\nModePaiementModule\n\nModePaiementModule -->\n\nUploadModule->ModePaiementModule\n\n\n\n\n\nModePaiementService\n\nModePaiementService\n\nModePaiementModule -->\n\nModePaiementService->ModePaiementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mode-paiement/mode-paiement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModePaiementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModePaiementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UploadModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModePaiementService } from './mode-paiement.service';\nimport { ModePaiementController } from './mode-paiement.controller';\nimport { UploadModule } from '../upload/upload.module';\n\n@Module({\n  providers: [ModePaiementService],\n  controllers: [ModePaiementController],\n  imports: [UploadModule],\n  exports: [],\n})\nexport class ModePaiementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModePaiementService.html":{"url":"injectables/ModePaiementService.html","title":"injectable - ModePaiementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModePaiementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/mode-paiement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, uploadService: FileStorageService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/mode-paiement/mode-paiement.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateModePaiementDto, file?: Express.Multer.File, currentUser?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateModePaiementDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, ConflictException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\n// @ts-ignore\nimport {CreateModePaiementDto} from './dto/create-mode-paiement.dto.';\nimport { UpdateModePaiementDto } from './dto/update-mode-paiement.dto';\n\n@Injectable()\nexport class ModePaiementService {\n  constructor(\n    private readonly prisma: PrismaService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n  }\n\n  async create(dto: CreateModePaiementDto, file?: Express.Multer.File, currentUser?: any) {\n    await this.verifyAdmin(currentUser);\n\n    const existing = await this.prisma.modePaiement.findFirst({\n      where: { libelle: dto.libelle, deletedAt: null },\n    });\n    if (existing) {\n      throw new ConflictException(this.responseService.conflict(`Mode de paiement \"${dto.libelle}\" existe déjà.`));\n    }\n\n    let icon: string | undefined = dto.icon;\n    if (file) {\n      const uploaded = await this.uploadService.uploadSingle(file, 'mode-paiement-icons');\n      icon = uploaded.url;\n    }\n\n    const created = await this.prisma.modePaiement.create({\n      data: { libelle: dto.libelle, icon },\n    });\n\n    return this.responseService.created(created, 'Mode de paiement créé avec succès');\n  }\n\n  async findAll() {\n    const modes = await this.prisma.modePaiement.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(modes, 'Liste des modes de paiement');\n  }\n\n  async findOne(id: number) {\n    const mode = await this.prisma.modePaiement.findUnique({ where: { id, deletedAt: null } });\n    if (!mode) throw new ConflictException(this.responseService.conflict(`Mode de paiement #${id} introuvable`));\n    return this.responseService.success(mode, 'Mode de paiement récupéré');\n  }\n\n  async update(id: number, dto: UpdateModePaiementDto, file?: Express.Multer.File) {\n    let icon = dto.icon;\n    if (file) {\n      const uploaded = await this.uploadService.uploadSingle(file, 'mode-paiement-icons');\n      icon = uploaded.url;\n    }\n\n    const updated = await this.prisma.modePaiement.update({\n      where: { id },\n      data: {\n        ...dto,\n        icon,\n      },\n    });\n\n    return this.responseService.success(updated, 'Mode de paiement mis à jour');\n  }\n\n  async remove(id: number) {\n    await this.prisma.modePaiement.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, 'Mode de paiement supprimé');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionalJwtAuthGuard.html":{"url":"injectables/OptionalJwtAuthGuard.html","title":"injectable - OptionalJwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionalJwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/optional-jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/optional-jwt-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class OptionalJwtAuthGuard extends AuthGuard('jwt') {\n  handleRequest(err, user, info, context: ExecutionContext) {\n    // ✅ Retourne `user` s'il est authentifié, sinon continue sans erreur\n    return user || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ordonnance.html":{"url":"classes/Ordonnance.html","title":"class - Ordonnance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ordonnance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/ordonnance.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contenu\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecin\n                            \n                            \n                                    \n                                idPatient\n                            \n                            \n                                    \n                                    Optional\n                                medecin\n                            \n                            \n                                    \n                                    Optional\n                                patient\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idPatient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class Ordonnance {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidPatient: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecin: number ;\n@ApiProperty({\n  type: 'string',\n})\ncontenu: string ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\npatient?: Utilisateur ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nmedecin?: Utilisateur ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrdonnanceDto.html":{"url":"classes/OrdonnanceDto.html","title":"class - OrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contenu\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class OrdonnanceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ncontenu: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Paiement.html":{"url":"classes/Paiement.html","title":"class - Paiement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Paiement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/paiement.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatTransaction\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idModePaiement\n                            \n                            \n                                    \n                                idReservation\n                            \n                            \n                                    \n                                    Optional\n                                modePaiement\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                referenceTransaction\n                            \n                            \n                                    \n                                    Optional\n                                reservation\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idModePaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modePaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModePaiement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => ModePaiement, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Reservation} from './reservation.entity'\nimport {ModePaiement} from './modePaiement.entity'\n\n\nexport class Paiement {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidReservation: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidModePaiement: number ;\n@ApiProperty({\n  type: 'string',\n})\nreferenceTransaction: string ;\n@ApiProperty({\n  type: 'string',\n})\netatTransaction: string ;\n@ApiProperty({\n  type: () => Reservation,\n  required: false,\n})\nreservation?: Reservation ;\n@ApiProperty({\n  type: () => ModePaiement,\n  required: false,\n})\nmodePaiement?: ModePaiement ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaiementDto.html":{"url":"classes/PaiementDto.html","title":"class - PaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatTransaction\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                referenceTransaction\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class PaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'string',\n})\nreferenceTransaction: string ;\n@ApiProperty({\n  type: 'string',\n})\netatTransaction: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n@Global()\n@Module({\n  providers: [PrismaService],\n  imports: [],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { loggingMiddleware } from './prisma.middleware';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(private eventEmitter: EventEmitter2) {\n    super();\n    this.$use(loggingMiddleware(this.eventEmitter));\n  }\n\n  async onModuleInit() {\n    try {\n      await this.$connect();\n      console.log('✅ Connected to the database');\n      console.log('🧩 Available models:', Object.keys(this));\n    } catch (error) {\n      console.error('❌ Failed to connect to the database', error);\n      process.exit(1);\n    }\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Privilege.html":{"url":"classes/Privilege.html","title":"class - Privilege","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Privilege\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/privilege.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                utilisateurs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        utilisateurs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Utilisateur[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class Privilege {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: () => Utilisateur,\n  isArray: true,\n  required: false,\n})\nutilisateurs?: Utilisateur[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Privilege-1.html":{"url":"classes/Privilege-1.html","title":"class - Privilege-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Privilege\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/entities/privilege.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Privilege {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrivilegeController.html":{"url":"controllers/PrivilegeController.html","title":"controller - PrivilegeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrivilegeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/privilege.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                privileges\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPrivilegeDto: CreatePrivilegeDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un privilège (Admin uniquement)'})@ApiResponse({status: 201, description: 'Privilège créé avec succès'})@ApiResponse({status: 401, description: 'Non autorisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPrivilegeDto\n                                            \n                                                            CreatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Lister tous les privilèges (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un privilège par ID (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un privilège (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePrivilegeDto: UpdatePrivilegeDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un privilège (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePrivilegeDto\n                                            \n                                                            UpdatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request } from '@nestjs/common';\nimport { PrivilegeService } from './privilege.service';\nimport { CreatePrivilegeDto } from './dto/create-privilege.dto';\nimport { UpdatePrivilegeDto } from './dto/update-privilege.dto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Privilèges')\n@ApiBearerAuth('access-token') // Swagger : Token requis pour toutes les routes\n@UseGuards(JwtAuthGuard) // ✅ Toutes les routes nécessitent l'authentification\n@Controller('privileges')\nexport class PrivilegeController {\n  constructor(private readonly privilegeService: PrivilegeService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un privilège (Admin uniquement)' })\n  @ApiResponse({ status: 201, description: 'Privilège créé avec succès' })\n  @ApiResponse({ status: 401, description: 'Non autorisé' })\n  create(@Body() createPrivilegeDto: CreatePrivilegeDto, @Request() req) {\n    return this.privilegeService.create(createPrivilegeDto, req.user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Lister tous les privilèges (Admin uniquement)' })\n  findAll(@Request() req) {\n    return this.privilegeService.findAll(req.user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un privilège par ID (Admin uniquement)' })\n  findOne(@Param('id') id: string, @Request() req) {\n    return this.privilegeService.findOne(+id, req.user);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un privilège (Admin uniquement)' })\n  update(@Param('id') id: string, @Body() updatePrivilegeDto: UpdatePrivilegeDto, @Request() req) {\n    return this.privilegeService.update(+id, updatePrivilegeDto, req.user);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un privilège (Admin uniquement)' })\n  remove(@Param('id') id: string, @Request() req) {\n    return this.privilegeService.remove(+id, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrivilegeDto.html":{"url":"classes/PrivilegeDto.html","title":"class - PrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class PrivilegeDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivilegeModule.html":{"url":"modules/PrivilegeModule.html","title":"module - PrivilegeModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivilegeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrivilegeModule\n\n\n\ncluster_PrivilegeModule_providers\n\n\n\n\nPrivilegeService\n\nPrivilegeService\n\n\n\nPrivilegeModule\n\nPrivilegeModule\n\nPrivilegeModule -->\n\nPrivilegeService->PrivilegeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/privilege/privilege.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrivilegeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PrivilegeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrivilegeService } from './privilege.service';\nimport { PrivilegeController } from './privilege.controller';\n\n@Module({\n  controllers: [PrivilegeController],\n  providers: [PrivilegeService],\n})\nexport class PrivilegeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrivilegeService.html":{"url":"injectables/PrivilegeService.html","title":"injectable - PrivilegeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrivilegeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/privilege.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/privilege/privilege.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPrivilegeDto: CreatePrivilegeDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPrivilegeDto\n                                            \n                                                            CreatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updatePrivilegeDto: UpdatePrivilegeDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePrivilegeDto\n                                            \n                                                            UpdatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, ConflictException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreatePrivilegeDto } from './dto/create-privilege.dto';\nimport { UpdatePrivilegeDto } from './dto/update-privilege.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Injectable()\nexport class PrivilegeService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  // ✅ Vérification de l'admin\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) {\n      throw new UnauthorizedException(\"Vous devez être connecté pour effectuer cette action.\");\n    }\n\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n  }\n\n  async create(createPrivilegeDto: CreatePrivilegeDto, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const existingPrivilege = await this.prisma.privilege.findUnique({\n      where: { libelle: createPrivilegeDto.libelle },\n    });\n\n    if (existingPrivilege) {\n      throw new ConflictException(\n        this.responseService.badRequest(\n          ['Le libellé du privilège doit être unique'],\n          'Validation échouée'\n        )\n      );\n    }\n\n    const privilege = await this.prisma.privilege.create({\n      data: createPrivilegeDto,\n    });\n\n    return this.responseService.created(privilege, 'Privilège créé avec succès');\n  }\n\n  async findAll(currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privileges = await this.prisma.privilege.findMany({\n      where: { deletedAt: null },\n    });\n\n    return this.responseService.success(privileges, 'Liste des privilèges récupérée');\n  }\n\n  async findOne(id: number, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privilege = await this.prisma.privilege.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${id} n'existe pas ou a été supprimé`)\n      );\n    }\n\n    return this.responseService.success(privilege, 'Privilège récupéré');\n  }\n\n  async update(id: number, updatePrivilegeDto: UpdatePrivilegeDto, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privilege = await this.prisma.privilege.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${id} n'existe pas ou a été supprimé`)\n      );\n    }\n\n    if (updatePrivilegeDto.libelle) {\n      const existingPrivilege = await this.prisma.privilege.findUnique({\n        where: { libelle: updatePrivilegeDto.libelle },\n      });\n\n      if (existingPrivilege && existingPrivilege.id !== id) {\n        throw new ConflictException(\n          this.responseService.badRequest(\n            ['Le libellé du privilège doit être unique'],\n            'Validation échouée'\n          )\n        );\n      }\n    }\n\n    const updatedPrivilege = await this.prisma.privilege.update({\n      where: { id },\n      data: updatePrivilegeDto,\n    });\n\n    return this.responseService.success(updatedPrivilege, 'Privilège mis à jour avec succès');\n  }\n\n  async remove(id: number, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privilege = await this.prisma.privilege.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${id} n'existe pas ou a déjà été supprimé`)\n      );\n    }\n\n    await this.prisma.privilege.update({\n      where: { id },\n      data: { deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Privilège supprimé avec succès (soft delete)');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reservation.html":{"url":"classes/Reservation.html","title":"class - Reservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/reservation.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatPaiement\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                idStatutReservation\n                            \n                            \n                                    \n                                idUtilisateur\n                            \n                            \n                                    \n                                    Optional\n                                medecinSousService\n                            \n                            \n                                    \n                                    Optional\n                                paiement\n                            \n                            \n                                    \n                                    Optional\n                                statutReservation\n                            \n                            \n                                    \n                                typeConsultation\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                utilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idStatutReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUtilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MedecinSousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        paiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paiement | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Paiement, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        statutReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatutReservation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => StatutReservation, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\nimport {MedecinSousService} from './medecinSousService.entity'\nimport {StatutReservation} from './statutReservation.entity'\nimport {Paiement} from './paiement.entity'\n\n\nexport class Reservation {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidUtilisateur: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecinSousService: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidStatutReservation: number ;\n@ApiProperty({\n  type: 'string',\n})\ntypeConsultation: string ;\n@ApiProperty({\n  type: 'string',\n})\netatPaiement: string ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nutilisateur?: Utilisateur ;\n@ApiProperty({\n  type: () => MedecinSousService,\n  required: false,\n})\nmedecinSousService?: MedecinSousService ;\n@ApiProperty({\n  type: () => StatutReservation,\n  required: false,\n})\nstatutReservation?: StatutReservation ;\n@ApiProperty({\n  type: () => Paiement,\n  required: false,\n  nullable: true,\n})\npaiement?: Paiement  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReservationDto.html":{"url":"classes/ReservationDto.html","title":"class - ReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatPaiement\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                typeConsultation\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class ReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ntypeConsultation: string ;\n@ApiProperty({\n  type: 'string',\n})\netatPaiement: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@example.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset-password.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @ApiProperty({ example: 'john.doe@example.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/exception/response/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  statusCode: number;\n  message: string;\n  data?: T;\n  errors?: string[];\n  timestamp?: string;\n  path?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseService.html":{"url":"injectables/ResponseService.html","title":"injectable - ResponseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/exception/response/response.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                badRequest\n                            \n                            \n                                conflict\n                            \n                            \n                                created\n                            \n                            \n                                error\n                            \n                            \n                                forbidden\n                            \n                            \n                                internalError\n                            \n                            \n                                notFound\n                            \n                            \n                                success\n                            \n                            \n                                unauthorized\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        badRequest\n                        \n                    \n                \n            \n            \n                \nbadRequest(errors: string[], message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                errors\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Requête invalide'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conflict\n                        \n                    \n                \n            \n            \n                \nconflict(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Conflit détecté'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(data: T, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Ressource créée avec succès'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Erreur interne du serveur'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forbidden\n                        \n                    \n                \n            \n            \n                \nforbidden(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Accès interdit'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internalError\n                        \n                    \n                \n            \n            \n                \ninternalError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Erreur interne du serveur'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notFound\n                        \n                    \n                \n            \n            \n                \nnotFound(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Ressource non trouvée'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(data: T, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:6\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Opération réussie'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthorized\n                        \n                    \n                \n            \n            \n                \nunauthorized(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Non autorisé'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Response } from './response.interface';\n\n@Injectable()\nexport class ResponseService {\n  success(data: T, message = 'Opération réussie'): Response {\n    return {\n      statusCode: 200,\n      message,\n      data,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  created(data: T, message = 'Ressource créée avec succès'): Response {\n    return {\n      statusCode: 201,\n      message,\n      data,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  badRequest(errors: string[], message = 'Requête invalide'): Response {\n    return {\n      statusCode: 400,\n      message,\n      errors,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  forbidden(message = 'Accès interdit'): Response {\n    return {\n      statusCode: 403,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  notFound(message = 'Ressource non trouvée'): Response {\n    return {\n      statusCode: 404,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  internalError(message = 'Erreur interne du serveur'): Response {\n    return {\n      statusCode: 500,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  conflict(message = 'Conflit détecté'): Response {\n    return {\n      statusCode: 409,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n\n\n  error(message = 'Erreur interne du serveur'): Response {\n    return {\n      statusCode: 500,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n  unauthorized(message = 'Non autorisé'): Response {\n    return {\n      statusCode: 401,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Service.html":{"url":"classes/Service.html","title":"class - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/service.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                sousServices\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sousServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SousService[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SousService, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {SousService} from './sousService.entity'\n\n\nexport class Service {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: () => SousService,\n  isArray: true,\n  required: false,\n})\nsousServices?: SousService[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServiceController.html":{"url":"controllers/ServiceController.html","title":"controller - ServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req, createServiceDto: CreateServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: CreateServiceDto})\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateServiceDto: UpdateServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServiceDto\n                                            \n                                                            UpdateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UploadedFile, UseInterceptors, UseGuards, Request } from '@nestjs/common';\nimport { ServiceService } from './service.service';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { ApiTags, ApiBearerAuth, ApiConsumes, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Services')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('services')\nexport class ServiceController {\n  constructor(private readonly serviceService: ServiceService) {}\n\n\n  @Post()\n\n  @UseInterceptors(FileInterceptor('iconUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: CreateServiceDto })\n  create(@Request() req, @Body() createServiceDto: CreateServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.serviceService.create(createServiceDto, file, req.user);\n  }\n\n  @Get()\n  findAll() {\n    return this.serviceService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.serviceService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  update(@Param('id') id: string, @Body() updateServiceDto: UpdateServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.serviceService.update(+id, updateServiceDto, file);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.serviceService.remove(+id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceDto.html":{"url":"classes/ServiceDto.html","title":"class - ServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class ServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServiceModule.html":{"url":"modules/ServiceModule.html","title":"module - ServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_imports\n\n\n\ncluster_ServiceModule_providers\n\n\n\ncluster_ServiceModule_exports\n\n\n\n\nUploadModule\n\nUploadModule\n\n\n\nServiceModule\n\nServiceModule\n\nServiceModule -->\n\nUploadModule->ServiceModule\n\n\n\n\n\nServiceService \n\nServiceService \n\nServiceService  -->\n\nServiceModule->ServiceService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nServiceModule -->\n\nPrismaService->ServiceModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nServiceModule -->\n\nResponseService->ServiceModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nServiceModule -->\n\nServiceService->ServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/service/service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            ServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ServiceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServiceController } from './service.controller';\nimport { ServiceService } from './service.service';\nimport { UploadModule } from '../upload/upload.module';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Module({\n  controllers: [ServiceController],\n  imports: [UploadModule], // Import du module contenant UploadService\n  providers: [ServiceService, PrismaService, ResponseService],\n  exports: [ServiceService],\n})\nexport class ServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceService.html":{"url":"injectables/ServiceService.html","title":"injectable - ServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, uploadService: FileStorageService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/service/service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServiceDto: CreateServiceDto, file?: Express.Multer.File, currentUser?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateServiceDto: UpdateServiceDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServiceDto\n                                            \n                                                            UpdateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException, UnauthorizedException, ConflictException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\n\n@Injectable()\nexport class ServiceService {\n  constructor(\n    private readonly prisma: PrismaService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService, // Injection avec token\n    private readonly responseService: ResponseService\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n        this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n\n\n    }\n  }\n\n  async create(createServiceDto: CreateServiceDto, file?: Express.Multer.File, currentUser?: any) {\n    await this.verifyAdmin(currentUser);\n    // Vérification si le libellé existe déjà\n    const existingService = await this.prisma.service.findFirst({\n      where: { libelle: createServiceDto.libelle, deletedAt: null },\n    });\n\n    if (existingService) {\n      throw new ConflictException(this.responseService.conflict(`Un service avec le libellé \"${createServiceDto.libelle}\" existe déjà.`));\n    }\n\n    let iconUrl = createServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const service = await this.prisma.service.create({ data: { libelle: createServiceDto.libelle, iconUrl } });\n    return this.responseService.created(service, 'Service créé avec succès');\n  }\n\n  async findAll() {\n    const services = await this.prisma.service.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(services, 'Liste des services récupérée');\n  }\n\n  async findOne(id: number) {\n    const service = await this.prisma.service.findUnique({ where: { id, deletedAt: null } });\n    if (!service) throw new ConflictException(this.responseService.conflict(`Service #${id} introuvable`));\n    return this.responseService.success(service, 'Service récupéré');\n  }\n\n  async update(id: number, updateServiceDto: UpdateServiceDto, file?: Express.Multer.File) {\n    let iconUrl = updateServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const updatedService = await this.prisma.service.update({ where: { id }, data: { ...updateServiceDto, iconUrl } });\n    return this.responseService.success(updatedService, 'Service mis à jour');\n  }\n\n  async remove(id: number) {\n    await this.prisma.service.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, 'Service supprimé (soft delete)');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SousService.html":{"url":"classes/SousService.html","title":"class - SousService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SousService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/sousService.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idService\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                medecins\n                            \n                            \n                                    \n                                    Optional\n                                service\n                            \n                            \n                                    \n                                    Optional\n                                tarifs\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecins\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedecinSousService[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Service\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Service, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tarifs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tarif[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tarif, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Service} from './service.entity'\nimport {MedecinSousService} from './medecinSousService.entity'\nimport {Tarif} from './tarif.entity'\n\n\nexport class SousService {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidService: number ;\n@ApiProperty({\n  type: () => Service,\n  required: false,\n})\nservice?: Service ;\n@ApiProperty({\n  type: () => MedecinSousService,\n  isArray: true,\n  required: false,\n})\nmedecins?: MedecinSousService[] ;\n@ApiProperty({\n  type: () => Tarif,\n  isArray: true,\n  required: false,\n})\ntarifs?: Tarif[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SousServiceController.html":{"url":"controllers/SousServiceController.html","title":"controller - SousServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SousServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/sous-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sous-services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByServiceId\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req, createSousServiceDto: CreateSousServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: CreateSousServiceDto})\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createSousServiceDto\n                                            \n                                                            CreateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiConsumes('application/json')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByServiceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByServiceId(idService: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('by-service/:idService')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idService\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSousServiceDto: UpdateSousServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSousServiceDto\n                                            \n                                                            UpdateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UploadedFile, UseInterceptors, UseGuards, Request } from '@nestjs/common';\nimport { SousServiceService } from './sous-service.service';\nimport { CreateSousServiceDto } from './dto/create-sous-service.dto';\nimport { UpdateSousServiceDto } from './dto/update-sous-service.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { ApiTags, ApiBearerAuth, ApiConsumes, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Sous-Services')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('sous-services')\nexport class SousServiceController {\n  constructor(private readonly sousServiceService: SousServiceService) {}\n\n  @Post()\n  @UseInterceptors(FileInterceptor('iconUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: CreateSousServiceDto })\n  create(@Request() req, @Body() createSousServiceDto: CreateSousServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.sousServiceService.create(createSousServiceDto, file, req.user);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.sousServiceService.findOne(+id);\n  }\n\n  @Get('by-service/:idService')\n  findByServiceId(@Param('idService') idService: string) {\n    return this.sousServiceService.findByServiceId((+idService));\n  }\n\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  update(@Param('id') id: string, @Body() updateSousServiceDto: UpdateSousServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.sousServiceService.update(+id, updateSousServiceDto, file);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.sousServiceService.remove(+id);\n  }\n\n@Get()\n@ApiConsumes( 'application/json' )\nfindAll() {\n  return this.sousServiceService.findAll();\n}\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SousServiceDto.html":{"url":"classes/SousServiceDto.html","title":"class - SousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class SousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SousServiceModule.html":{"url":"modules/SousServiceModule.html","title":"module - SousServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    SousServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SousServiceModule\n\n\n\ncluster_SousServiceModule_imports\n\n\n\ncluster_SousServiceModule_providers\n\n\n\ncluster_SousServiceModule_exports\n\n\n\n\nUploadModule\n\nUploadModule\n\n\n\nSousServiceModule\n\nSousServiceModule\n\nSousServiceModule -->\n\nUploadModule->SousServiceModule\n\n\n\n\n\nSousServiceService \n\nSousServiceService \n\nSousServiceService  -->\n\nSousServiceModule->SousServiceService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSousServiceModule -->\n\nPrismaService->SousServiceModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nSousServiceModule -->\n\nResponseService->SousServiceModule\n\n\n\n\n\nSousServiceService\n\nSousServiceService\n\nSousServiceModule -->\n\nSousServiceService->SousServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sous-service/sous-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            SousServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SousServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SousServiceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SousServiceService } from './sous-service.service';\nimport { SousServiceController } from './sous-service.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { UploadModule } from '../upload/upload.module';\n\n@Module({\n  imports: [UploadModule],\n  providers: [SousServiceService, PrismaService, ResponseService],\n  controllers: [SousServiceController],\n  exports: [SousServiceService],\n})\nexport class SousServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SousServiceService.html":{"url":"injectables/SousServiceService.html","title":"injectable - SousServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SousServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/sous-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByServiceId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, uploadService: FileStorageService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/sous-service/sous-service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSousServiceDto: CreateSousServiceDto, file?: Express.Multer.File, currentUser?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSousServiceDto\n                                            \n                                                            CreateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByServiceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByServiceId(idService: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idService\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSousServiceDto: UpdateSousServiceDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSousServiceDto\n                                            \n                                                            UpdateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException, UnauthorizedException, ConflictException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateSousServiceDto } from './dto/create-sous-service.dto';\nimport { UpdateSousServiceDto } from './dto/update-sous-service.dto';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\n\n@Injectable()\nexport class SousServiceService {\n  constructor(\n    private readonly prisma: PrismaService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService, // Injection avec token\n    private readonly responseService: ResponseService\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n\n  }\n\n\n  async create(createSousServiceDto: CreateSousServiceDto, file?: Express.Multer.File, currentUser?: any) {\n    await this.verifyAdmin(currentUser);\n\n    const service = await this.prisma.service.findUnique({ where: { id: createSousServiceDto. idService, deletedAt: null } });\n    if (!service) {\n      throw new NotFoundException(this.responseService.notFound(`Service #${createSousServiceDto. idService} introuvable`));\n    }\n    const existingService = await this.prisma.sousService.findFirst({\n      where: { libelle: createSousServiceDto.libelle, deletedAt: null },\n    });\n\n    if (existingService) {\n      throw new ConflictException(this.responseService.conflict(`Un service avec le libellé \"${createSousServiceDto.libelle}\" existe déjà.`));\n    }\n\n    let iconUrl = createSousServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'sous-services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const sousService = await this.prisma.sousService.create({ data: { ...createSousServiceDto, iconUrl } });\n    return this.responseService.created(sousService, 'Sous-service créé avec succès');\n  }\n\n  async findOne(id: number) {\n    const sousService = await this.prisma.sousService.findUnique({ where: { id, deletedAt: null } });\n    if (!sousService) throw new NotFoundException(this.responseService.notFound(`Sous-service #${id} introuvable`));\n    return this.responseService.success(sousService, 'Sous-service récupéré');\n  }\n\n  async update(id: number, updateSousServiceDto: UpdateSousServiceDto, file?: Express.Multer.File) {\n    let iconUrl = updateSousServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'sous-services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const updatedSousService = await this.prisma.sousService.update({ where: { id }, data: { ...updateSousServiceDto, iconUrl } });\n    return this.responseService.success(updatedSousService, 'Sous-service mis à jour');\n  }\n\n  async remove(id: number) {\n    await this.prisma.sousService.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, 'Sous-service supprimé (soft delete)');\n  }\n  async findByServiceId(idService: number) {\n    const sousServices = await this.prisma.sousService.findMany({\n      where: {\n        idService,\n        deletedAt: null,\n      },\n    });\n\n    return this.responseService.success(\n      sousServices,\n      `Sous-services du service #${idService} récupérés avec succès.`,\n    );\n  }\n  async findAll() {\n    const sousServices = await this.prisma.sousService.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(sousServices, 'Liste des sous-services récupérée');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatutReservation.html":{"url":"classes/StatutReservation.html","title":"class - StatutReservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatutReservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/statutReservation.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                reservations\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Reservation} from './reservation.entity'\n\n\nexport class StatutReservation {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: () => Reservation,\n  isArray: true,\n  required: false,\n})\nreservations?: Reservation[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatutReservationController.html":{"url":"controllers/StatutReservationController.html","title":"controller - StatutReservationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatutReservationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/statut-reservation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                statuts-reservation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateStatutReservationDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiConsumes('application/json')@ApiOperation({summary: 'Créer un nouveau statut de réservation'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Afficher tous les statuts de réservation actifs'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Afficher un statut de réservation par ID'})@ApiParam({name: 'id', type: 'number', description: 'ID du statut à récupérer'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un statut de réservation (soft delete)'})@ApiParam({name: 'id', type: 'number', description: 'ID du statut à supprimer'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateStatutReservationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiConsumes('application/json')@ApiOperation({summary: 'Modifier un statut de réservation par ID'})@ApiParam({name: 'id', type: 'number', description: 'ID du statut à modifier'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request } from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { StatutReservationService } from './statut-reservation.service';\nimport { CreateStatutReservationDto } from './dto/create-statut-reservation.dto';\nimport { UpdateStatutReservationDto } from './dto/update-statut-reservation.dto';\nimport { ApiBearerAuth, ApiConsumes, ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Statuts de Réservation')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('statuts-reservation')\nexport class StatutReservationController {\n  constructor(private readonly service: StatutReservationService) {}\n\n  @Post()\n  @ApiConsumes('application/json')\n  @ApiOperation({ summary: 'Créer un nouveau statut de réservation' })\n  create(@Body() dto: CreateStatutReservationDto, @Request() req) {\n    return this.service.create(dto, req.user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Afficher tous les statuts de réservation actifs' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Afficher un statut de réservation par ID' })\n  @ApiParam({ name: 'id', type: 'number', description: 'ID du statut à récupérer' })\n  findOne(@Param('id') id: string) {\n    return this.service.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiConsumes('application/json')\n  @ApiOperation({ summary: 'Modifier un statut de réservation par ID' })\n  @ApiParam({ name: 'id', type: 'number', description: 'ID du statut à modifier' })\n  update(@Param('id') id: string, @Body() dto: UpdateStatutReservationDto) {\n    return this.service.update(+id, dto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un statut de réservation (soft delete)' })\n  @ApiParam({ name: 'id', type: 'number', description: 'ID du statut à supprimer' })\n  remove(@Param('id') id: string) {\n    return this.service.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatutReservationDto.html":{"url":"classes/StatutReservationDto.html","title":"class - StatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class StatutReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatutReservationModule.html":{"url":"modules/StatutReservationModule.html","title":"module - StatutReservationModule","body":"\n                   \n\n\n\n\n    Modules\n    StatutReservationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatutReservationModule\n\n\n\ncluster_StatutReservationModule_providers\n\n\n\n\nStatutReservationService\n\nStatutReservationService\n\n\n\nStatutReservationModule\n\nStatutReservationModule\n\nStatutReservationModule -->\n\nStatutReservationService->StatutReservationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/statut-reservation/statut-reservation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatutReservationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatutReservationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatutReservationService } from './statut-reservation.service';\nimport { StatutReservationController } from './statut-reservation.controller';\n\n@Module({\n  providers: [StatutReservationService],\n  controllers: [StatutReservationController],\n  imports: [],\n  exports: [],\n})\nexport class StatutReservationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatutReservationService.html":{"url":"injectables/StatutReservationService.html","title":"injectable - StatutReservationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatutReservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/statut-reservation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/statut-reservation/statut-reservation.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateStatutReservationDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateStatutReservationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateStatutReservationDto } from './dto/create-statut-reservation.dto';\nimport { UpdateStatutReservationDto } from './dto/update-statut-reservation.dto';\n\n@Injectable()\nexport class StatutReservationService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n  }\n\n  async create(dto: CreateStatutReservationDto, currentUser: any) {\n    await this.verifyAdmin(currentUser);\n    const existing = await this.prisma.statutReservation.findFirst({\n      where: { libelle: dto.libelle, deletedAt: null },\n    });\n\n    if (existing) {\n      throw new ConflictException(this.responseService.conflict(\"Ce statut existe déjà.\"));\n    }\n\n    const created = await this.prisma.statutReservation.create({ data: dto });\n    return this.responseService.created(created, \"Statut créé\");\n  }\n\n  async findAll() {\n    const list = await this.prisma.statutReservation.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(list);\n  }\n\n  async findOne(id: number) {\n    const item = await this.prisma.statutReservation.findUnique({ where: { id, deletedAt: null } });\n    return this.responseService.success(item);\n  }\n\n  async update(id: number, dto: UpdateStatutReservationDto) {\n    const updated = await this.prisma.statutReservation.update({\n      where: { id },\n      data: dto,\n    });\n    return this.responseService.success(updated, \"Mis à jour\");\n  }\n\n  async remove(id: number) {\n    await this.prisma.statutReservation.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, \"Supprimé (soft)\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tarif.html":{"url":"classes/Tarif.html","title":"class - Tarif","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tarif\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/tarif.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                devise\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idDevise\n                            \n                            \n                                    \n                                idSousService\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                    Optional\n                                sousService\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        devise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Devise\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Devise, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idDevise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {SousService} from './sousService.entity'\nimport {Devise} from './devise.entity'\n\n\nexport class Tarif {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidSousService: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidDevise: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: () => SousService,\n  required: false,\n})\nsousService?: SousService ;\n@ApiProperty({\n  type: () => Devise,\n  required: false,\n})\ndevise?: Devise ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TarifController.html":{"url":"controllers/TarifController.html","title":"controller - TarifController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TarifController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/tarif.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tarifs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                activate\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                deactivate\n                            \n                            \n                                    \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findAllTarifsOfSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/activate')@ApiOperation({summary: 'Activer un tarif et désactiver les autres pour le même sous-service'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateTarifDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un tarif'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deactivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    deactivate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/deactivate')@ApiOperation({summary: 'Désactiver un tarif manuellement'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un tarif'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(idSousService?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer tous les tarifs'})@ApiQuery({name: 'idSousService', required: false, type: Number})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idSousService\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAllTarifsOfSousService\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllTarifsOfSousService(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sous-service/:id/full')@ApiOperation({summary: 'Lister tous les tarifs (actifs + inactifs) d’un sous-service'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un tarif par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateTarifDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un tarif'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Body, Param, Query } from '@nestjs/common';\nimport { TarifService } from './tarif.service';\nimport { CreateTarifDto } from './dto/create-tarif.dto';\nimport { UpdateTarifDto } from './dto/update-tarif.dto';\nimport { ApiTags, ApiOperation, ApiParam, ApiQuery } from '@nestjs/swagger';\n\n@ApiTags('Tarifs')\n@Controller('tarifs')\nexport class TarifController {\n  constructor(private readonly tarifService: TarifService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un tarif' })\n  create(@Body() dto: CreateTarifDto) {\n    return this.tarifService.create(dto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Récupérer tous les tarifs' })\n  @ApiQuery({ name: 'idSousService', required: false, type: Number })\n  findAll(@Query('idSousService') idSousService?: string) {\n    if (idSousService) {\n      return this.tarifService.findAllBySousService(+idSousService);\n    }\n    return this.tarifService.findAll();\n  }\n\n  @Get('sous-service/:id/full')\n  @ApiOperation({ summary: 'Lister tous les tarifs (actifs + inactifs) d’un sous-service' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findAllTarifsOfSousService(@Param('id') id: string) {\n    return this.tarifService.findAllBySousServiceFull(+id);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un tarif par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findById(@Param('id') id: string) {\n    return this.tarifService.findById(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un tarif' })\n  @ApiParam({ name: 'id', type: 'number' })\n  update(@Param('id') id: string, @Body() dto: UpdateTarifDto) {\n    return this.tarifService.update(+id, dto);\n  }\n\n  @Patch(':id/activate')\n  @ApiOperation({ summary: 'Activer un tarif et désactiver les autres pour le même sous-service' })\n  @ApiParam({ name: 'id', type: 'number' })\n  activate(@Param('id') id: string) {\n    return this.tarifService.activate(+id);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un tarif' })\n  @ApiParam({ name: 'id', type: 'number' })\n  delete(@Param('id') id: string) {\n    return this.tarifService.delete(+id);\n  }\n  @Patch(':id/deactivate')\n  @ApiOperation({ summary: 'Désactiver un tarif manuellement' })\n  @ApiParam({ name: 'id', type: 'number' })\n  deactivate(@Param('id') id: string) {\n    return this.tarifService.deactivate(+id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TarifDto.html":{"url":"classes/TarifDto.html","title":"class - TarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class TarifDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TarifModule.html":{"url":"modules/TarifModule.html","title":"module - TarifModule","body":"\n                   \n\n\n\n\n    Modules\n    TarifModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TarifModule\n\n\n\ncluster_TarifModule_providers\n\n\n\n\nTarifService\n\nTarifService\n\n\n\nTarifModule\n\nTarifModule\n\nTarifModule -->\n\nTarifService->TarifModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tarif/tarif.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TarifService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TarifController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TarifService } from './tarif.service';\nimport { TarifController } from './tarif.controller';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Module({\n  providers: [TarifService],\n  controllers: [TarifController],\n  imports: [],\n  exports: [],\n})\nexport class TarifModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TarifService.html":{"url":"injectables/TarifService.html","title":"injectable - TarifService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TarifService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/tarif.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deactivate\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllBySousService\n                            \n                            \n                                    Async\n                                findAllBySousServiceFull\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/tarif/tarif.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTarifDto: CreateTarifDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTarifDto\n                                            \n                                                            CreateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deactivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    deactivate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:261\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllBySousService\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllBySousService(idSousService: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idSousService\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllBySousServiceFull\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllBySousServiceFull(idSousService: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idSousService\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateTarifDto: UpdateTarifDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTarifDto\n                                            \n                                                            UpdateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateTarifDto } from './dto/create-tarif.dto';\nimport { UpdateTarifDto } from './dto/update-tarif.dto';\n\n@Injectable()\nexport class TarifService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  async create(createTarifDto: CreateTarifDto) {\n    try {\n      const sousService = await this.prisma.sousService.findUnique({\n        where: { id: createTarifDto.idSousService },\n      });\n\n      if (!sousService) {\n        return this.responseService.badRequest([`Sous-service #${createTarifDto.idSousService} non trouvé.`]);\n      }\n\n      const devise = await this.prisma.devise.findUnique({\n        where: { id: createTarifDto.idDevise },\n      });\n\n      if (!devise) {\n        return this.responseService.badRequest([`Devise #${createTarifDto.idDevise} non trouvée.`]);\n      }\n\n      const existingTarif = await this.prisma.tarif.findFirst({\n        where: {\n          idSousService: createTarifDto.idSousService,\n          idDevise: createTarifDto.idDevise,\n          montant: createTarifDto.montant,\n          deletedAt: null,\n        },\n      });\n\n      if (existingTarif) {\n        return this.responseService.badRequest([\n          `Un tarif avec le montant ${createTarifDto.montant} existe déjà pour ce sous-service et cette devise.`,\n        ]);\n      }\n\n      return await this.prisma.$transaction(async (prisma) => {\n        if (createTarifDto.actif) {\n          await prisma.tarif.updateMany({\n            where: {\n              idSousService: createTarifDto.idSousService,\n              idDevise: createTarifDto.idDevise,\n              actif: true,\n            },\n            data: { actif: false },\n          });\n        }\n\n        const tarif = await prisma.tarif.create({\n          data: {\n            idSousService: createTarifDto.idSousService,\n            idDevise: createTarifDto.idDevise,\n            montant: createTarifDto.montant,\n            actif: createTarifDto.actif ?? true,\n          },\n          include: {\n            sousService: true,\n            devise: true,\n          },\n        });\n\n        return this.responseService.created(tarif, 'Tarif créé avec succès.');\n      });\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findAll() {\n    try {\n      const tarifs = await this.prisma.tarif.findMany({\n        include: {\n          sousService: true,\n          devise: true,\n        },\n      });\n      return this.responseService.success(tarifs, 'Tous les tarifs récupérés');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findAllBySousService(idSousService: number) {\n    try {\n      const sousService = await this.prisma.sousService.findUnique({\n        where: { id: idSousService },\n      });\n\n      if (!sousService) {\n        return this.responseService.badRequest([`Sous-service #${idSousService} non trouvé.`]);\n      }\n\n      const tarifs = await this.prisma.tarif.findMany({\n        where: {\n          idSousService,\n          actif: true,\n        },\n        include: {\n          devise: true,\n        },\n      });\n\n      return this.responseService.success(tarifs, `Tarifs actifs pour le sous-service #${idSousService} récupérés`);\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findAllBySousServiceFull(idSousService: number) {\n    try {\n      const sousService = await this.prisma.sousService.findUnique({\n        where: { id: idSousService },\n      });\n\n      if (!sousService) {\n        return this.responseService.badRequest([`Sous-service #${idSousService} non trouvé.`]);\n      }\n\n      const tarifs = await this.prisma.tarif.findMany({\n        where: {\n          idSousService,\n          deletedAt: null,\n        },\n        include: {\n          devise: true,\n        },\n      });\n\n      return this.responseService.success(tarifs, `Tous les tarifs (actifs et inactifs) pour le sous-service #${idSousService}`);\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findById(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n        include: {\n          sousService: true,\n          devise: true,\n        },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      return this.responseService.success(tarif, 'Tarif récupéré');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async update(id: number, updateTarifDto: UpdateTarifDto) {\n    try {\n      const tarifExisting = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarifExisting) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      return await this.prisma.$transaction(async (prisma) => {\n        if (updateTarifDto.actif) {\n          await prisma.tarif.updateMany({\n            where: {\n              id: { not: id },\n              idSousService: updateTarifDto.idSousService || tarifExisting.idSousService,\n              idDevise: updateTarifDto.idDevise || tarifExisting.idDevise,\n              actif: true,\n            },\n            data: { actif: false },\n          });\n        }\n\n        const updatedTarif = await prisma.tarif.update({\n          where: { id },\n          data: updateTarifDto,\n          include: {\n            sousService: true,\n            devise: true,\n          },\n        });\n\n        return this.responseService.success(updatedTarif, 'Tarif mis à jour avec succès');\n      });\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async activate(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      return await this.prisma.$transaction(async (prisma) => {\n        await prisma.tarif.updateMany({\n          where: {\n            id: { not: id },\n            idSousService: tarif.idSousService,\n            idDevise: tarif.idDevise,\n            actif: true,\n          },\n          data: { actif: false },\n        });\n\n        const activatedTarif = await prisma.tarif.update({\n          where: { id },\n          data: { actif: true },\n          include: {\n            sousService: true,\n            devise: true,\n          },\n        });\n\n        return this.responseService.success(activatedTarif, 'Tarif activé avec succès.');\n      });\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async delete(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      await this.prisma.tarif.update({\n        where: { id },\n        data: { actif: false, deletedAt: new Date() },\n      });\n\n      return this.responseService.success(null, 'Tarif supprimé avec succès');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n  async deactivate(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      if (!tarif.actif) {\n        return this.responseService.badRequest([`Le tarif #${id} est déjà inactif.`]);\n      }\n\n      const updated = await this.prisma.tarif.update({\n        where: { id },\n        data: { actif: false },\n        include: {\n          sousService: true,\n          devise: true,\n        },\n      });\n\n      return this.responseService.success(updated, 'Tarif désactivé avec succès.');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviseDto.html":{"url":"classes/UpdateDeviseDto.html","title":"class - UpdateDeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/dto/update-devise.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDeviseDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateDeviseDto } from './create-devise.dto';\n\nexport class UpdateDeviseDto extends PartialType(CreateDeviseDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviseDto-1.html":{"url":"classes/UpdateDeviseDto-1.html","title":"class - UpdateDeviseDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                actif\n                            \n                            \n                                    \n                                    Optional\n                                code\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                symbole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateDeviseDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\ncode?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nsymbole?: string ;\n@ApiProperty({\n  type: 'boolean',\n  required: false,\n})\nactif?: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDisponibiliteDto.html":{"url":"classes/UpdateDisponibiliteDto.html","title":"class - UpdateDisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/dto/update-disponibilite.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDisponibiliteDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateDisponibiliteDto } from './create-disponibilite.dto';\n\nexport class UpdateDisponibiliteDto extends PartialType(CreateDisponibiliteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDisponibiliteDto-1.html":{"url":"classes/UpdateDisponibiliteDto-1.html","title":"class - UpdateDisponibiliteDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                heureDebut\n                            \n                            \n                                    \n                                    Optional\n                                heureFin\n                            \n                            \n                                    \n                                    Optional\n                                jourSemaine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateDisponibiliteDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\njourSemaine?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nheureDebut?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nheureFin?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDossierMedicalDto.html":{"url":"classes/UpdateDossierMedicalDto.html","title":"class - UpdateDossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                dateMiseAJour\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                fichiers\n                            \n                            \n                                    \n                                    Optional\n                                historique\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateDossierMedicalDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nhistorique?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nfichiers?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n})\ndateMiseAJour?: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLogDto.html":{"url":"classes/UpdateLogDto.html","title":"class - UpdateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                action\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-log.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-log.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateLogDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\naction?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nip?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMedecinSousServiceDto.html":{"url":"classes/UpdateMedecinSousServiceDto.html","title":"class - UpdateMedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-medecinSousService.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateMedecinSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMedecinSousServiceDto-1.html":{"url":"classes/UpdateMedecinSousServiceDto-1.html","title":"class - UpdateMedecinSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/dto/update-medecin-sous-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                idMedecin\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                idSousService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/update-medecin-sous-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/update-medecin-sous-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\n\nexport class UpdateMedecinSousServiceDto {\n  @IsInt()\n  @IsOptional()\n  idMedecin?: number;\n\n  @IsInt()\n  @IsOptional()\n  idSousService?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateModePaiementDto.html":{"url":"classes/UpdateModePaiementDto.html","title":"class - UpdateModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-modePaiement.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-modePaiement.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-modePaiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateModePaiementDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nicon?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateModePaiementDto-1.html":{"url":"classes/UpdateModePaiementDto-1.html","title":"class - UpdateModePaiementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/dto/update-mode-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/update-mode-paiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du mode de paiement', example: 'MTN Mobile Money', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/update-mode-paiement.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateModePaiementDto {\n  @ApiProperty({ description: \"Libellé du mode de paiement\", example: \"MTN Mobile Money\", required: false })\n  @IsOptional()\n  @IsString()\n  libelle?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  icon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrdonnanceDto.html":{"url":"classes/UpdateOrdonnanceDto.html","title":"class - UpdateOrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                contenu\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-ordonnance.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-ordonnance.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateOrdonnanceDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\ncontenu?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaiementDto.html":{"url":"classes/UpdatePaiementDto.html","title":"class - UpdatePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                etatTransaction\n                            \n                            \n                                    \n                                    Optional\n                                montant\n                            \n                            \n                                    \n                                    Optional\n                                referenceTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdatePaiementDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n  required: false,\n})\nmontant?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nreferenceTransaction?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\netatTransaction?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrivilegeDto.html":{"url":"classes/UpdatePrivilegeDto.html","title":"class - UpdatePrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-privilege.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-privilege.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdatePrivilegeDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrivilegeDto-1.html":{"url":"classes/UpdatePrivilegeDto-1.html","title":"class - UpdatePrivilegeDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/dto/update-privilege.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePrivilegeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePrivilegeDto } from './create-privilege.dto';\n\nexport class UpdatePrivilegeDto extends PartialType(CreatePrivilegeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReservationDto.html":{"url":"classes/UpdateReservationDto.html","title":"class - UpdateReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                etatPaiement\n                            \n                            \n                                    \n                                    Optional\n                                typeConsultation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-reservation.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-reservation.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-reservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateReservationDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\ntypeConsultation?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\netatPaiement?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto.html":{"url":"classes/UpdateServiceDto.html","title":"class - UpdateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-service.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateServiceDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto-1.html":{"url":"classes/UpdateServiceDto-1.html","title":"class - UpdateServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/update-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL de l'icône mise à jour', example: 'https://exemple.com/icon.png', required: false})@ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/update-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du service', example: 'Radiologie', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/update-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateServiceDto {\n  @ApiProperty({ description: \"Libellé du service\", example: \"Radiologie\", required: false })\n  @IsOptional()\n  libelle?: string;\n\n  @ApiProperty({ description: \"URL de l'icône mise à jour\", example: \"https://exemple.com/icon.png\", required: false })\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSousServiceDto.html":{"url":"classes/UpdateSousServiceDto.html","title":"class - UpdateSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-sousService.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-sousService.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSousServiceDto-1.html":{"url":"classes/UpdateSousServiceDto-1.html","title":"class - UpdateSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/dto/update-sous-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL de l'icône du sous-service', example: 'https://exemple.com/icon.png', required: false})@ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/update-sous-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du sous-service', example: 'Échographie', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/update-sous-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateSousServiceDto {\n  @ApiProperty({ description: \"Libellé du sous-service\", example: \"Échographie\", required: false })\n  @IsOptional()\n  libelle?: string;\n\n  @ApiProperty({ description: \"URL de l'icône du sous-service\", example: \"https://exemple.com/icon.png\", required: false })\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStatutReservationDto.html":{"url":"classes/UpdateStatutReservationDto.html","title":"class - UpdateStatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-statutReservation.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-statutReservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateStatutReservationDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStatutReservationDto-1.html":{"url":"classes/UpdateStatutReservationDto-1.html","title":"class - UpdateStatutReservationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/dto/update-statut-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du statut', example: 'Confirmée'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statut-reservation/dto/update-statut-reservation.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateStatutReservationDto {\n  @ApiProperty({ description: 'Libellé du statut', example: 'Confirmée' })\n  @IsOptional()\n  @IsString()\n  libelle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTarifDto.html":{"url":"classes/UpdateTarifDto.html","title":"class - UpdateTarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                actif\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-tarif.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-tarif.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-tarif.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateTarifDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n  required: false,\n})\nmontant?: number ;\n@ApiProperty({\n  type: 'boolean',\n  required: false,\n})\nactif?: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTarifDto-1.html":{"url":"classes/UpdateTarifDto-1.html","title":"class - UpdateTarifDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/dto/update-tarif.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTarifDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTarifDto } from './create-tarif.dto';\n\nexport class UpdateTarifDto extends PartialType(CreateTarifDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto.html":{"url":"classes/UpdateUtilisateurDto.html","title":"class - UpdateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                nom\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Optional\n                                prenom\n                            \n                            \n                                    \n                                    Optional\n                                profil\n                            \n                            \n                                    \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateUtilisateurDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nnom?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nprenom?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nemail?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\npassword?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\ntelephone?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nprofil?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto-1.html":{"url":"classes/UpdateUtilisateurDto-1.html","title":"class - UpdateUtilisateurDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/update-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                idPrivilege\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                nom\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                prenom\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profil\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profilUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'john@example.com'})@ValidateIf(o => )@IsOptional()@IsEmail({}, {message: 'L'email n'est pas valide'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 2})@ValidateIf(o => )@IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Doe'})@ValidateIf(o => )@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'NewPassword123!'})@ValidateIf(o => )@IsOptional()@MinLength(8, {message: 'Le mot de passe doit contenir au moins 8 caractères'})@Matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&]).{8,}$/, {message: 'Mot de passe trop faible'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'John'})@ValidateIf(o => )@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Admin'})@ValidateIf(o => )@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profilUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '+221786360662'})@ValidateIf(o => )@IsOptional()@Matches(/^\\+?\\d{9,15}$/, {message: 'Le numéro de téléphone doit commencer par + et contenir entre 9 et 15 chiffres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsOptional,\n  IsString,\n  IsEmail,\n  MinLength,\n  Matches,\n  IsInt,\n  ValidateIf,\n} from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UpdateUtilisateurDto {\n  @ApiPropertyOptional({ example: 'John' })\n  @ValidateIf(o => o.prenom !== '')\n  @IsOptional()\n  @IsString()\n  prenom?: string;\n\n  @ApiPropertyOptional({ example: 'Doe' })\n  @ValidateIf(o => o.nom !== '')\n  @IsOptional()\n  @IsString()\n  nom?: string;\n\n  @ApiPropertyOptional({ example: 'john@example.com' })\n  @ValidateIf(o => o.email !== '')\n  @IsOptional()\n  @IsEmail({}, { message: \"L'email n'est pas valide\" })\n  email?: string;\n\n  @ApiPropertyOptional({ example: 'NewPassword123!' })\n  @ValidateIf(o => o.password !== '')\n  @IsOptional()\n  @MinLength(8, { message: 'Le mot de passe doit contenir au moins 8 caractères' })\n  @Matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&]).{8,}$/, {\n    message: 'Mot de passe trop faible',\n  })\n  password?: string;\n\n  @ApiPropertyOptional({ example: '+221786360662' })\n  @ValidateIf(o => o.telephone !== '')\n  @IsOptional()\n  @Matches(/^\\+?\\d{9,15}$/, {\n    message: \"Le numéro de téléphone doit commencer par + et contenir entre 9 et 15 chiffres\",\n  })\n  telephone?: string;\n\n  @ApiPropertyOptional({ example: 'Admin' })\n  @ValidateIf(o => o.profil !== '')\n  @IsOptional()\n  @IsString()\n  profil?: string;\n\n  @ApiPropertyOptional({ example: 2 })\n  @ValidateIf(o => o.idPrivilege !== '')\n  @IsOptional()\n  @IsInt()\n  idPrivilege?: number;\n\n  @ApiPropertyOptional({ type: 'string', format: 'binary' }) // ✅ pour Swagger\n  @IsOptional() // ✅ pour éviter une erreur si non envoyé\n  profilUrl?: any; // ✅ surtout pas @IsString()\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadModule.html":{"url":"modules/UploadModule.html","title":"module - UploadModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_providers\n\n\n\ncluster_UploadModule_exports\n\n\n\n\nUploadService \n\nUploadService \n\n\n\nUploadModule\n\nUploadModule\n\nUploadService  -->\n\nUploadModule->UploadService \n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nUploadModule -->\n\nCloudinaryService->UploadModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nUploadModule -->\n\nUploadService->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/upload/upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CloudinaryService\n                        \n                        \n                            UploadService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { CloudinaryService } from './cloudinary/cloudinary.service';\nimport { UploadService } from './upload.service';\n\n@Global() // 👈 Ajoute ça ici\n@Module({\n  providers: [\n    UploadService,\n    CloudinaryService,\n    {\n      provide: 'UploadService',\n      useClass: process.env.STORAGE_SERVICE === 'local'\n        ? UploadService\n        : CloudinaryService,\n    },\n  ],\n  exports: ['UploadService'],\n})\nexport class UploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseDir\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Private\n                                    Async\n                                ensureDirectory\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                            \n                                uploadFile\n                            \n                            \n                                    Async\n                                uploadMultiple\n                            \n                            \n                                    Async\n                                uploadSingle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/upload/upload.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        ensureDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureDirectory(folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(image: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadMultiple\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadMultiple(files: Express.Multer.File[], folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSingle(file: Express.Multer.File, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseDir\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/upload/upload.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UploadService.name)\n                    \n                \n                    \n                        \n                                Defined in src/upload/upload.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport {\n  FileStorageService,\n  FileUploadResult,\n} from './interfaces/upload.interface';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\n@Injectable()\nexport class UploadService implements FileStorageService {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  uploadFile(image: Express.Multer.File) {\n    throw new Error('Method not implemented.');\n  }\n  private logger = new Logger(UploadService.name);\n  private baseDir: string;\n\n  constructor() {\n    this.baseDir = process.env.UPLOAD_DIR || 'uploads';\n  }\n\n  private async ensureDirectory(folder: string): Promise {\n    const dirPath = path.join(this.baseDir, folder);\n    await fs.mkdir(dirPath, { recursive: true });\n    return dirPath;\n  }\n\n  private generateFileName(originalName: string): string {\n    const ext = path.extname(originalName);\n    const hash = crypto.randomBytes(8).toString('hex');\n    return `${hash}${ext}`;\n  }\n\n  async uploadSingle(\n    file: Express.Multer.File,\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    const dirPath = await this.ensureDirectory(folder);\n    const fileName = this.generateFileName(file.originalname);\n    const filePath = path.join(dirPath, fileName);\n\n    try {\n      await fs.writeFile(filePath, file.buffer);\n      const relativePath = path.join(folder, fileName);\n\n      return {\n        url: `/uploads/${relativePath}`,\n        id: relativePath,\n      };\n    } catch (error) {\n      this.logger.error(\n        `Erreur lors de l'enregistrement du fichier: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  async uploadMultiple(\n    files: Express.Multer.File[],\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    if (!files?.length) return [];\n\n    try {\n      return await Promise.all(\n        files.map((file) => this.uploadSingle(file, folder)),\n      );\n    } catch (error) {\n      this.logger.error(`Échec de l'upload batch: ${error.message}`);\n      throw error;\n    }\n  }\n  async deleteFile(filePath: string): Promise {\n    const fullPath = path.join(this.baseDir, filePath);\n    try {\n      await fs.unlink(fullPath);\n      this.logger.log(`🗑️ Fichier supprimé : ${filePath}`);\n    } catch (error) {\n      this.logger.warn(`⚠️ Impossible de supprimer le fichier : ${filePath}`);\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utilisateur.html":{"url":"classes/Utilisateur.html","title":"class - Utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/utilisateur.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                dossiers\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idPrivilege\n                            \n                            \n                                    \n                                    Optional\n                                logs\n                            \n                            \n                                    \n                                    Optional\n                                MedecinSousService\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                    Optional\n                                ordonnancesMedecin\n                            \n                            \n                                    \n                                    Optional\n                                ordonnancesPatient\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    Optional\n                                privilege\n                            \n                            \n                                    \n                                profil\n                            \n                            \n                                    \n                                    Optional\n                                reservations\n                            \n                            \n                                    \n                                telephone\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dossiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DossierMedical[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => DossierMedical, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Log[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Log, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        MedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedecinSousService[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ordonnancesMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ordonnance[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Ordonnance, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ordonnancesPatient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ordonnance[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Ordonnance, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        privilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Privilege\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Privilege, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Privilege} from './privilege.entity'\nimport {Reservation} from './reservation.entity'\nimport {DossierMedical} from './dossierMedical.entity'\nimport {Log} from './log.entity'\nimport {Ordonnance} from './ordonnance.entity'\nimport {MedecinSousService} from './medecinSousService.entity'\n\n\nexport class Utilisateur {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nnom: string ;\n@ApiProperty({\n  type: 'string',\n})\nprenom: string ;\n@ApiProperty({\n  type: 'string',\n})\nemail: string ;\n@ApiProperty({\n  type: 'string',\n})\npassword: string ;\n@ApiProperty({\n  type: 'string',\n})\ntelephone: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nprofil: string  | null;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidPrivilege: number ;\n@ApiProperty({\n  type: () => Privilege,\n  required: false,\n})\nprivilege?: Privilege ;\n@ApiProperty({\n  type: () => Reservation,\n  isArray: true,\n  required: false,\n})\nreservations?: Reservation[] ;\n@ApiProperty({\n  type: () => DossierMedical,\n  isArray: true,\n  required: false,\n})\ndossiers?: DossierMedical[] ;\n@ApiProperty({\n  type: () => Log,\n  isArray: true,\n  required: false,\n})\nlogs?: Log[] ;\n@ApiProperty({\n  type: () => Ordonnance,\n  isArray: true,\n  required: false,\n})\nordonnancesMedecin?: Ordonnance[] ;\n@ApiProperty({\n  type: () => Ordonnance,\n  isArray: true,\n  required: false,\n})\nordonnancesPatient?: Ordonnance[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n@ApiProperty({\n  type: () => MedecinSousService,\n  isArray: true,\n  required: false,\n})\nMedecinSousService?: MedecinSousService[] ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utilisateur-1.html":{"url":"classes/Utilisateur-1.html","title":"class - Utilisateur-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/entities/utilisateur.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Utilisateur {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UtilisateurController.html":{"url":"controllers/UtilisateurController.html","title":"controller - UtilisateurController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UtilisateurController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/utilisateur.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                utilisateur\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findAllClients\n                            \n                            \n                                    \n                                    \n                                    \n                                findAllExceptClients\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findByEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(file: Express.Multer.File, createUtilisateurDto: CreateUtilisateurDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(OptionalJwtAuthGuard)@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Créer un utilisateur (admin ou inscription libre)'})@ApiResponse({status: 201, description: 'Utilisateur créé avec succès'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createUtilisateurDto\n                                            \n                                                            CreateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')@ApiOperation({summary: 'Lister tous les utilisateurs'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllClients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('Clients')\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAllExceptClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllExceptClients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('non-clients')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Lister tous les utilisateurs sauf ceux ayant le profil Client'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('email/:email')@ApiOperation({summary: 'Récupérer un utilisateur par email'})@ApiResponse({status: 200, description: 'Utilisateur trouvé'})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')@ApiOperation({summary: 'Récupérer un utilisateur par ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')@ApiOperation({summary: 'Supprimer un utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, file: Express.Multer.File, updateUtilisateurDto: UpdateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(JwtAuthGuard)@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Mettre à jour un utilisateur (tous champs optionnels)'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUtilisateurDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n  UseInterceptors,\n  UploadedFile,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UtilisateurService } from './utilisateur.service';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { ChangePrivilegeDto } from './dto/change-privilege.dto';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiConsumes,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { OptionalJwtAuthGuard } from '../auth/optional-jwt-auth.guard';\nimport { Public } from '@prisma/client/runtime/library';\n\n@ApiTags('Utilisateurs')\n@Controller('utilisateur')\nexport class UtilisateurController {\n  constructor(private readonly utilisateurService: UtilisateurService) {}\n\n  @Post()\n  @UseGuards(OptionalJwtAuthGuard)\n  @UseInterceptors(FileInterceptor('profilUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Créer un utilisateur (admin ou inscription libre)' })\n  @ApiResponse({ status: 201, description: 'Utilisateur créé avec succès' })\n  create(\n    @UploadedFile() file: Express.Multer.File,\n    @Body() createUtilisateurDto: CreateUtilisateurDto,\n    @Request() req,\n  ) {\n    return this.utilisateurService.create(createUtilisateurDto, req.user, file);\n  }\n\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Lister tous les utilisateurs' })\n  findAll() {\n    return this.utilisateurService.findAll();\n  }\n  // ✅ NOUVEL ENDPOINT\n  @Get('non-clients')\n  //@UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Lister tous les utilisateurs sauf ceux ayant le profil Client' })\n  findAllExceptClients() {\n    return this.utilisateurService.findAllWithoutAdminsAndClients();\n  }\n  @Get('Clients')\n  //@ApiBearerAuth('access-token')\n  //@ApiOperation({ summary: 'Lister tous les utilisateurs sauf ceux ayant le profil Client' })\n  findAllClients() {\n    return this.utilisateurService.findAllClients();\n  }\n\n\n  @Get(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Récupérer un utilisateur par ID' })\n  findOne(@Param('id') id: string) {\n    return this.utilisateurService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @UseGuards(JwtAuthGuard)\n  @UseInterceptors(FileInterceptor('profilUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Mettre à jour un utilisateur (tous champs optionnels)' })\n  update(\n    @Param('id') id: string,\n    @UploadedFile() file: Express.Multer.File,\n    @Body() updateUtilisateurDto: UpdateUtilisateurDto,\n  ) {\n    return this.utilisateurService.update(+id, updateUtilisateurDto, file);\n  }\n  @Delete(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Supprimer un utilisateur' })\n  remove(@Param('id') id: string) {\n    return this.utilisateurService.remove(+id);\n  }\n  @Get('email/:email')\n  @ApiOperation({ summary: 'Récupérer un utilisateur par email' })\n  @ApiResponse({ status: 200, description: 'Utilisateur trouvé' })\n  @ApiResponse({ status: 404, description: \"Utilisateur non trouvé\" })\n  findByEmail(@Param('email') email: string) {\n    return this.utilisateurService.findUtilisateurByEmail(email);\n  }\n\n  // ← uniquement si tu utilises un guard global, mais dans ton cas pas nécessaire\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UtilisateurDto.html":{"url":"classes/UtilisateurDto.html","title":"class - UtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                profil\n                            \n                            \n                                    \n                                telephone\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class UtilisateurDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nnom: string ;\n@ApiProperty({\n  type: 'string',\n})\nprenom: string ;\n@ApiProperty({\n  type: 'string',\n})\nemail: string ;\n@ApiProperty({\n  type: 'string',\n})\npassword: string ;\n@ApiProperty({\n  type: 'string',\n})\ntelephone: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nprofil: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilisateurModule.html":{"url":"modules/UtilisateurModule.html","title":"module - UtilisateurModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilisateurModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_imports\n\n\n\ncluster_UtilisateurModule_providers\n\n\n\ncluster_UtilisateurModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nUtilisateurModule -->\n\nAuthModule->UtilisateurModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nUtilisateurModule -->\n\nUploadModule->UtilisateurModule\n\n\n\n\n\nUtilisateurService \n\nUtilisateurService \n\nUtilisateurService  -->\n\nUtilisateurModule->UtilisateurService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUtilisateurModule -->\n\nPrismaService->UtilisateurModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilisateur/utilisateur.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UtilisateurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UtilisateurController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UtilisateurService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UtilisateurService } from './utilisateur.service';\nimport { UtilisateurController } from './utilisateur.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { AuthModule } from '../auth/auth.module'; // ✅ Importer AuthModule pour avoir accès à JwtService\nimport { UploadModule } from '../upload/upload.module';\n@Module({\n  imports: [AuthModule,UploadModule], // ✅ Ajout de AuthModule pour éviter l'erreur\n  controllers: [UtilisateurController],\n  providers: [UtilisateurService, PrismaService],\n  exports: [UtilisateurService],\n})\nexport class UtilisateurModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilisateurService.html":{"url":"injectables/UtilisateurService.html","title":"injectable - UtilisateurService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilisateurService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/utilisateur.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePrivilege\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllClients\n                            \n                            \n                                    Async\n                                findAllWithoutAdminsAndClients\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findUtilisateurByEmail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService, uploadService: FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/utilisateur/utilisateur.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePrivilege\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePrivilege(id: number, changePrivilegeDto: ChangePrivilegeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changePrivilegeDto\n                                            \n                                                            ChangePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUtilisateurDto: CreateUtilisateurDto, currentUser?: any, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUtilisateurDto\n                                            \n                                                            CreateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllClients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithoutAdminsAndClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithoutAdminsAndClients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUtilisateurByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUtilisateurByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUtilisateurDto: UpdateUtilisateurDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUtilisateurDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  ConflictException,\n  UnauthorizedException,\n  Inject, BadRequestException,\n} from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { ChangePrivilegeDto } from './dto/change-privilege.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UtilisateurService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService,\n  ) {}\n\n  async create(\n    createUtilisateurDto: CreateUtilisateurDto,\n    currentUser?: any,\n    file?: Express.Multer.File,\n  ) {\n    let idPrivilege = createUtilisateurDto.idPrivilege;\n\n    if (!currentUser) {\n      const privilegeClient = await this.prisma.privilege.findFirst({ where: { libelle: 'Client' } });\n      if (!privilegeClient) {\n        throw new NotFoundException(\n          this.responseService.notFound(`Le privilège 'Client' n'existe pas. Contactez un administrateur.`),\n        );\n      }\n      idPrivilege = privilegeClient.id;\n    } else {\n      const adminUser = await this.prisma.utilisateur.findFirst({\n        where: { id: currentUser.id },\n        include: { privilege: true },\n      });\n\n      if (!adminUser || adminUser.privilege?.libelle !== 'Admin') {\n        throw new UnauthorizedException(\n          this.responseService.forbidden(\"Seuls les administrateurs peuvent créer un utilisateur avec un privilège spécifique.\"),\n        );\n      }\n\n      const privilege = await this.prisma.privilege.findUnique({ where: { id: idPrivilege } });\n      if (!privilege) {\n        throw new NotFoundException(\n          this.responseService.notFound(`Le privilège #${idPrivilege} n'existe pas.`),\n        );\n      }\n    }\n\n    const existingEmail = await this.prisma.utilisateur.findUnique({ where: { email: createUtilisateurDto.email } });\n    if (existingEmail) {\n      throw new ConflictException(\n        this.responseService.badRequest(['Cet email est déjà utilisé.'], 'Validation échouée'),\n      );\n    }\n\n    const existingPhone = await this.prisma.utilisateur.findUnique({ where: { telephone: createUtilisateurDto.telephone } });\n    if (existingPhone) {\n      throw new ConflictException(\n        this.responseService.badRequest(['Ce numéro de téléphone est déjà utilisé.'], 'Validation échouée'),\n      );\n    }\n\n    const hashedPassword = await bcrypt.hash(createUtilisateurDto.password, 10);\n\n    const privilege = await this.prisma.privilege.findUnique({ where: { id: idPrivilege } });\n\n    let profilUrl: string | undefined;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'profil-utilisateurs');\n      profilUrl = uploadResult.url;\n    }\n\n    const data: any = {\n      nom: createUtilisateurDto.nom,\n      prenom: createUtilisateurDto.prenom,\n      email: createUtilisateurDto.email,\n      password: hashedPassword,\n      telephone: createUtilisateurDto.telephone,\n      idPrivilege,\n      profil: privilege?.libelle,\n    };\n\n    if (profilUrl) data.profilUrl = profilUrl;\n\n    const utilisateur = await this.prisma.utilisateur.create({ data });\n\n    return this.responseService.created(utilisateur, 'Utilisateur créé avec succès');\n  }\n\n  async findAll() {\n    const utilisateurs = await this.prisma.utilisateur.findMany({\n      where: { deletedAt: null },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(utilisateurs, 'Liste des utilisateurs récupérée');\n  }\n\n  async findOne(id: number) {\n    const utilisateur = await this.prisma.utilisateur.findFirst({\n      where: { id, deletedAt: null },\n      include: { privilege: true },\n    });\n\n    if (!utilisateur) {\n      throw new NotFoundException(\n        this.responseService.notFound(`L'utilisateur #${id} n'existe pas ou a été supprimé`),\n      );\n    }\n\n    return this.responseService.success(utilisateur, 'Utilisateur récupéré');\n  }\n\n  async update(\n    id: number,\n    updateUtilisateurDto: UpdateUtilisateurDto,\n    file?: Express.Multer.File,\n  ) {\n    const existingUser = await this.prisma.utilisateur.findUnique({ where: { id } });\n    if (!existingUser) throw new NotFoundException('Utilisateur non trouvé');\n    if (\n      !file &&\n      !Object.values(updateUtilisateurDto).some((val) => val !== undefined)\n    ) {\n      throw new BadRequestException(\"Aucune donnée à mettre à jour.\");\n    }\n    let profilUrl = existingUser.profilUrl;\n\n    if (file) {\n      // Supprimer l’ancienne image si elle existe\n      if (profilUrl) {\n        await this.uploadService.deleteFile(profilUrl);\n      }\n      const uploadResult = await this.uploadService.uploadSingle(file, 'profil-utilisateurs');\n      profilUrl = uploadResult.url;\n    }\n\n    const data: any = {};\n    if (updateUtilisateurDto.nom) data.nom = updateUtilisateurDto.nom;\n    if (updateUtilisateurDto.prenom) data.prenom = updateUtilisateurDto.prenom;\n    if (updateUtilisateurDto.email) data.email = updateUtilisateurDto.email;\n    if (updateUtilisateurDto.password)\n      data.password = await bcrypt.hash(updateUtilisateurDto.password, 10);\n    if (updateUtilisateurDto.telephone) data.telephone = updateUtilisateurDto.telephone;\n    if (updateUtilisateurDto.idPrivilege) data.idPrivilege = updateUtilisateurDto.idPrivilege;\n    if (updateUtilisateurDto.profil) data.profil = updateUtilisateurDto.profil;\n    if (profilUrl) data.profilUrl = profilUrl;\n\n    const updatedUtilisateur = await this.prisma.utilisateur.update({\n      where: { id },\n      data,\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(updatedUtilisateur, 'Utilisateur mis à jour avec succès');\n  }\n\n  async remove(id: number) {\n    await this.findOne(id);\n\n    await this.prisma.utilisateur.update({\n      where: { id },\n      data: { deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Utilisateur supprimé avec succès (soft delete)');\n  }\n\n  async changePrivilege(id: number, changePrivilegeDto: ChangePrivilegeDto) {\n    await this.findOne(id);\n\n    const privilege = await this.prisma.privilege.findUnique({\n      where: { id: changePrivilegeDto.idPrivilege },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${changePrivilegeDto.idPrivilege} n'existe pas.`),\n      );\n    }\n\n    const updatedUtilisateur = await this.prisma.utilisateur.update({\n      where: { id },\n      data: {\n        idPrivilege: changePrivilegeDto.idPrivilege,\n        profil: privilege.libelle,\n      },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(updatedUtilisateur, 'Privilège mis à jour avec succès');\n  }\n\n  async findByEmail(email: string) {\n    return this.prisma.utilisateur.findFirst({ where: { email } });\n  }\n  async findAllWithoutAdminsAndClients() {\n    const utilisateurs = await this.prisma.utilisateur.findMany({\n      where: {\n        deletedAt: null,\n        NOT: {\n          privilege: {\n            libelle: {\n              in: ['Client', 'Admin'],\n            },\n          },\n        },\n      },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(\n      utilisateurs,\n      \"Liste des utilisateurs sans privilèges 'Client' et 'Admin' récupérée\",\n    );\n  }\n\n  async findAllClients() {\n    const utilisateurs = await this.prisma.utilisateur.findMany({\n      where: {\n        deletedAt: null,\n        privilege: {\n          libelle: 'Client',\n        },\n      },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(utilisateurs, 'Liste des utilisateurs avec le privilège Client');\n  }\n  async findUtilisateurByEmail(email: string) {\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { email, deletedAt: null },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Aucun utilisateur trouvé avec l'email ${email}`)\n      );\n    }\n\n    return this.responseService.success(user, \"Utilisateur récupéré avec succès\");\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ValidationModule\n\n\n\ncluster_ValidationModule_exports\n\n\n\ncluster_ValidationModule_providers\n\n\n\n\nExceptionService \n\nExceptionService \n\n\n\nResponseService \n\nResponseService \n\n\n\nValidationService \n\nValidationService \n\n\n\nValidationModule\n\nValidationModule\n\nExceptionService  -->\n\nValidationModule->ExceptionService \n\n\n\nResponseService  -->\n\nValidationModule->ResponseService \n\n\n\nValidationService  -->\n\nValidationModule->ValidationService \n\n\n\n\n\nExceptionService\n\nExceptionService\n\nValidationModule -->\n\nExceptionService->ValidationModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nValidationModule -->\n\nResponseService->ValidationModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nValidationModule -->\n\nValidationService->ValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExceptionService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExceptionService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ValidationService } from './validation.service';\nimport { ExceptionService } from './exception/exception.service';\nimport { ResponseService } from './exception/response/response.service';\n\n@Global() // Rend ce module accessible dans toute l'application\n@Module({\n  providers: [ValidationService, ExceptionService, ResponseService],\n  exports: [ValidationService, ExceptionService, ResponseService], // Exporte les services pour les autres modules\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationService.html":{"url":"injectables/ValidationService.html","title":"injectable - ValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validation.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(exceptionService: ExceptionService)\n                    \n                \n                        \n                            \n                                Defined in src/validation/validation.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        ExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ValidationPipe, ValidationPipeOptions } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { ExceptionService } from './exception/exception.service';\n@Injectable()\nexport class ValidationService extends ValidationPipe {\n  constructor(private readonly exceptionService: ExceptionService) {\n    const options: ValidationPipeOptions = {\n      whitelist: true,\n      transform: true,\n      forbidNonWhitelisted: true,\n      validationError: {\n        target: false,\n        value: false,\n      },\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        return this.exceptionService.createValidationException(errors);\n      },\n    };\n    super(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/async-context/async-context.interceptor.ts\n            \n            injectable\n            AsyncContextInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/blacklist/blacklist.service.ts\n            \n            injectable\n            BlacklistService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/connect-utilisateur.dto.ts\n            \n            class\n            ConnectUtilisateurDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/optional-jwt-auth.guard.ts\n            \n            injectable\n            OptionalJwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middleware/async-context/async-context.middleware.ts\n            \n            injectable\n            AsyncContextMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/devise/devise.controller.ts\n            \n            controller\n            DeviseController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/devise/devise.service.ts\n            \n            injectable\n            DeviseService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/devise/dto/create-devise.dto.ts\n            \n            class\n            CreateDeviseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/devise/dto/update-devise.dto.ts\n            \n            class\n            UpdateDeviseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/disponibilite/disponibilite.controller.ts\n            \n            controller\n            DisponibiliteController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/disponibilite/disponibilite.service.ts\n            \n            injectable\n            DisponibiliteService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/disponibilite/dto/create-disponibilite.dto.ts\n            \n            class\n            CreateDisponibiliteDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/disponibilite/dto/update-disponibilite.dto.ts\n            \n            class\n            UpdateDisponibiliteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-devise.dto.ts\n            \n            class\n            ConnectDeviseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-disponibilite.dto.ts\n            \n            class\n            ConnectDisponibiliteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-dossierMedical.dto.ts\n            \n            class\n            ConnectDossierMedicalDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-log.dto.ts\n            \n            class\n            ConnectLogDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-medecinSousService.dto.ts\n            \n            class\n            ConnectMedecinSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-modePaiement.dto.ts\n            \n            class\n            ConnectModePaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-ordonnance.dto.ts\n            \n            class\n            ConnectOrdonnanceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-paiement.dto.ts\n            \n            class\n            ConnectPaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-privilege.dto.ts\n            \n            class\n            ConnectPrivilegeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-reservation.dto.ts\n            \n            class\n            ConnectReservationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-service.dto.ts\n            \n            class\n            ConnectServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-sousService.dto.ts\n            \n            class\n            ConnectSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-statutReservation.dto.ts\n            \n            class\n            ConnectStatutReservationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-tarif.dto.ts\n            \n            class\n            ConnectTarifDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-utilisateur.dto.ts\n            \n            class\n            ConnectUtilisateurDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-devise.dto.ts\n            \n            class\n            CreateDeviseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-disponibilite.dto.ts\n            \n            class\n            CreateDisponibiliteDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-dossierMedical.dto.ts\n            \n            class\n            CreateDossierMedicalDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-medecinSousService.dto.ts\n            \n            class\n            CreateMedecinSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-modePaiement.dto.ts\n            \n            class\n            CreateModePaiementDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-ordonnance.dto.ts\n            \n            class\n            CreateOrdonnanceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-paiement.dto.ts\n            \n            class\n            CreatePaiementDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-privilege.dto.ts\n            \n            class\n            CreatePrivilegeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-reservation.dto.ts\n            \n            class\n            CreateReservationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-sousService.dto.ts\n            \n            class\n            CreateSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-statutReservation.dto.ts\n            \n            class\n            CreateStatutReservationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-tarif.dto.ts\n            \n            class\n            CreateTarifDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/devise.dto.ts\n            \n            class\n            DeviseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/devise.entity.ts\n            \n            class\n            Devise\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/disponibilite.dto.ts\n            \n            class\n            DisponibiliteDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/disponibilite.entity.ts\n            \n            class\n            Disponibilite\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/dossierMedical.dto.ts\n            \n            class\n            DossierMedicalDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/dossierMedical.entity.ts\n            \n            class\n            DossierMedical\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/log.dto.ts\n            \n            class\n            LogDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/log.entity.ts\n            \n            class\n            Log\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/medecinSousService.dto.ts\n            \n            class\n            MedecinSousServiceDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/medecinSousService.entity.ts\n            \n            class\n            MedecinSousService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/modePaiement.dto.ts\n            \n            class\n            ModePaiementDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/modePaiement.entity.ts\n            \n            class\n            ModePaiement\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/ordonnance.dto.ts\n            \n            class\n            OrdonnanceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/ordonnance.entity.ts\n            \n            class\n            Ordonnance\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/paiement.dto.ts\n            \n            class\n            PaiementDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/paiement.entity.ts\n            \n            class\n            Paiement\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/privilege.dto.ts\n            \n            class\n            PrivilegeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/privilege.entity.ts\n            \n            class\n            Privilege\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/reservation.dto.ts\n            \n            class\n            ReservationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/reservation.entity.ts\n            \n            class\n            Reservation\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/service.dto.ts\n            \n            class\n            ServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/service.entity.ts\n            \n            class\n            Service\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/sousService.dto.ts\n            \n            class\n            SousServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/sousService.entity.ts\n            \n            class\n            SousService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/statutReservation.dto.ts\n            \n            class\n            StatutReservationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/statutReservation.entity.ts\n            \n            class\n            StatutReservation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/tarif.dto.ts\n            \n            class\n            TarifDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/tarif.entity.ts\n            \n            class\n            Tarif\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-devise.dto.ts\n            \n            class\n            UpdateDeviseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-disponibilite.dto.ts\n            \n            class\n            UpdateDisponibiliteDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-dossierMedical.dto.ts\n            \n            class\n            UpdateDossierMedicalDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-log.dto.ts\n            \n            class\n            UpdateLogDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-medecinSousService.dto.ts\n            \n            class\n            UpdateMedecinSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-modePaiement.dto.ts\n            \n            class\n            UpdateModePaiementDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-ordonnance.dto.ts\n            \n            class\n            UpdateOrdonnanceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-paiement.dto.ts\n            \n            class\n            UpdatePaiementDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-privilege.dto.ts\n            \n            class\n            UpdatePrivilegeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-reservation.dto.ts\n            \n            class\n            UpdateReservationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-sousService.dto.ts\n            \n            class\n            UpdateSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-statutReservation.dto.ts\n            \n            class\n            UpdateStatutReservationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-tarif.dto.ts\n            \n            class\n            UpdateTarifDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/utilisateur.dto.ts\n            \n            class\n            UtilisateurDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/utilisateur.entity.ts\n            \n            class\n            Utilisateur\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/log-listener/log-listener.ts\n            \n            injectable\n            LogListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/log/log.controller.ts\n            \n            controller\n            LogController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/log/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/dto/create-medecin-sous-service.ts\n            \n            class\n            CreateMedecinSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/dto/update-medecin-sous-service.ts\n            \n            class\n            UpdateMedecinSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/medecin-sousservice.controller.ts\n            \n            controller\n            MedecinSousServiceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/medecin-sousservice.service.ts\n            \n            injectable\n            MedecinSousServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mode-paiement/dto/create-mode-paiement.dto..ts\n            \n            class\n            CreateModePaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mode-paiement/dto/update-mode-paiement.dto.ts\n            \n            class\n            UpdateModePaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mode-paiement/mode-paiement.controller.ts\n            \n            controller\n            ModePaiementController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mode-paiement/mode-paiement.service.ts\n            \n            injectable\n            ModePaiementService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/prisma/prisma.middleware.ts\n            \n            variable\n            asyncLocalStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/prisma/prisma.middleware.ts\n            \n            variable\n            loggingMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/privilege/dto/create-privilege.dto.ts\n            \n            class\n            CreatePrivilegeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/privilege/dto/find-privilege.dto.ts\n            \n            class\n            FindPrivilegeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/privilege/dto/update-privilege.dto.ts\n            \n            class\n            UpdatePrivilegeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/privilege/entities/privilege.entity.ts\n            \n            class\n            Privilege\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/privilege/privilege.controller.ts\n            \n            controller\n            PrivilegeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/privilege/privilege.service.ts\n            \n            injectable\n            PrivilegeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/service/dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/service/dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/service/service.controller.ts\n            \n            controller\n            ServiceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/service/service.service.ts\n            \n            injectable\n            ServiceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/sous-service/dto/create-sous-service.dto.ts\n            \n            class\n            CreateSousServiceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/sous-service/dto/update-sous-service.dto.ts\n            \n            class\n            UpdateSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sous-service/sous-service.controller.ts\n            \n            controller\n            SousServiceController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/sous-service/sous-service.service.ts\n            \n            injectable\n            SousServiceService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/statut-reservation/dto/create-statut-reservation.dto.ts\n            \n            class\n            CreateStatutReservationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/statut-reservation/dto/update-statut-reservation.dto.ts\n            \n            class\n            UpdateStatutReservationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/statut-reservation/statut-reservation.controller.ts\n            \n            controller\n            StatutReservationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/statut-reservation/statut-reservation.service.ts\n            \n            injectable\n            StatutReservationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tarif/dto/create-tarif.dto.ts\n            \n            class\n            CreateTarifDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tarif/dto/update-tarif.dto.ts\n            \n            class\n            UpdateTarifDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tarif/tarif.controller.ts\n            \n            controller\n            TarifController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tarif/tarif.service.ts\n            \n            injectable\n            TarifService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/upload/cloudinary/cloudinary.service.ts\n            \n            injectable\n            CloudinaryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/upload/interfaces/upload.interface.ts\n            \n            interface\n            FileStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/upload/interfaces/upload.interface.ts\n            \n            interface\n            FileUploadResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/upload/interfaces/upload.interface.ts\n            \n            variable\n            DATABASE_CONNECTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/upload/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/change-privilege.dto.ts\n            \n            class\n            ChangePrivilegeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/find-utilisateur.dto.ts\n            \n            class\n            FindUtilisateurDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utilisateur/entities/utilisateur.entity.ts\n            \n            class\n            Utilisateur\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/utilisateur.controller.ts\n            \n            controller\n            UtilisateurController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utilisateur/utilisateur.service.ts\n            \n            injectable\n            UtilisateurService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/validation/exception/exception.service.ts\n            \n            injectable\n            ExceptionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/validation/exception/response/response.interface.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/validation/exception/response/response.service.ts\n            \n            injectable\n            ResponseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/validation/validation.service.ts\n            \n            injectable\n            ValidationService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @prisma/client : ^6.5.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cloudinary : ^2.6.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            prisma : ^6.5.0\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DisponibiliteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MedecinSousserviceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModePaiementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivilegeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SousServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatutReservationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TarifModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilisateurModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_MedecinSousserviceModule\n\n\n\ncluster_MedecinSousserviceModule_providers\n\n\n\ncluster_ModePaiementModule\n\n\n\ncluster_ModePaiementModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrivilegeModule\n\n\n\ncluster_PrivilegeModule_providers\n\n\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_exports\n\n\n\ncluster_SousServiceModule\n\n\n\ncluster_SousServiceModule_exports\n\n\n\ncluster_SousServiceModule_providers\n\n\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_exports\n\n\n\ncluster_UploadModule_providers\n\n\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_exports\n\n\n\ncluster_ValidationModule\n\n\n\ncluster_ValidationModule_exports\n\n\n\ncluster_ValidationModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nUtilisateurModule -->\n\nAuthModule->UtilisateurModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDisponibiliteModule\n\nDisponibiliteModule\n\nAppModule -->\n\nDisponibiliteModule->AppModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nAppModule -->\n\nLogModule->AppModule\n\n\n\n\n\nLogService \n\nLogService \n\nLogService  -->\n\nLogModule->LogService \n\n\n\n\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule\n\nAppModule -->\n\nMedecinSousserviceModule->AppModule\n\n\n\n\n\nModePaiementModule\n\nModePaiementModule\n\nAppModule -->\n\nModePaiementModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nLogModule -->\n\nPrismaModule->LogModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrivilegeModule\n\nPrivilegeModule\n\nAppModule -->\n\nPrivilegeModule->AppModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nServiceService \n\nServiceService \n\nServiceService  -->\n\nServiceModule->ServiceService \n\n\n\n\n\nSousServiceModule\n\nSousServiceModule\n\nAppModule -->\n\nSousServiceModule->AppModule\n\n\n\n\n\nSousServiceService \n\nSousServiceService \n\nSousServiceService  -->\n\nSousServiceModule->SousServiceService \n\n\n\n\n\nStatutReservationModule\n\nStatutReservationModule\n\nAppModule -->\n\nStatutReservationModule->AppModule\n\n\n\n\n\nTarifModule\n\nTarifModule\n\nAppModule -->\n\nTarifModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nModePaiementModule -->\n\nUploadModule->ModePaiementModule\n\n\n\nServiceModule -->\n\nUploadModule->ServiceModule\n\n\n\nSousServiceModule -->\n\nUploadModule->SousServiceModule\n\n\n\nUtilisateurModule -->\n\nUploadModule->UtilisateurModule\n\n\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nUploadService \n\nUploadService \n\nUploadService  -->\n\nUploadModule->UploadService \n\n\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nUtilisateurService \n\nUtilisateurService \n\nUtilisateurService  -->\n\nUtilisateurModule->UtilisateurService \n\n\n\n\n\nValidationModule\n\nValidationModule\n\nAppModule -->\n\nValidationModule->AppModule\n\n\n\n\n\nExceptionService \n\nExceptionService \n\nExceptionService  -->\n\nValidationModule->ExceptionService \n\n\n\n\n\nResponseService \n\nResponseService \n\nResponseService  -->\n\nValidationModule->ResponseService \n\n\n\n\n\nValidationService \n\nValidationService \n\nValidationService  -->\n\nValidationModule->ValidationService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDeviseService\n\nDeviseService\n\nAppModule -->\n\nDeviseService->AppModule\n\n\n\n\n\nDisponibiliteService\n\nDisponibiliteService\n\nDisponibiliteModule -->\n\nDisponibiliteService->DisponibiliteModule\n\n\n\nAppModule -->\n\nDisponibiliteService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nServiceModule -->\n\nPrismaService->ServiceModule\n\n\n\nSousServiceModule -->\n\nPrismaService->SousServiceModule\n\n\n\nUtilisateurModule -->\n\nPrismaService->UtilisateurModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nServiceModule -->\n\nServiceService->ServiceModule\n\n\n\nAppModule -->\n\nServiceService->AppModule\n\n\n\n\n\nStatutReservationService\n\nStatutReservationService\n\nStatutReservationModule -->\n\nStatutReservationService->StatutReservationModule\n\n\n\nAppModule -->\n\nStatutReservationService->AppModule\n\n\n\n\n\nTarifService\n\nTarifService\n\nTarifModule -->\n\nTarifService->TarifModule\n\n\n\nAppModule -->\n\nTarifService->AppModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nUploadModule -->\n\nUploadService->UploadModule\n\n\n\nAppModule -->\n\nUploadService->AppModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nValidationModule -->\n\nValidationService->ValidationModule\n\n\n\nAppModule -->\n\nValidationService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBlacklistService\n\nBlacklistService\n\nAuthModule -->\n\nBlacklistService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nAuthModule -->\n\nResponseService->AuthModule\n\n\n\nDisponibiliteModule -->\n\nResponseService->DisponibiliteModule\n\n\n\nLogModule -->\n\nResponseService->LogModule\n\n\n\nServiceModule -->\n\nResponseService->ServiceModule\n\n\n\nSousServiceModule -->\n\nResponseService->SousServiceModule\n\n\n\nValidationModule -->\n\nResponseService->ValidationModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nAuthModule -->\n\nUtilisateurService->AuthModule\n\n\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\nLogListener\n\nLogListener\n\nLogModule -->\n\nLogListener->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nMedecinSousServiceService\n\nMedecinSousServiceService\n\nMedecinSousserviceModule -->\n\nMedecinSousServiceService->MedecinSousserviceModule\n\n\n\n\n\nModePaiementService\n\nModePaiementService\n\nModePaiementModule -->\n\nModePaiementService->ModePaiementModule\n\n\n\n\n\nPrivilegeService\n\nPrivilegeService\n\nPrivilegeModule -->\n\nPrivilegeService->PrivilegeModule\n\n\n\n\n\nSousServiceService\n\nSousServiceService\n\nSousServiceModule -->\n\nSousServiceService->SousServiceModule\n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nUploadModule -->\n\nCloudinaryService->UploadModule\n\n\n\n\n\nExceptionService\n\nExceptionService\n\nValidationModule -->\n\nExceptionService->ValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    26 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    103 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            asyncLocalStorage   (src/.../prisma.middleware.ts)\n                        \n                        \n                            DATABASE_CONNECTION   (src/.../upload.interface.ts)\n                        \n                        \n                            loggingMiddleware   (src/.../prisma.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/prisma/prisma.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        asyncLocalStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AsyncLocalStorage()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingMiddleware\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (eventEmitter: EventEmitter2) => {\n  return async (\n    params: Prisma.MiddlewareParams,\n    next: (params: Prisma.MiddlewareParams) => Promise,\n  ) => {\n    const result = await next(params);\n    const store = asyncLocalStorage.getStore();\n\n    // ✅ Crée un log uniquement si l'utilisateur est connecté (userId !== 0)\n    if (params.model !== 'Log' && store?.userId) {\n      eventEmitter.emit('prisma.log', {\n        idUtilisateur: store.userId,\n        action: `${params.action} on ${params.model}`,\n        ip: store.ip || '0.0.0.0',\n        details: params.args,\n      });\n    }\n\n    return result;\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/upload/interfaces/upload.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_CONNECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UPLOAD'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
