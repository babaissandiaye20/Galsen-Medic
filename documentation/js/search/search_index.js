var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.82,1,3.832]],["body/controllers/AppController.html",[0,3.049,1,6.421,2,2.561,3,0.068,4,0.06,5,0.06,6,6.137,7,0.261,8,2.412,9,8.323,10,0.646,11,0.006,12,0.308,13,6.867,14,1.989,15,0.696,16,0.153,17,1.513,18,6.224,19,6.137,20,0.068,21,0.426,22,3.129,23,2.427,24,2.054,25,6.867,26,0.005,27,0.005]],["title/modules/AppModule.html",[28,1.696,29,3.832]],["body/modules/AppModule.html",[1,4.489,2,1.773,3,0.03,4,0.027,5,0.027,11,0.006,16,0.183,17,0.675,18,5.216,19,2.74,20,0.03,21,0.19,26,0.003,27,0.003,28,1.987,29,7.811,30,1.397,31,1.397,32,1.462,33,1.462,34,1.397,35,2.777,36,1.462,37,2.74,38,2.74,39,2.74,40,5.216,41,5.477,42,5.477,43,5.477,44,5.477,45,5.477,46,5.216,47,5.477,48,5.477,49,5.477,50,5.477,51,5.477,52,4.623,53,5.477,54,5.477,55,5.216,56,4.992,57,4.796,58,4.992,59,2.962,60,4.718,61,4.992,62,4.992,63,4.087,64,5.216,65,2.267,66,1.462,67,1.429,68,3.066,69,4.246,70,4.489,71,4.246,72,4.246,73,4.246,74,2.655,75,3.066,76,1.338,77,2.74,78,3.066,79,3.066,80,3.066,81,3.066,82,2.74,83,2.237,84,2.74,85,3.066,86,2.365,87,2.365,88,3.066,89,2.13,90,1.888,91,2.365,92,2.74,93,2.237,94,3.066,95,3.066,96,1.618,97,2.237,98,3.066,99,3.066,100,1.766,101,2.237,102,3.066,103,3.066,104,3.066,105,3.066,106,3.066,107,3.066,108,3.066,109,3.066,110,3.066,111,3.252,112,4.246,113,2.237,114,2.525,115,3.066,116,1.888,117,2.237,118,3.066,119,3.066,120,3.066,121,3.066,122,2.13,123,2.74,124,3.066,125,2.13,126,2.365,127,3.066,128,3.066,129,3.066,130,0.532,131,3.066]],["title/injectables/AppService.html",[18,3.452,132,1.128]],["body/injectables/AppService.html",[3,0.07,4,0.062,5,0.062,7,0.269,8,2.461,9,8.417,11,0.006,12,0.319,14,2.057,15,0.71,16,0.131,17,1.564,18,5.901,20,0.07,21,0.441,24,2.123,26,0.005,27,0.005,132,1.928,133,2.6,134,6.345,135,7.1,136,7.1,137,7.1]],["title/injectables/AsyncContextInterceptor.html",[132,1.128,138,4.092]],["body/injectables/AsyncContextInterceptor.html",[3,0.058,4,0.051,5,0.051,7,0.223,8,2.19,11,0.006,12,0.264,14,1.704,16,0.154,17,1.296,20,0.058,21,0.365,24,2.26,26,0.004,27,0.004,132,1.716,133,2.155,138,6.225,139,6.755,140,6.225,141,5.257,142,7.558,143,7.558,144,7.259,145,6.093,146,8.814,147,5.883,148,1.731,149,1.731,150,0.239,151,0.596,152,4.537,153,8.351,154,7.558,155,5.257,156,4.537,157,5.257,158,4.292,159,2.926,160,3.105,161,5.883,162,5.257,163,4.845,164,5.883,165,5.883,166,5.883,167,6.755,168,5.257,169,7.558,170,4.845,171,3.622,172,5.883,173,5.257,174,7.558,175,3.622,176,5.883,177,5.883,178,5.883]],["title/injectables/AsyncContextMiddleware.html",[132,1.128,179,4.092]],["body/injectables/AsyncContextMiddleware.html",[3,0.057,4,0.05,5,0.05,7,0.218,8,2.158,11,0.006,12,0.258,14,1.666,16,0.152,17,1.267,20,0.057,21,0.357,26,0.004,27,0.004,132,1.691,133,2.106,140,6.134,145,6.375,148,1.692,149,1.692,150,0.234,151,0.582,152,4.435,156,4.435,157,5.139,158,4.195,159,2.226,160,4.612,163,4.736,171,3.541,179,6.134,180,6.656,181,5.139,182,7.448,183,7.448,184,8.261,185,5.583,186,8.738,187,5.75,188,3.035,189,4.435,190,7.448,191,3.995,192,3.212,193,4.759,194,4.736,195,4.29,196,5.139,197,5.139,198,2.743,199,3.12,200,5.75,201,5.75,202,5.745,203,3.541,204,3.312,205,5.75,206,5.139,207,2.955,208,4.736,209,5.75,210,4.195,211,4.195,212,5.75]],["title/controllers/AuthController.html",[0,1.82,213,3.832]],["body/controllers/AuthController.html",[0,1.432,2,1.459,3,0.039,4,0.034,5,0.034,7,0.148,8,1.654,10,0.697,11,0.006,12,0.333,14,2.148,15,0.563,16,0.157,17,0.862,20,0.039,21,0.243,22,1.782,24,2.217,26,0.003,27,0.003,148,2.182,149,2.182,150,0.302,151,0.751,159,1.514,160,2.064,188,3.013,198,1.866,213,4.403,214,3.495,215,2.064,216,3.911,217,3.723,218,5.102,219,5.102,220,5.102,221,5.102,222,3.911,223,6.357,224,5.709,225,3.911,226,5.709,227,3.675,228,6.106,229,3.015,230,6.106,231,4.403,232,3.911,233,3.537,234,3.911,235,5.72,236,3.911,237,5.709,238,3.81,239,2.859,240,3.516,241,5.102,242,3.949,243,3.911,244,5.718,245,2.982,246,5.102,247,6.106,248,3.911,249,3.911,250,3.911,251,6.625,252,5.709,253,2.789,254,5.102,255,2.39,256,3.911,257,3.911,258,5.709,259,3.495,260,6.006,261,5.709,262,3.911,263,5.709,264,3.911,265,2.122,266,3.013,267,2.185,268,3.495,269,4.684,270,3.495,271,1.911,272,3.221,273,3.495,274,5.102,275,3.016,276,3.648,277,2.01,278,2.122,279,2.064,280,4.541,281,5.201,282,0.403,283,3.911,284,3.911,285,3.911,286,4.27,287,4.165,288,3.911,289,3.911,290,3.911,291,3.911,292,3.189,293,3.911,294,3.911,295,1.382,296,3.911,297,3.911,298,3.495,299,3.911,300,3.397,301,3.911,302,3.911,303,3.911,304,3.911]],["title/modules/AuthModule.html",[28,1.696,40,3.452]],["body/modules/AuthModule.html",[2,2.418,3,0.046,4,0.041,5,0.041,11,0.006,16,0.176,17,1.03,20,0.046,21,0.29,26,0.004,27,0.004,28,2.54,30,2.954,31,2.13,32,2.23,33,2.23,34,2.13,35,3.55,36,3.55,40,6.886,59,3.446,65,3.092,66,2.23,67,2.179,74,3.621,76,2.039,82,6.65,83,3.41,198,4.166,213,5.739,217,1.88,269,6.645,270,4.177,276,2.987,277,2.402,278,2.536,305,4.177,306,4.177,307,4.177,308,5.808,309,6.371,310,3.318,311,5.58,312,4.674,313,4.674,314,4.177,315,7.441,316,3.85,317,6.482,318,3.41,319,4.674,320,6.618,321,1.997,322,3.85,323,4.674,324,3.248,325,4.674,326,4.177,327,4.177,328,4.674,329,4.674,330,4.674,331,4.674,332,4.177,333,2.536,334,4.177,335,4.674,336,4.674,337,4.674]],["title/injectables/AuthService.html",[132,1.128,269,3.452]],["body/injectables/AuthService.html",[3,0.034,4,0.03,5,0.03,7,0.131,8,1.506,11,0.006,12,0.353,14,2.167,15,0.776,16,0.161,17,0.76,20,0.034,21,0.214,24,2.351,26,0.003,27,0.003,83,2.515,132,1.18,133,1.263,148,2.314,149,2.314,150,0.32,151,0.796,159,3.251,203,3.201,207,1.772,217,3.737,218,4.646,219,4.646,220,4.646,221,4.646,223,5.954,228,2.839,229,2.292,230,4.282,233,3.568,238,1.772,239,3.491,242,1.727,246,3.081,247,4.282,251,3.081,253,1.684,259,4.646,260,5.456,269,3.612,273,3.081,274,4.646,275,2.659,276,3.322,300,4.855,308,5.427,310,3.1,311,5.023,314,3.081,316,2.839,320,6.721,321,1.473,322,2.839,326,5.593,338,3.081,339,3.828,340,5.199,341,2.133,342,3.447,343,7.293,344,3.447,345,5.199,346,1.007,347,3.447,348,3.447,349,5.199,350,3.447,351,3.782,352,5.199,353,3.447,354,3.447,355,5.199,356,3.447,357,1.986,358,4.282,359,3.447,360,2.917,361,3.447,362,2.515,363,3.447,364,3.447,365,3.447,366,1.727,367,3.447,368,5.199,369,3.447,370,2.659,371,3.447,372,3.447,373,2.852,374,3.13,375,3.081,376,2.292,377,5.199,378,3.447,379,3.447,380,3.447,381,3.447,382,3.447,383,3.447,384,3.447,385,2.659,386,2.123,387,3.447,388,2.292,389,3.447,390,3.447,391,4.646,392,3.447,393,3.447,394,3.447,395,3.724,396,2.292,397,2.839,398,3.447,399,3.447,400,3.793,401,5.199,402,3.081,403,3.447,404,2.395,405,3.081,406,3.447,407,1.727]],["title/injectables/BlacklistService.html",[132,1.128,308,3.304]],["body/injectables/BlacklistService.html",[3,0.057,4,0.05,5,0.05,7,0.218,8,2.154,11,0.006,12,0.37,14,2.154,15,0.774,16,0.137,17,1.264,20,0.057,21,0.356,22,2.614,23,2.027,24,2.224,26,0.004,27,0.004,59,3.444,76,2.503,132,1.688,133,2.101,148,2.429,149,2.429,150,0.336,151,0.836,159,2.22,217,3.728,233,2.736,242,4.372,308,4.945,341,2.353,360,2.401,391,7.802,408,5.126,409,7.436,410,7.436,411,2.947,412,5.736,413,3.724,414,7.436,415,1.544,416,5.736,417,7.436,418,5.736,419,4.751,420,5.736,421,2.557,422,5.425,423,5.736]],["title/classes/ChangePasswordDto.html",[21,0.309,223,3.625]],["body/classes/ChangePasswordDto.html",[3,0.064,4,0.056,5,0.056,7,0.246,10,0.755,11,0.006,12,0.361,15,0.763,16,0.148,20,0.064,21,0.499,26,0.005,27,0.005,150,0.327,223,5.861,282,0.668,424,0.693,425,7.803,426,5.337,427,0.829,428,8.732,429,8.732,430,5.342,431,6.48,432,6.48,433,6.48,434,6.48,435,1.201,436,4.608,437,5.337,438,2.508,439,3.744,440,6.48,441,6.48,442,5.791]],["title/classes/ChangePrivilegeDto.html",[21,0.309,443,3.625]],["body/classes/ChangePrivilegeDto.html",[3,0.066,4,0.058,5,0.058,7,0.252,10,0.625,11,0.006,12,0.298,16,0.15,20,0.066,21,0.507,26,0.005,27,0.005,150,0.271,245,3.283,255,3.416,282,0.686,346,1.313,424,0.711,427,0.842,430,4.421,435,1.123,436,4.308,438,2.574,439,3.099,443,5.955,444,7.294,445,4.248,446,6.137,447,7.294,448,7.294,449,1.313,450,6.648,451,5.941,452,6.723,453,4.619]],["title/injectables/CloudinaryService.html",[132,1.128,454,3.452]],["body/injectables/CloudinaryService.html",[3,0.039,4,0.034,5,0.059,7,0.256,8,1.658,11,0.006,12,0.354,14,1.957,15,0.743,16,0.124,17,0.865,20,0.039,21,0.244,24,2.361,26,0.003,27,0.003,132,1.299,133,1.437,148,1.988,149,1.988,150,0.275,151,0.684,158,2.863,159,1.519,175,2.416,217,3.578,227,1.829,229,2.892,253,1.917,339,3.078,341,2.771,360,2.396,373,2.608,374,3.305,388,3.806,396,3.806,407,1.965,419,5.266,422,4.175,427,0.59,449,0.631,454,3.976,455,3.507,456,6.636,457,4.714,458,5.211,459,5.211,460,5.723,461,5.723,462,3.924,463,6.756,464,3.232,465,4.605,466,6.364,467,3.924,468,4.16,469,4.019,470,4.414,471,6.636,472,6.636,473,3.232,474,3.924,475,5.723,476,3.507,477,6.116,478,3.405,479,2.609,480,3.507,481,3.507,482,3.507,483,3.507,484,3.507,485,3.507,486,3.507,487,3.507,488,3.507,489,3.507,490,3.507,491,3.507,492,5.25,493,3.507,494,3.976,495,3.507,496,6.037,497,3.924,498,3.924,499,3.507,500,3.924,501,3.924,502,3.507,503,3.924,504,3.924,505,5.115,506,3.507,507,2.416,508,3.507,509,3.924,510,3.507,511,3.924,512,3.924,513,3.507,514,3.924,515,3.924,516,2.863,517,3.232,518,3.507,519,3.507,520,3.507,521,3.507,522,3.507,523,4.714,524,3.924,525,2.416,526,3.924,527,3.924,528,3.507,529,3.027,530,3.507,531,3.507,532,3.232]],["title/classes/ConnectDeviseDto.html",[21,0.309,533,4.092]],["body/classes/ConnectDeviseDto.html",[3,0.063,4,0.055,5,0.055,7,0.24,10,0.744,11,0.006,12,0.355,15,0.756,16,0.116,20,0.063,21,0.392,26,0.005,27,0.005,150,0.368,151,0.916,271,4.218,282,0.652,346,1.272,424,0.676,427,0.816,435,1.188,449,1.389,533,6.514,534,1.567,535,4.39,536,5.516,537,1.373,538,1.993,539,1.878,540,6.319,541,2.291,542,1.253,543,2.291,544,6.319]],["title/classes/ConnectDisponibiliteDto.html",[21,0.309,545,4.092]],["body/classes/ConnectDisponibiliteDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,545,6.894,546,4.814,547,6.192]],["title/classes/ConnectDossierMedicalDto.html",[21,0.309,548,4.092]],["body/classes/ConnectDossierMedicalDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,548,6.894,549,5.344,550,6.192]],["title/classes/ConnectLogDto.html",[21,0.309,551,4.092]],["body/classes/ConnectLogDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,551,6.894,552,5.344,553,6.192]],["title/classes/ConnectMedecinSousServiceDto.html",[21,0.309,554,4.092]],["body/classes/ConnectMedecinSousServiceDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,554,6.894,555,5.344,556,6.929]],["title/classes/ConnectModePaiementDto.html",[21,0.309,557,4.092]],["body/classes/ConnectModePaiementDto.html",[3,0.063,4,0.055,5,0.055,7,0.24,10,0.744,11,0.006,12,0.355,15,0.756,16,0.116,20,0.063,21,0.392,26,0.005,27,0.005,150,0.368,151,0.916,271,4.218,282,0.652,346,1.272,424,0.676,427,0.816,435,1.188,449,1.389,534,1.567,537,1.373,538,1.993,539,1.878,541,2.291,542,1.253,543,2.291,557,6.514,558,4.874,559,2.386,560,6.319,561,5.647]],["title/classes/ConnectOrdonnanceDto.html",[21,0.309,562,4.092]],["body/classes/ConnectOrdonnanceDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,562,6.894,563,5.344,564,6.192]],["title/classes/ConnectPaiementDto.html",[21,0.309,565,4.092]],["body/classes/ConnectPaiementDto.html",[3,0.062,4,0.054,5,0.054,7,0.237,10,0.738,11,0.006,12,0.353,16,0.115,20,0.062,21,0.388,26,0.004,27,0.004,150,0.367,151,0.913,271,4.197,282,0.645,346,1.45,424,0.668,427,0.81,435,1.182,449,1.382,534,1.56,537,1.363,538,1.986,539,1.871,541,2.611,542,1.428,543,2.611,565,6.47,566,4.157,567,6.267,568,5.586,569,6.251]],["title/classes/ConnectPrivilegeDto.html",[21,0.309,570,4.092]],["body/classes/ConnectPrivilegeDto.html",[3,0.063,4,0.055,5,0.055,7,0.24,10,0.744,11,0.006,12,0.355,15,0.756,16,0.116,20,0.063,21,0.392,26,0.005,27,0.005,150,0.368,151,0.916,271,4.218,282,0.652,346,1.272,424,0.676,427,0.816,435,1.188,445,4.038,449,1.389,534,1.567,537,1.373,538,1.993,539,1.878,541,2.291,542,1.253,543,2.291,559,2.386,570,6.514,571,6.319,572,5.647]],["title/classes/ConnectReservationDto.html",[21,0.309,573,4.092]],["body/classes/ConnectReservationDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,573,6.894,574,4.427,575,5.344]],["title/classes/ConnectServiceDto.html",[21,0.309,576,4.092]],["body/classes/ConnectServiceDto.html",[3,0.063,4,0.055,5,0.055,7,0.24,10,0.744,11,0.006,12,0.355,15,0.756,16,0.116,20,0.063,21,0.392,26,0.005,27,0.005,150,0.368,151,0.916,271,4.218,282,0.652,346,1.272,424,0.676,427,0.816,435,1.188,449,1.389,534,1.567,537,1.373,538,1.993,539,1.878,541,2.291,542,1.253,543,2.291,559,2.386,576,6.514,577,4.038,578,5.205,579,5.205]],["title/classes/ConnectSousServiceDto.html",[21,0.309,580,4.092]],["body/classes/ConnectSousServiceDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,580,6.894,581,5.344,582,6.192]],["title/classes/ConnectStatutReservationDto.html",[21,0.309,583,4.092]],["body/classes/ConnectStatutReservationDto.html",[3,0.063,4,0.055,5,0.055,7,0.24,10,0.744,11,0.006,12,0.355,15,0.756,16,0.116,20,0.063,21,0.392,26,0.005,27,0.005,150,0.368,151,0.916,271,4.218,282,0.652,346,1.272,424,0.676,427,0.816,435,1.188,449,1.389,534,1.567,537,1.373,538,1.993,539,1.878,541,2.291,542,1.253,543,2.291,559,2.386,583,6.514,584,4.874,585,6.319,586,5.647]],["title/classes/ConnectTarifDto.html",[21,0.309,587,4.092]],["body/classes/ConnectTarifDto.html",[3,0.069,4,0.06,5,0.06,7,0.263,10,0.651,11,0.006,12,0.311,16,0.128,20,0.069,21,0.43,26,0.005,27,0.005,150,0.341,271,4.09,282,0.715,346,1.346,424,0.741,427,0.863,435,1.151,449,1.447,534,1.52,537,1.203,541,2.425,542,1.326,543,2.425,587,6.894,588,4.814,589,6.192]],["title/classes/ConnectUtilisateurDto.html",[21,0.309,235,3.452]],["body/classes/ConnectUtilisateurDto.html",[3,0.064,4,0.056,5,0.056,7,0.245,10,0.753,11,0.006,12,0.359,15,0.761,16,0.147,20,0.064,21,0.497,26,0.005,27,0.005,150,0.326,235,5.562,282,0.665,300,5.182,351,4.726,424,0.689,427,0.826,430,5.324,435,1.198,436,4.597,438,2.494,439,3.731,590,7.784,591,4.117,592,6.443,593,5.307,594,6.443,595,4.97,596,5.841,597,3.819,598,6.443,599,5.758]],["title/classes/ConnectUtilisateurDto-1.html",[21,0.258,235,2.89,295,1.47]],["body/classes/ConnectUtilisateurDto-1.html",[3,0.058,4,0.051,5,0.051,7,0.224,10,0.786,11,0.006,12,0.375,15,0.803,16,0.109,20,0.058,21,0.366,26,0.004,27,0.004,150,0.38,151,0.946,235,5.26,271,4.311,282,0.608,346,1.218,351,4.537,424,0.63,427,0.781,435,1.214,449,1.345,534,1.602,537,1.451,538,2.057,539,1.938,541,2.193,542,1.199,543,2.193,591,3.768,595,4.549,600,5.342,601,4.858,602,4.303]],["title/classes/CreateDeviseDto.html",[21,0.309,603,3.174]],["body/classes/CreateDeviseDto.html",[3,0.058,4,0.051,5,0.051,7,0.222,10,0.826,11,0.006,12,0.395,15,0.778,16,0.108,20,0.058,21,0.467,26,0.004,27,0.004,130,1.305,150,0.358,197,5.217,206,5.217,333,3.168,424,0.624,427,0.776,436,4.638,438,2.26,468,3.595,469,3.473,535,4.056,536,5.317,559,2.3,597,4.192,603,4.806,604,8.128,605,4.391,606,5.781,607,4.475,608,5.217,609,5.217,610,5.838,611,7.521,612,5.838,613,7.521,614,5.217,615,5.217,616,6.721,617,3.767,618,5.838,619,5.838,620,5.838,621,5.838,622,2.852,623,4.808,624,4.808,625,4.259]],["title/classes/CreateDeviseDto-1.html",[21,0.258,295,1.47,603,2.658]],["body/classes/CreateDeviseDto-1.html",[3,0.053,4,0.047,5,0.047,7,0.204,10,0.833,11,0.006,12,0.398,15,0.826,16,0.099,20,0.053,21,0.334,26,0.004,27,0.004,130,1.238,150,0.392,151,0.723,282,0.556,415,1.594,424,0.576,427,0.736,435,1.253,534,1.654,535,3.742,536,5.113,537,1.538,538,1.572,539,1.481,542,1.13,559,2.212,603,4.559,605,4.223,606,5.56,607,5.069,609,4.814,614,4.814,615,4.814,626,2.859,627,1.589,628,5.386,629,1.375,630,1.596,631,1.644,632,5.386]],["title/classes/CreateDisponibiliteDto.html",[21,0.309,633,3.174]],["body/classes/CreateDisponibiliteDto.html",[3,0.04,4,0.036,5,0.036,7,0.155,10,0.786,11,0.006,12,0.375,15,0.762,16,0.109,20,0.04,21,0.366,26,0.003,27,0.003,150,0.34,151,0.766,203,3.628,229,3.341,245,3.754,255,2.466,282,0.421,295,2.082,346,0.948,386,4.659,400,6.434,424,0.437,427,0.608,430,5.558,435,1.185,436,4.234,438,1.581,439,3.895,449,0.948,538,1.667,539,1.223,542,1.397,546,2.838,597,2.811,617,3.462,633,3.765,634,7.699,635,4.256,636,4.256,637,4.596,638,4.596,639,6.177,640,6.177,641,5.892,642,5.52,643,4.085,644,8.819,645,8.819,646,5.635,647,7.263,648,4.085,649,5.892,650,4.085,651,4.085,652,4.298,653,4.085,654,4.085,655,5.265,656,2.811,657,4.085,658,4.085,659,5.892,660,5.692,661,7.566,662,5.892,663,4.085,664,5.892,665,5.331,666,4.085,667,3.628,668,3.364,669,4.085,670,3.15,671,7.566]],["title/classes/CreateDisponibiliteDto-1.html",[21,0.258,295,1.47,633,2.658]],["body/classes/CreateDisponibiliteDto-1.html",[3,0.056,4,0.049,5,0.049,7,0.214,10,0.816,11,0.006,12,0.39,15,0.831,16,0.104,20,0.056,21,0.351,26,0.004,27,0.004,130,1.278,150,0.388,151,0.746,282,0.583,415,1.624,424,0.604,427,0.76,435,1.238,534,1.634,537,1.506,538,1.623,539,1.529,542,1.167,546,3.926,626,2.826,627,1.627,629,1.419,630,1.647,631,1.697,633,4.705,635,5.045,636,5.045,638,5.448,672,5.651,673,5.651,674,5.651,675,5.651]],["title/classes/CreateDossierMedicalDto.html",[21,0.309,676,4.092]],["body/classes/CreateDossierMedicalDto.html",[3,0.055,4,0.049,5,0.049,7,0.211,10,0.811,11,0.006,12,0.387,15,0.822,16,0.103,20,0.055,21,0.346,26,0.004,27,0.004,130,1.266,150,0.387,151,0.739,282,0.574,415,1.778,424,0.595,427,0.752,435,1.233,534,1.627,537,1.498,538,1.607,539,1.514,542,1.367,549,4.295,626,2.813,627,1.615,629,1.406,630,1.93,631,1.681,676,6.008,677,6.274,678,6.274,679,6.274,680,5.569,681,5.569,682,5.569,683,5.569]],["title/classes/CreateLogDto.html",[21,0.309,684,4.092]],["body/classes/CreateLogDto.html",[3,0.059,4,0.052,5,0.052,7,0.226,10,0.789,11,0.006,12,0.377,15,0.819,16,0.109,20,0.059,21,0.369,26,0.004,27,0.004,130,1.32,150,0.381,151,0.771,171,5.168,282,0.613,415,1.655,424,0.635,427,0.785,435,1.217,534,1.606,537,1.456,538,1.676,539,1.58,542,1.205,552,4.584,626,2.778,627,1.666,629,1.466,630,1.701,631,1.753,684,6.266,685,4.688,686,5.943,687,5.943,688,5.943]],["title/classes/CreateMedecinSousServiceDto.html",[21,0.309,689,3.304]],["body/classes/CreateMedecinSousServiceDto.html",[3,0.066,4,0.058,5,0.058,7,0.252,10,0.623,11,0.006,12,0.298,15,0.681,16,0.122,20,0.066,21,0.412,26,0.005,27,0.005,130,1.414,150,0.332,151,0.825,282,0.684,415,1.721,424,0.709,427,0.84,435,1.121,534,1.479,537,1.15,538,1.795,539,1.692,542,1.291,555,5.113,626,2.558,627,1.752,629,1.57,630,1.822,631,1.877,689,5.418,690,5.924]],["title/classes/CreateMedecinSousServiceDto-1.html",[21,0.258,295,1.47,689,2.766]],["body/classes/CreateMedecinSousServiceDto-1.html",[3,0.065,4,0.057,5,0.057,7,0.249,10,0.762,11,0.006,12,0.364,16,0.121,20,0.065,21,0.503,26,0.005,27,0.005,96,4.638,100,5.062,150,0.33,346,1.476,424,0.703,427,0.836,436,4.638,438,2.544,667,5.411,689,5.389,691,6.105,692,7.853,693,5.413,694,5.844,695,5.615,696,8.105,697,5.873,698,5.873]],["title/classes/CreateModePaiementDto.html",[21,0.309,699,3.304]],["body/classes/CreateModePaiementDto.html",[3,0.057,4,0.05,5,0.05,7,0.218,10,0.777,11,0.006,12,0.371,15,0.815,16,0.106,20,0.057,21,0.357,26,0.004,27,0.004,130,1.516,150,0.377,151,0.885,282,0.593,415,1.635,424,0.615,427,0.768,435,1.202,534,1.586,537,1.434,538,1.925,539,1.814,542,1.18,558,4.435,559,2.284,626,2.743,627,1.64,629,1.684,630,1.666,631,2.013,699,4.953,700,5.494,701,5.75,702,5.75,703,5.75]],["title/classes/CreateModePaiementDto-1.html",[21,0.258,295,1.47,699,2.766]],["body/classes/CreateModePaiementDto-1.html",[3,0.059,4,0.052,5,0.052,7,0.226,10,0.716,11,0.006,12,0.342,15,0.782,16,0.14,20,0.059,21,0.473,26,0.004,27,0.004,116,5.636,150,0.342,151,0.772,229,2.791,245,2.397,255,3.19,282,0.615,424,0.637,427,0.786,435,1.156,436,4.022,438,2.307,439,3.552,537,1.034,538,1.679,539,1.237,542,1.207,559,2.323,597,3.636,617,3.817,699,5.068,700,5.587,704,5.838,705,7.509,706,5.325,707,4.869,708,4.596,709,5.959,710,3.329,711,4.257,712,3.916,713,7.621,714,5.959,715,5.959,716,5.325]],["title/classes/CreateOrdonnanceDto.html",[21,0.309,717,4.092]],["body/classes/CreateOrdonnanceDto.html",[3,0.062,4,0.055,5,0.055,7,0.238,10,0.74,11,0.006,12,0.353,15,0.792,16,0.115,20,0.062,21,0.389,26,0.004,27,0.004,130,1.366,150,0.367,151,0.797,282,0.646,415,1.688,424,0.67,427,0.812,435,1.183,516,6.275,534,1.562,537,1.366,538,1.734,539,1.634,542,1.246,563,4.834,626,2.7,627,1.708,629,1.517,630,1.76,631,1.813,717,6.481,718,6.268,719,6.268]],["title/classes/CreatePaiementDto.html",[21,0.309,720,3.452]],["body/classes/CreatePaiementDto.html",[3,0.055,4,0.049,5,0.049,7,0.212,10,0.813,11,0.006,12,0.388,15,0.811,16,0.103,20,0.055,21,0.348,26,0.004,27,0.004,130,1.27,150,0.387,151,0.741,282,0.577,346,1.391,415,1.618,424,0.598,427,0.755,435,1.235,534,1.629,537,1.501,538,1.612,539,1.519,542,1.37,566,3.721,626,2.817,627,1.619,629,1.41,630,1.636,631,1.686,720,5.084,721,5.665,722,4.303,723,5.949,724,5.596,725,5.596,726,4.675,727,4.609,728,5.001]],["title/classes/CreatePaiementDto-1.html",[21,0.258,295,1.47,720,2.89]],["body/classes/CreatePaiementDto-1.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.843,11,0.006,12,0.403,15,0.651,16,0.114,20,0.061,21,0.484,26,0.004,27,0.004,150,0.365,151,0.789,346,1.519,424,0.659,427,0.803,438,2.387,452,7.779,566,4.101,567,6.228,597,3.716,617,3.901,720,5.411,721,5.932,722,4.506,727,5.079,728,5.511,729,7.617,730,6.585,731,5.511,732,6.167,733,6.167,734,6.167,735,6.961]],["title/classes/CreatePaiementNabooDto.html",[21,0.309,736,3.625]],["body/classes/CreatePaiementNabooDto.html",[3,0.062,4,0.054,5,0.054,7,0.236,10,0.736,11,0.006,12,0.351,16,0.144,20,0.062,21,0.486,26,0.004,27,0.004,116,4.821,150,0.319,229,3.294,245,3.149,255,3.277,282,0.641,346,1.447,386,4.821,424,0.665,427,0.807,435,1.179,438,2.406,449,1.447,567,6.252,667,5.277,710,4.373,712,4.622,729,7.058,730,6.61,736,5.711,737,5.556,738,6.217,739,6.217,740,5.556,741,6.217,742,3.972]],["title/classes/CreatePrivilegeDto.html",[21,0.309,743,3.174]],["body/classes/CreatePrivilegeDto.html",[3,0.062,4,0.055,5,0.055,7,0.238,10,0.74,11,0.006,12,0.353,15,0.792,16,0.115,20,0.062,21,0.389,26,0.004,27,0.004,130,1.366,150,0.367,151,0.797,282,0.646,415,1.688,424,0.67,427,0.812,435,1.183,445,4.005,534,1.562,537,1.366,538,1.734,539,1.634,542,1.246,559,2.378,572,5.601,626,2.7,627,1.708,629,1.517,630,1.76,631,1.813,743,5.028,744,6.268]],["title/classes/CreatePrivilegeDto-1.html",[21,0.258,295,1.47,743,2.658]],["body/classes/CreatePrivilegeDto-1.html",[3,0.06,4,0.053,5,0.053,7,0.231,10,0.572,11,0.006,12,0.273,15,0.645,16,0.142,20,0.06,21,0.48,26,0.004,27,0.004,150,0.248,167,6.902,175,4.756,204,4.449,227,4.16,229,2.829,245,2.448,255,3.233,282,0.628,424,0.651,427,0.797,435,1.063,436,4.076,438,2.355,439,3.6,445,3.888,451,5.438,453,5.366,502,5.438,559,2.345,597,3.684,646,4.935,710,3.399,711,5.258,743,4.935,745,6.902,746,6.085,747,6.902,748,5.935,749,6.085,750,5.366,751,6.361,752,6.361,753,3.048]],["title/classes/CreateReservationDto.html",[21,0.309,754,3.304]],["body/classes/CreateReservationDto.html",[3,0.059,4,0.052,5,0.052,7,0.226,10,0.789,11,0.006,12,0.377,15,0.819,16,0.109,20,0.059,21,0.369,26,0.004,27,0.004,130,1.32,150,0.381,151,0.771,282,0.613,415,1.655,424,0.635,427,0.785,435,1.217,534,1.606,537,1.456,538,1.676,539,1.58,542,1.205,574,3.797,626,2.778,627,1.666,629,1.466,630,1.701,631,1.753,754,5.059,755,5.58,756,5.58,757,5.943,758,5.943,759,5.943]],["title/classes/CreateReservationDto-1.html",[21,0.258,295,1.47,754,2.766]],["body/classes/CreateReservationDto-1.html",[3,0.047,4,0.041,5,0.041,7,0.18,10,0.825,11,0.006,12,0.394,15,0.733,16,0.121,20,0.047,21,0.407,26,0.004,27,0.004,111,3.657,150,0.373,229,3.447,245,3.528,255,3.384,282,0.489,346,1.3,386,4.979,415,1.587,424,0.507,427,0.675,435,1.237,438,1.836,449,1.3,542,0.751,574,3.03,575,3.657,597,3.577,635,4.617,636,4.617,637,4.986,642,5.898,647,5.392,660,5.392,665,5.049,667,4.617,710,4.901,740,4.238,742,4.79,754,4.353,756,4.986,760,8.035,761,5.47,762,6.547,763,4.742,764,4.742,765,6.547,766,3.906,767,4.742,768,5.85,769,4.238,770,3.906,771,6.7,772,6.987,773,5.392,774,5.392,775,4.742,776,4.742,777,5.85,778,4.238,779,2.21,780,4.238]],["title/classes/CreateServiceDto.html",[21,0.309,781,3.304]],["body/classes/CreateServiceDto.html",[3,0.062,4,0.055,5,0.055,7,0.238,10,0.74,11,0.006,12,0.353,15,0.792,16,0.115,20,0.062,21,0.389,26,0.004,27,0.004,130,1.366,150,0.367,151,0.797,282,0.646,415,1.688,424,0.67,427,0.812,435,1.183,534,1.562,537,1.366,538,1.734,539,1.634,542,1.246,559,2.378,577,4.005,579,5.162,626,2.7,627,1.708,629,1.517,630,1.76,631,1.813,781,5.233,782,6.268]],["title/classes/CreateServiceDto-1.html",[21,0.258,295,1.47,781,2.766]],["body/classes/CreateServiceDto-1.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.732,11,0.006,12,0.35,15,0.773,16,0.143,20,0.061,21,0.484,26,0.004,27,0.004,150,0.347,151,0.789,245,2.48,255,3.26,282,0.636,424,0.659,427,0.803,435,1.174,436,4.111,438,2.387,439,3.63,537,1.07,538,1.716,539,1.28,542,1.234,559,2.36,577,3.94,597,3.716,617,3.901,707,4.976,710,3.445,711,4.351,779,3.63,781,5.179,783,7.63,784,5.411,785,4.101,786,5.079,787,6.167,788,4.756,789,5.511,790,6.167]],["title/classes/CreateSousServiceDto.html",[21,0.309,791,3.304]],["body/classes/CreateSousServiceDto.html",[3,0.062,4,0.055,5,0.055,7,0.238,10,0.74,11,0.006,12,0.353,15,0.792,16,0.115,20,0.062,21,0.389,26,0.004,27,0.004,130,1.366,150,0.367,151,0.797,282,0.646,415,1.688,424,0.67,427,0.812,435,1.183,534,1.562,537,1.366,538,1.734,539,1.634,542,1.246,559,2.378,581,4.834,626,2.7,627,1.708,629,1.517,630,1.76,631,1.813,791,5.233,792,6.268,793,6.268]],["title/classes/CreateSousServiceDto-1.html",[21,0.258,295,1.47,791,2.766]],["body/classes/CreateSousServiceDto-1.html",[3,0.052,4,0.046,5,0.046,7,0.199,10,0.743,11,0.006,12,0.355,15,0.756,16,0.129,20,0.052,21,0.436,26,0.004,27,0.004,96,4.951,150,0.343,151,0.711,229,2.57,245,3.178,255,3.785,282,0.542,295,1.856,346,1.129,424,0.561,427,0.724,435,1.209,436,4.17,438,2.033,439,4.215,449,1.129,507,4.32,538,1.858,539,1.457,542,1.111,559,2.184,577,3.355,579,4.325,597,3.347,617,3.514,667,4.32,707,4.483,710,4.414,711,3.92,779,4.215,784,5.49,785,3.492,786,4.325,788,4.05,791,4.666,794,5.859,795,7.537,796,6.095,797,5.779,798,5.779,799,4.325,800,7.016,801,5.251,802,5.251,803,4.693]],["title/classes/CreateStatutReservationDto.html",[21,0.309,804,3.304]],["body/classes/CreateStatutReservationDto.html",[3,0.062,4,0.055,5,0.055,7,0.238,10,0.74,11,0.006,12,0.353,15,0.792,16,0.115,20,0.062,21,0.389,26,0.004,27,0.004,130,1.366,150,0.367,151,0.797,282,0.646,415,1.688,424,0.67,427,0.812,435,1.183,534,1.562,537,1.366,538,1.734,539,1.634,542,1.246,559,2.378,584,4.834,586,5.601,626,2.7,627,1.708,629,1.517,630,1.76,631,1.813,804,5.233,805,6.268]],["title/classes/CreateStatutReservationDto-1.html",[21,0.258,295,1.47,804,2.766]],["body/classes/CreateStatutReservationDto-1.html",[3,0.065,4,0.058,5,0.058,7,0.251,10,0.621,11,0.006,12,0.297,15,0.68,16,0.15,20,0.065,21,0.505,26,0.005,27,0.005,111,5.135,150,0.269,245,2.659,255,3.404,282,0.682,424,0.707,427,0.839,435,1.119,436,4.292,438,2.559,439,3.791,559,2.435,574,4.223,597,3.88,710,3.693,711,4.544,770,5.444,804,5.409,806,5.651,807,7.269,808,6.61,809,5.907]],["title/classes/CreateTarifDto.html",[21,0.309,810,3.174]],["body/classes/CreateTarifDto.html",[3,0.058,4,0.051,5,0.051,7,0.223,10,0.785,11,0.006,12,0.375,15,0.631,16,0.108,20,0.058,21,0.365,26,0.004,27,0.004,130,1.312,150,0.38,151,0.765,282,0.607,346,1.418,415,1.649,424,0.629,427,0.78,435,1.212,534,1.6,537,1.449,538,1.665,539,1.569,542,1.396,588,4.087,589,5.257,605,4.407,607,5.244,626,2.767,627,1.658,629,1.457,630,1.69,631,1.741,722,4.407,726,4.829,810,4.829,811,5.257,812,5.883]],["title/classes/CreateTarifDto-1.html",[21,0.258,295,1.47,810,2.658]],["body/classes/CreateTarifDto-1.html",[3,0.059,4,0.052,5,0.052,7,0.227,10,0.833,11,0.006,12,0.398,16,0.11,20,0.059,21,0.474,26,0.004,27,0.004,130,1.325,150,0.361,346,1.507,424,0.639,427,0.787,436,4.678,438,2.313,452,7.301,468,3.679,469,3.554,588,4.151,605,4.678,607,4.542,608,5.339,616,6.822,617,3.823,622,2.919,623,4.921,695,5.375,722,4.44,735,6.822,810,4.877,811,5.339,813,8.186,814,6.929,815,5.974,816,7.634,817,5.974,818,5.974,819,5.974]],["title/classes/CreateUtilisateurDto.html",[21,0.309,820,3.304]],["body/classes/CreateUtilisateurDto.html",[3,0.047,4,0.042,5,0.042,7,0.182,10,0.848,11,0.006,12,0.405,15,0.844,16,0.088,20,0.047,21,0.298,26,0.004,27,0.004,130,1.409,150,0.396,151,0.822,282,0.494,300,4.485,351,4.091,415,1.519,424,0.512,427,0.68,435,1.263,534,1.667,537,1.565,538,1.789,539,1.686,542,1.044,591,3.061,600,4.817,602,3.495,626,2.883,627,1.497,629,1.565,630,1.474,631,1.871,820,4.385,821,4.817,822,4.817,823,4.817,824,4.791,825,4.791,826,4.791,827,4.791,828,4.791,829,4.282]],["title/classes/CreateUtilisateurDto-1.html",[21,0.258,295,1.47,820,2.766]],["body/classes/CreateUtilisateurDto-1.html",[3,0.045,4,0.039,5,0.039,7,0.171,10,0.833,11,0.006,12,0.398,15,0.8,16,0.116,20,0.045,21,0.393,26,0.004,27,0.004,150,0.368,151,0.64,227,2.946,229,2.315,240,4.871,255,1.887,282,0.465,295,1.594,300,4.343,346,1.017,351,3.961,424,0.482,427,0.652,430,5.742,435,1.245,436,4.679,437,3.714,438,1.745,439,4.025,442,4.03,446,5.071,537,0.783,538,1.393,539,0.936,542,1.156,591,2.881,593,3.714,595,3.478,596,4.612,597,3.774,599,4.03,600,4.664,601,3.714,602,3.29,617,3.166,622,3.089,646,4.039,668,3.714,707,4.039,750,4.392,785,2.999,820,4.204,821,4.664,822,4.664,830,8.087,831,5.207,832,4.03,833,4.509,834,4.509,835,4.509,836,4.509,837,4.509,838,4.509,839,4.509,840,4.876,841,5.207,842,5.649,843,6.321,844,5.649,845,5.649,846,5.649,847,5.207,848,5.649,849,4.509,850,4.03,851,3.714,852,3.714,853,4.03,854,4.509,855,4.03,856,3.29,857,4.509]],["title/classes/Devise.html",[21,0.309,858,3.059]],["body/classes/Devise.html",[3,0.043,4,0.038,5,0.038,7,0.167,10,0.859,11,0.006,12,0.41,15,0.819,16,0.114,20,0.043,21,0.273,26,0.004,27,0.004,130,1.357,150,0.399,151,0.628,282,0.453,346,0.998,415,1.769,424,0.469,427,0.64,435,1.274,449,1.157,534,1.682,536,4.596,537,1.586,538,1.366,539,1.288,541,1.797,542,1.424,543,1.797,559,1.988,605,3.796,606,4.997,607,4.651,627,1.428,629,1.195,630,1.914,631,1.429,858,3.819,859,3.922,860,2.683,861,4.997,862,2.683,863,4.389,864,4.389,865,4.389,866,4.389,867,4.389,868,4.389,869,4.389,870,5.269,871,3.963,872,4.389,873,4.389,874,3.922]],["title/controllers/DeviseController.html",[0,1.82,70,3.832]],["body/controllers/DeviseController.html",[0,1.28,2,1.303,3,0.035,4,0.03,5,0.03,7,0.133,8,1.522,10,0.743,11,0.006,12,0.355,14,2.289,15,0.756,16,0.139,17,0.77,20,0.035,21,0.217,22,1.592,23,1.235,24,2.363,26,0.003,27,0.003,55,4.384,70,4.051,148,2.214,149,2.214,150,0.306,151,0.762,204,5.528,215,1.844,240,4.321,265,2.85,266,2.772,279,1.844,280,4.722,282,0.36,286,4.552,449,1.455,603,4.484,622,3.429,626,1.097,656,3.348,858,5.91,875,3.123,876,6.723,877,4.051,878,2.072,879,3.506,880,2.937,881,3.493,882,2.393,883,2.695,884,3.123,885,5.78,886,5.78,887,3.76,888,5.413,889,3.495,890,2.079,891,2.695,892,3.808,893,3.495,894,4.288,895,2.695,896,2.695,897,4.042,898,3.495,899,3.125,900,2.428,901,4.858,902,4.875,903,3.495,904,2.324,905,2.428,906,3.495,907,1.592,908,4.666,909,2.878,910,4.875,911,3.495,912,2.013,913,1.896,914,3.495,915,4.326,916,1.134,917,3.495,918,3.495,919,2.324,920,3.495,921,3.495,922,1.952,923,2.695,924,3.495,925,2.079,926,2.152,927,3.495,928,3.123,929,3.123,930,3.495,931,2.079,932,3.123,933,3.495]],["title/classes/DeviseDto.html",[21,0.309,934,4.092]],["body/classes/DeviseDto.html",[3,0.047,4,0.041,5,0.041,7,0.179,10,0.86,11,0.006,12,0.411,15,0.826,16,0.087,20,0.047,21,0.293,26,0.004,27,0.004,130,1.131,150,0.399,282,0.486,346,1.049,415,1.792,424,0.504,427,0.672,435,1.278,449,1.202,534,1.686,536,4.775,537,1.588,541,1.889,542,1.449,543,1.889,559,2.066,605,3.944,606,5.192,607,4.797,627,1.484,629,1.256,630,1.958,631,1.502,860,2.787,862,2.787,934,5.369,935,4.212,936,4.713,937,4.713,938,4.713,939,4.713,940,4.713,941,4.713,942,4.713,943,4.713]],["title/injectables/DeviseService.html",[55,3.452,132,1.128]],["body/injectables/DeviseService.html",[3,0.027,4,0.024,5,0.024,7,0.105,8,1.274,11,0.006,12,0.339,14,2.086,16,0.125,17,0.612,20,0.027,21,0.172,23,1.554,24,2.34,26,0.003,27,0.003,55,3.056,59,2.451,76,1.212,130,1.078,132,0.998,133,1.017,148,2.12,149,2.12,150,0.293,151,0.729,159,2.92,193,3.489,195,3.146,199,1.507,204,4.754,207,1.427,217,3.678,233,3.435,240,4.169,253,3.308,310,2.866,321,1.186,339,2.004,341,1.804,346,1.378,360,3.685,373,2.004,374,2.286,386,3.363,395,1.652,407,3.111,411,1.427,413,3.111,415,0.519,421,3.21,449,1.354,530,2.482,536,3.489,539,1.134,559,0.768,603,4.325,605,4.129,606,1.929,622,2.668,623,2.287,626,0.872,627,0.551,656,2.605,858,5.8,876,6.05,877,3.392,878,1.735,879,2.895,880,2.6,881,2.925,882,2.004,883,3.392,885,5.576,886,5.931,887,3.591,888,5.554,892,2.963,895,3.392,897,2.533,899,2.617,901,3.578,902,5.003,904,2.925,907,2.004,908,5.203,910,3.056,915,3.622,916,0.901,944,2.482,945,2.777,946,2.777,947,4.398,948,2.777,949,3.93,950,4.88,951,2.777,952,2.777,953,3.93,954,2.777,955,2.777,956,3.622,957,1.599,958,2.026,959,4.398,960,3.93,961,4.398,962,2.777,963,2.026,964,1.774,965,3.93,966,4.88,967,4.398,968,4.398,969,2.777,970,2.777,971,2.777,972,2.777,973,2.142,974,4.398,975,2.777,976,2.777,977,2.287,978,2.777,979,2.142,980,2.777,981,1.652,982,5.461,983,2.777,984,4.398,985,2.777,986,2.142,987,2.777,988,2.777,989,2.777]],["title/classes/Disponibilite.html",[21,0.309,990,3.452]],["body/classes/Disponibilite.html",[3,0.043,4,0.038,5,0.038,7,0.167,10,0.859,11,0.006,12,0.41,15,0.819,16,0.114,20,0.043,21,0.273,26,0.004,27,0.004,130,1.076,150,0.399,151,0.628,282,0.453,346,1.257,415,1.769,424,0.469,427,0.64,435,1.274,449,1.157,534,1.682,537,1.586,538,1.366,539,1.288,541,2.265,542,1.467,543,2.265,627,1.428,629,1.195,630,1.914,631,1.429,635,4.429,636,4.429,637,4.783,638,4.783,860,2.683,862,2.683,990,4.309,991,3.922,992,5.534,993,4.389,994,4.389,995,4.389,996,4.389,997,4.389,998,4.389,999,4.389,1000,4.389,1001,4.389,1002,3.385]],["title/controllers/DisponibiliteController.html",[0,1.82,69,3.625]],["body/controllers/DisponibiliteController.html",[0,1.678,2,1.709,3,0.045,4,0.04,5,0.04,7,0.174,8,1.852,10,0.749,11,0.006,12,0.358,14,2.308,15,0.725,16,0.16,17,1.009,20,0.045,21,0.284,22,2.088,23,1.619,24,2.382,26,0.004,27,0.004,56,4.895,69,4.663,148,2.167,149,2.167,150,0.3,151,0.746,160,3.373,188,3.885,192,2.559,198,2.185,204,4.588,215,2.418,265,3.468,266,2.418,267,2.559,277,3.285,278,2.486,279,2.418,280,4.826,282,0.472,286,4.588,292,2.559,449,1.281,622,3.123,626,1.438,633,5.09,652,4.663,670,6.144,694,4.25,878,2.522,879,2.135,880,3.334,881,4.25,887,3.551,890,2.726,892,3.468,894,3.468,900,3.183,901,4.999,902,5.534,904,3.046,905,3.183,912,2.639,913,2.486,916,1.487,919,3.046,922,2.559,923,3.534,1003,4.094,1004,3.534,1005,6.392,1006,4.094,1007,4.581,1008,7.119,1009,4.581,1010,4.581,1011,4.581,1012,4.581,1013,5.264,1014,4.581,1015,4.094,1016,5.264,1017,3.046,1018,2.639,1019,4.581,1020,4.581,1021,4.581,1022,4.581,1023,4.581,1024,4.581,1025,4.581,1026,4.581]],["title/classes/DisponibiliteDto.html",[21,0.309,1027,4.092]],["body/classes/DisponibiliteDto.html",[3,0.049,4,0.043,5,0.043,7,0.186,10,0.853,11,0.006,12,0.407,15,0.83,16,0.09,20,0.049,21,0.305,26,0.004,27,0.004,130,1.163,150,0.397,282,0.506,346,1.078,415,1.803,424,0.524,427,0.691,435,1.27,449,1.227,534,1.677,537,1.574,541,1.941,542,1.463,543,1.941,627,1.515,629,1.291,630,1.982,631,1.543,635,4.699,636,4.699,638,5.074,860,2.846,862,2.846,1027,5.518,1028,4.382,1029,4.904,1030,4.904,1031,4.904,1032,4.904,1033,4.904,1034,4.904,1035,4.904]],["title/modules/DisponibiliteModule.html",[28,1.696,41,3.625]],["body/modules/DisponibiliteModule.html",[2,2.981,3,0.064,4,0.056,5,0.056,11,0.006,16,0.168,17,1.416,20,0.064,21,0.399,26,0.005,27,0.005,28,2.97,30,2.928,31,2.928,32,3.065,33,3.065,34,2.928,35,4.15,36,3.065,41,7.135,56,6.346,65,3.812,66,3.065,67,2.995,69,6.346,310,3.626,321,2.745,1015,5.742,1036,6.425,1037,6.425,1038,6.425,1039,6.425]],["title/injectables/DisponibiliteService.html",[56,3.304,132,1.128]],["body/injectables/DisponibiliteService.html",[3,0.024,4,0.021,5,0.021,7,0.093,8,1.153,11,0.006,12,0.347,14,2.165,15,0.483,16,0.117,17,0.54,20,0.024,21,0.152,23,1.406,24,1.901,26,0.002,27,0.002,56,2.646,59,2.281,76,1.069,100,1.412,130,1.341,132,0.903,133,0.898,148,2.112,149,2.112,150,0.292,151,0.727,159,3.389,195,1.412,199,2.159,204,4.573,207,1.26,217,3.267,229,1.84,233,2.758,240,2.45,241,3.556,253,2.825,255,1.666,310,2.726,321,1.047,333,2.159,339,3.701,341,1.632,346,1.095,360,3.129,366,1.228,370,3.069,373,2.897,374,3.003,386,3.56,400,1.788,407,1.228,411,1.26,413,1.993,415,1.189,421,1.093,449,1.095,525,2.45,622,1.944,626,0.77,630,0.548,633,4.062,635,3.093,636,3.093,637,3.845,638,3.845,639,2.19,640,2.19,642,2.903,652,3.665,655,2.19,656,1.898,665,1.891,670,6.265,694,2.646,748,1.63,751,2.019,840,1.891,856,1.788,878,1.57,880,2.42,887,3.332,892,3.137,901,3.662,902,4.017,916,0.795,950,5.167,953,3.556,957,1.412,958,2.903,963,3.665,964,2.543,966,2.19,973,1.891,977,3.277,979,1.891,981,1.458,990,4.417,1004,1.891,1008,5.682,1013,2.019,1016,3.277,1017,1.63,1040,2.19,1041,3.979,1042,3.979,1043,3.979,1044,3.979,1045,5.023,1046,3.979,1047,2.451,1048,3.979,1049,3.44,1050,2.451,1051,3.556,1052,3.979,1053,2.451,1054,3.979,1055,2.451,1056,6.358,1057,6.81,1058,2.451,1059,2.451,1060,2.19,1061,2.451,1062,2.451,1063,2.451,1064,3.277,1065,2.451,1066,3.979,1067,7.174,1068,5.023,1069,2.451,1070,2.451,1071,2.451,1072,5.023,1073,2.451,1074,2.451,1075,2.451,1076,2.451,1077,2.019,1078,2.451,1079,1.891,1080,1.788,1081,2.451,1082,2.451,1083,2.223,1084,1.788,1085,1.458,1086,1.369,1087,2.451,1088,2.451,1089,2.019,1090,1.566,1091,1.566,1092,1.891,1093,2.451,1094,2.451,1095,2.451,1096,2.451,1097,2.451,1098,2.451,1099,2.451,1100,2.451,1101,5.023,1102,2.451,1103,2.451,1104,2.451,1105,2.451,1106,2.451,1107,2.451,1108,2.19,1109,3.979,1110,2.451,1111,3.979,1112,2.451,1113,2.19,1114,2.451,1115,2.451,1116,2.019,1117,2.451,1118,2.451,1119,2.451,1120,2.451,1121,2.451,1122,2.451,1123,2.451,1124,2.451,1125,3.556,1126,3.979,1127,2.451,1128,2.451,1129,2.451,1130,2.765,1131,3.556,1132,2.451,1133,3.979,1134,3.979,1135,3.979,1136,3.979,1137,6.358,1138,2.451,1139,3.979,1140,2.451,1141,2.451,1142,2.451,1143,2.19,1144,2.451,1145,2.451,1146,3.979,1147,2.451,1148,3.979,1149,2.451,1150,2.451]],["title/classes/DossierMedical.html",[21,0.309,1151,3.832]],["body/classes/DossierMedical.html",[3,0.043,4,0.038,5,0.038,7,0.165,10,0.857,11,0.006,12,0.409,15,0.81,16,0.113,20,0.043,21,0.269,26,0.004,27,0.004,130,1.068,150,0.398,151,0.623,239,4.113,282,0.448,346,1.251,415,1.814,424,0.464,427,0.635,435,1.271,449,1.15,534,1.678,537,1.582,538,1.355,539,1.277,541,2.253,542,1.495,543,2.253,627,1.419,629,1.186,630,2.004,631,1.417,677,5.513,678,5.513,679,5.513,860,2.666,862,2.666,1151,4.745,1152,3.878,1153,6.388,1154,6.388,1155,4.339,1156,4.339,1157,4.339,1158,4.339,1159,4.339,1160,4.339,1161,4.339,1162,4.339,1163,4.339,1164,3.015]],["title/classes/DossierMedicalDto.html",[21,0.309,1165,4.092]],["body/classes/DossierMedicalDto.html",[3,0.048,4,0.042,5,0.042,7,0.184,10,0.85,11,0.006,12,0.406,15,0.822,16,0.089,20,0.048,21,0.301,26,0.004,27,0.004,130,1.153,150,0.397,282,0.499,346,1.068,415,1.841,424,0.518,427,0.685,435,1.267,449,1.219,534,1.672,537,1.569,541,1.924,542,1.497,543,1.924,627,1.505,629,1.28,630,2.059,631,1.53,677,5.847,678,5.847,679,5.847,860,2.827,862,2.827,1165,5.47,1166,4.327,1167,4.842,1168,4.842,1169,4.842,1170,4.842,1171,4.842,1172,4.842,1173,4.842]],["title/injectables/ExceptionService.html",[132,1.128,1174,3.452]],["body/injectables/ExceptionService.html",[3,0.042,4,0.037,5,0.037,7,0.159,8,1.74,11,0.006,12,0.39,14,2.443,15,0.802,16,0.129,17,0.925,20,0.042,21,0.373,22,1.912,23,1.483,24,2.424,26,0.003,27,0.003,132,1.364,133,1.537,145,3.061,148,2.556,149,2.556,150,0.353,151,0.88,159,3.265,185,4.895,189,3.237,202,3.237,229,1.537,310,2.91,339,3.197,341,1.722,373,1.912,374,3.393,438,1.624,494,2.916,646,4.483,1092,3.237,1174,4.174,1175,3.75,1176,6.008,1177,6.008,1178,6.008,1179,6.008,1180,6.008,1181,6.008,1182,4.196,1183,4.196,1184,6.008,1185,6.008,1186,4.196,1187,4.196,1188,6.008,1189,4.196,1190,9.043,1191,6.008,1192,4.196,1193,6.008,1194,4.196,1195,6.008,1196,7.761,1197,4.196,1198,4.634,1199,6.008,1200,4.196,1201,4.196,1202,4.196,1203,3.75,1204,3.75,1205,3.75,1206,3.456,1207,3.75,1208,3.75,1209,3.75,1210,3.75,1211,3.75,1212,7.661,1213,4.196,1214,4.196,1215,7.661,1216,4.196,1217,4.196,1218,4.196,1219,4.196,1220,4.196,1221,4.196,1222,4.196,1223,4.196,1224,4.196,1225,4.196,1226,4.196,1227,4.196,1228,4.196,1229,4.196]],["title/interfaces/FileStorageService.html",[478,2.956,1230,3.059]],["body/interfaces/FileStorageService.html",[3,0.058,4,0.051,5,0.073,7,0.223,8,2.186,11,0.006,12,0.374,14,2.417,15,0.823,20,0.083,26,0.004,27,0.004,148,2.455,149,2.455,150,0.339,151,0.845,159,2.271,419,5.957,449,0.944,457,6.215,458,6.434,459,6.434,464,4.833,465,5.209,466,6.802,470,5.82,473,4.833,478,4.489,479,3.902,507,3.613,1230,4.647,1231,4.281,1232,4.526,1233,6.215,1234,5.868,1235,5.244,1236,5.868,1237,4.647,1238,5.868,1239,4.526,1240,4.526]],["title/interfaces/FileUploadResult.html",[479,3.304,1230,3.059]],["body/interfaces/FileUploadResult.html",[3,0.065,4,0.058,5,0.071,7,0.251,11,0.006,15,0.828,20,0.087,26,0.005,27,0.005,150,0.331,159,2.559,419,5.629,427,0.839,449,1.479,458,5.098,459,5.098,465,4.544,466,5.934,470,5.098,478,3.933,479,5.409,507,5.661,1230,5.008,1231,4.822,1232,5.098,1233,5.444,1239,5.098,1240,5.098]],["title/classes/FindPrivilegeDto.html",[21,0.309,1241,4.092]],["body/classes/FindPrivilegeDto.html",[3,0.072,4,0.063,5,0.063,7,0.276,11,0.006,12,0.327,15,0.72,20,0.072,21,0.452,26,0.005,27,0.005,150,0.296,151,0.873,424,0.778,427,0.889,445,4.651,559,2.539,1241,7.101,1242,7.705,1243,7.28]],["title/classes/FindUtilisateurDto.html",[21,0.309,1244,4.092]],["body/classes/FindUtilisateurDto.html",[3,0.04,4,0.035,5,0.035,7,0.152,10,0.747,11,0.006,12,0.357,15,0.732,16,0.107,20,0.04,21,0.36,26,0.003,27,0.003,150,0.324,151,0.919,175,3.569,204,4.776,227,3.865,229,3.21,238,2.978,245,3.65,255,2.426,282,0.412,295,2.048,346,0.932,351,4.314,424,0.427,427,0.598,430,5.286,435,1.141,438,1.545,439,3.705,446,4.74,449,0.932,453,5.201,517,4.773,538,1.999,539,1.65,591,2.551,593,3.288,595,3.079,596,4.228,597,3.571,601,3.288,602,2.913,617,4.153,622,4.434,646,5.298,667,3.569,748,5.828,750,6.089,751,6.83,752,6.83,753,2.903,821,5.466,822,4.359,823,5.466,851,4.773,852,4.773,1244,4.773,1245,7.41,1246,5.795,1247,9.074,1248,3.992,1249,3.288,1250,3.288,1251,3.992,1252,3.992,1253,5.795,1254,5.795,1255,3.992,1256,6.823,1257,7.486,1258,3.992,1259,3.992,1260,3.992]],["title/interfaces/IPaiementResult.html",[1230,3.059,1261,3.832]],["body/interfaces/IPaiementResult.html",[3,0.067,4,0.059,5,0.059,7,0.258,11,0.006,15,0.832,20,0.067,26,0.005,27,0.005,111,5.182,150,0.378,346,1.434,427,0.852,722,4.895,1230,4.178,1231,4.951,1261,6.375,1262,6.064,1263,7.155,1264,7.64]],["title/injectables/JwtAuthGuard.html",[132,1.128,198,2.37]],["body/injectables/JwtAuthGuard.html",[3,0.085,4,0.048,5,0.048,7,0.21,8,2.103,11,0.006,12,0.364,14,2.103,16,0.149,17,1.218,20,0.055,21,0.343,22,2.519,23,1.954,24,2.171,26,0.004,27,0.004,132,1.648,133,2.025,144,7.089,148,2.386,149,2.386,150,0.295,151,0.821,152,4.265,198,3.463,208,4.554,210,4.034,211,4.034,277,4.423,310,3.486,318,4.034,321,2.362,324,3.841,333,3,341,2.268,357,4.182,373,2.519,374,2.314,397,5.979,748,3.677,1079,4.265,1083,4.994,1265,7.692,1266,4.554,1267,4.319,1268,6.488,1269,7.26,1270,6.488,1271,5.529,1272,4.941,1273,7.26,1274,5.529,1275,6.488,1276,5.529,1277,4.941,1278,4.554,1279,5.529,1280,5.529,1281,4.941,1282,3.289,1283,4.554]],["title/injectables/JwtStrategy.html",[132,1.128,309,3.625]],["body/injectables/JwtStrategy.html",[3,0.051,4,0.045,5,0.045,7,0.194,8,1.996,11,0.006,12,0.309,14,1.481,16,0.165,17,1.126,20,0.051,21,0.317,23,2.435,24,1.528,26,0.004,27,0.004,59,3.291,76,2.23,83,3.729,130,1.196,132,1.564,133,1.872,148,2.028,149,2.028,150,0.28,151,0.698,159,3.017,188,2.697,207,2.626,217,3.135,233,2.438,242,2.56,254,4.567,276,3.265,308,6.098,309,5.026,318,3.729,320,7.553,322,4.209,327,4.567,339,3.14,341,2.827,357,2.944,360,2.884,362,5.686,366,2.56,373,3.14,374,2.884,375,4.567,376,3.399,402,4.567,411,2.626,413,3.451,449,0.822,1083,4.354,1084,3.729,1086,2.855,1267,4.099,1278,4.209,1284,4.567,1285,6.89,1286,6.89,1287,5.111,1288,6.89,1289,5.111,1290,5.111,1291,5.111,1292,5.111,1293,4.567,1294,5.111,1295,5.111,1296,5.111,1297,5.111,1298,5.111,1299,6.89,1300,5.111,1301,4.567,1302,4.567,1303,5.111,1304,5.111]],["title/classes/Log.html",[21,0.309,90,3.059]],["body/classes/Log.html",[3,0.043,4,0.038,5,0.038,7,0.165,10,0.857,11,0.006,12,0.409,15,0.81,16,0.113,20,0.043,21,0.269,26,0.004,27,0.004,90,3.788,130,1.068,150,0.398,151,0.623,171,4.402,239,4.488,282,0.448,346,1.251,415,1.814,424,0.464,427,0.635,435,1.271,449,1.15,534,1.678,537,1.582,538,1.355,539,1.277,541,2.253,542,1.495,543,2.253,627,1.419,629,1.186,630,2.004,631,1.417,685,3.993,860,2.666,862,2.666,1164,3.015,1305,3.878,1306,5.887,1307,4.966,1308,4.339,1309,4.339,1310,4.339,1311,4.339,1312,4.339,1313,4.339,1314,4.339,1315,4.339,1316,4.339]],["title/controllers/LogController.html",[0,1.82,1317,3.832]],["body/controllers/LogController.html",[0,1.923,2,1.958,3,0.052,4,0.046,5,0.046,7,0.199,8,2.033,10,0.66,11,0.006,12,0.315,14,2.033,15,0.66,16,0.155,17,1.157,20,0.052,21,0.326,22,2.393,23,1.856,24,2.098,26,0.004,27,0.004,90,4.32,148,2.065,149,2.065,150,0.214,151,0.711,160,3.703,188,4.638,192,2.933,198,2.505,215,2.771,217,3.637,229,2.57,233,3.347,238,3.605,242,2.63,267,2.933,277,3.605,278,2.849,279,2.771,280,4.551,282,0.542,286,4.041,292,2.933,360,2.937,449,1.357,622,3.428,753,4.224,880,2.937,881,4.666,887,3.127,900,3.648,901,4.041,904,3.492,905,3.648,913,2.849,922,2.933,923,4.05,1018,3.025,1051,7.537,1317,5.412,1318,4.693,1319,6.508,1320,4.325,1321,4.32,1322,4.483,1323,5.251,1324,5.251,1325,5.254,1326,4.693,1327,5.251,1328,3.124,1329,5.251,1330,4.325,1331,5.251,1332,5.251]],["title/classes/LogDto.html",[21,0.309,1333,4.092]],["body/classes/LogDto.html",[3,0.048,4,0.042,5,0.042,7,0.184,10,0.85,11,0.006,12,0.406,15,0.822,16,0.089,20,0.048,21,0.301,26,0.004,27,0.004,130,1.153,150,0.397,171,4.668,282,0.499,346,1.068,415,1.841,424,0.518,427,0.685,435,1.267,449,1.219,534,1.672,537,1.569,541,1.924,542,1.497,543,1.924,627,1.505,629,1.28,630,2.059,631,1.53,685,4.235,860,2.827,862,2.827,1306,6.243,1333,5.47,1334,4.327,1335,4.842,1336,4.842,1337,4.842,1338,4.842,1339,4.842,1340,4.842,1341,4.842]],["title/injectables/LogListener.html",[89,3.452,132,1.128]],["body/injectables/LogListener.html",[3,0.06,4,0.053,5,0.053,7,0.229,8,2.226,10,0.568,11,0.006,12,0.345,14,1.749,15,0.642,16,0.156,17,1.33,20,0.06,21,0.375,22,2.751,23,2.134,26,0.004,27,0.004,86,4.657,87,4.657,89,5.339,91,6.52,132,1.744,133,2.211,148,2.262,149,2.262,150,0.362,151,0.778,171,3.718,217,3.4,341,2.477,346,0.971,360,2.527,362,4.404,685,3.373,1307,4.194,1325,6.247,1342,7.555,1343,5.395,1344,7.685,1345,6.037,1346,6.037,1347,7.685,1348,5.606,1349,7.685,1350,6.037,1351,6.037,1352,6.037,1353,4.972,1354,6.037]],["title/modules/LogModule.html",[28,1.696,42,3.625]],["body/modules/LogModule.html",[2,2.76,3,0.056,4,0.05,5,0.05,11,0.006,16,0.17,17,1.254,20,0.056,21,0.354,26,0.004,27,0.004,28,2.807,30,2.594,31,2.594,32,2.716,33,2.716,34,2.594,35,3.922,36,3.922,42,7.234,46,6.426,65,3.53,66,2.716,67,2.654,74,4.134,77,5.088,89,6.426,90,3.506,91,4.391,92,5.088,227,2.654,310,3.514,321,2.432,1317,6.342,1325,6.56,1326,5.088,1355,5.088,1356,5.088,1357,5.088,1358,5.693,1359,5.693,1360,5.693,1361,5.088,1362,5.088]],["title/injectables/LogService.html",[132,1.128,1325,3.304]],["body/injectables/LogService.html",[3,0.039,4,0.034,5,0.034,7,0.149,8,1.662,11,0.006,12,0.355,14,2.155,15,0.479,16,0.125,17,0.868,20,0.039,21,0.245,23,2.028,24,1.716,26,0.003,27,0.003,59,2.934,76,1.718,90,4.868,132,1.302,133,1.442,148,2.327,149,2.327,150,0.347,151,0.801,159,2.221,170,3.243,171,3.533,189,4.425,193,2.516,195,2.268,204,2.268,207,2.023,217,3.581,227,3.155,231,3.037,233,2.737,238,2.948,310,3.237,321,1.682,333,2.137,334,3.519,339,3.603,341,2.354,346,1.196,357,2.268,360,2.833,362,2.873,373,3.084,374,2.833,376,2.618,385,3.037,411,2.023,413,3.39,421,1.755,449,1.089,525,2.425,622,2.803,627,1.139,629,1.106,685,3.205,748,2.618,753,2.874,779,1.835,856,2.873,880,2.402,881,3.815,887,2.558,892,2.137,904,3.815,957,2.268,981,2.343,1064,3.243,1079,3.037,1080,2.873,1083,4.61,1090,2.516,1091,2.516,1125,3.519,1281,3.519,1282,2.343,1283,3.243,1302,3.519,1306,3.243,1307,3.986,1319,5.575,1321,2.425,1322,2.516,1325,3.815,1348,4.186,1353,3.243,1361,3.519,1362,3.519,1363,3.519,1364,5.738,1365,3.986,1366,3.938,1367,5.738,1368,3.938,1369,5.738,1370,3.938,1371,3.938,1372,5.738,1373,3.938,1374,3.938,1375,3.938,1376,3.938,1377,3.938,1378,3.938,1379,3.938,1380,3.938,1381,3.938,1382,3.938,1383,3.938,1384,3.938,1385,3.938,1386,3.938,1387,3.938,1388,3.243,1389,3.938,1390,3.938,1391,3.938,1392,2.736,1393,3.938,1394,4.726,1395,3.938,1396,5.738,1397,3.938,1398,3.938,1399,3.938,1400,3.938,1401,3.938,1402,3.938,1403,3.938,1404,2.425]],["title/classes/MedecinSousService.html",[21,0.309,992,3.059]],["body/classes/MedecinSousService.html",[3,0.038,4,0.034,5,0.034,7,0.147,10,0.847,11,0.006,12,0.404,15,0.685,16,0.145,20,0.038,21,0.24,26,0.003,27,0.003,100,3.861,130,1.424,150,0.396,151,0.88,239,3.933,282,0.399,346,1.32,415,1.728,424,0.414,427,0.584,435,1.256,449,1.078,534,1.658,537,1.564,538,1.915,539,1.804,541,2.377,542,1.463,543,2.377,627,1.331,629,1.092,630,1.835,631,1.306,694,4.457,695,4.283,860,2.5,862,2.5,871,4.714,990,5.455,992,3.489,1004,5.17,1130,4.657,1164,2.69,1405,3.46,1406,5.005,1407,3.871,1408,3.871,1409,3.871,1410,3.871,1411,3.871,1412,3.871,1413,3.871,1414,4.386,1415,3.871,1416,3.871,1417,3.871,1418,3.188,1419,3.871,1420,2.986]],["title/controllers/MedecinSousServiceController.html",[0,1.82,1421,3.832]],["body/controllers/MedecinSousServiceController.html",[0,1.198,2,1.22,3,0.032,4,0.028,5,0.028,7,0.124,8,1.447,10,0.687,11,0.006,12,0.328,14,2.117,15,0.708,16,0.142,17,0.721,20,0.032,21,0.203,22,1.49,23,1.156,24,2.186,26,0.003,27,0.003,96,5.084,100,3.908,101,5.62,148,1.997,149,1.997,150,0.276,151,0.687,160,3.58,188,4.47,192,3.386,198,1.56,215,1.726,238,4.44,242,3.66,244,6.374,245,3.476,253,3.315,265,2.711,266,2.636,267,1.827,277,2.567,278,1.775,279,1.726,280,4.437,281,5.942,282,0.337,286,4.209,287,5.331,292,4.082,407,3.398,449,1.289,622,2.441,626,1.027,652,6.767,656,2.383,689,4.511,691,5.352,779,4.408,878,1.971,879,2.328,880,2.84,882,2.276,887,2.227,890,1.946,894,4.18,897,2.877,899,2.972,907,1.49,912,1.884,913,1.775,916,1.061,919,2.175,922,1.827,925,1.946,926,2.014,931,1.946,981,2.972,1018,1.884,1089,4.114,1321,3.076,1322,3.192,1328,4.348,1404,3.076,1421,3.853,1422,2.923,1423,2.502,1424,2.636,1425,3.271,1426,7.308,1427,4.996,1428,4.996,1429,3.853,1430,3.853,1431,3.271,1432,3.271,1433,3.644,1434,3.271,1435,3.271,1436,1.638,1437,3.271,1438,4.996,1439,3.271,1440,3.271,1441,1.726,1442,3.271,1443,3.271,1444,2.972,1445,3.271,1446,4.511,1447,3.271,1448,3.853,1449,3.076,1450,3.271,1451,3.471,1452,2.923,1453,3.271,1454,3.322,1455,3.271,1456,2.923,1457,2.923,1458,2.09,1459,2.923,1460,2.923,1461,2.175,1462,2.923]],["title/classes/MedecinSousServiceDto.html",[21,0.309,1463,4.092]],["body/classes/MedecinSousServiceDto.html",[3,0.055,4,0.049,5,0.049,7,0.212,10,0.812,11,0.006,12,0.388,15,0.769,16,0.103,20,0.055,21,0.347,26,0.004,27,0.004,130,1.268,150,0.387,282,0.576,346,1.175,415,1.84,424,0.597,427,0.754,435,1.234,449,1.31,534,1.628,537,1.499,541,2.117,542,1.506,543,2.117,627,1.617,629,1.408,630,2.057,631,1.683,860,3.038,862,3.038,1463,6.017,1464,4.989,1465,5.583,1466,5.583,1467,5.583,1468,5.583]],["title/injectables/MedecinSousServiceService.html",[132,1.128,1451,3.452]],["body/injectables/MedecinSousServiceService.html",[3,0.023,4,0.021,5,0.021,7,0.09,8,1.12,11,0.006,12,0.301,14,1.808,16,0.115,17,0.521,20,0.023,21,0.147,23,1.366,24,1.866,26,0.002,27,0.002,59,2.233,76,1.032,96,4.753,100,4.071,101,5.156,130,1.28,132,0.877,133,0.866,148,1.837,149,1.837,150,0.254,151,0.632,159,3.174,175,3.843,193,1.511,199,1.283,203,4.124,207,2.519,210,2.82,211,2.82,217,3.453,227,2.285,233,2.977,238,3.442,253,2.395,310,2.685,321,1.011,339,1.761,341,1.586,346,1.227,357,4.394,360,3.492,366,2.835,373,3.736,374,3.492,376,3.26,395,1.407,404,3.406,407,2.455,411,1.215,413,1.936,415,0.442,421,2.985,449,1.412,525,2.38,532,1.948,622,1.156,626,0.743,627,1.33,629,1.203,652,6.337,656,1.844,689,3.764,691,4.91,694,2.571,695,2.47,747,4.381,753,2.455,779,4.091,878,1.525,879,1.802,880,2.369,882,1.761,890,2.3,894,3.386,897,1.362,899,2.3,901,1.362,907,1.761,916,0.768,957,3.594,963,3.576,981,1.407,986,1.824,1013,4.037,1049,4.539,1083,3.742,1084,4.13,1085,3.985,1086,3.742,1089,3.184,1116,1.948,1143,2.114,1250,1.948,1321,2.38,1404,1.457,1406,3.261,1423,1.936,1424,2.04,1430,1.824,1436,1.936,1441,2.04,1444,3.368,1446,3.764,1448,1.824,1449,1.457,1451,2.686,1454,1.573,1469,2.114,1470,2.365,1471,2.365,1472,2.365,1473,2.365,1474,2.365,1475,2.365,1476,2.82,1477,1.948,1478,5.661,1479,4.662,1480,4.662,1481,4.902,1482,4.902,1483,5.661,1484,2.365,1485,4.381,1486,2.365,1487,2.114,1488,2.365,1489,2.365,1490,2.365,1491,5.516,1492,5.661,1493,2.365,1494,2.365,1495,1.824,1496,2.365,1497,1.948,1498,2.365,1499,3.866,1500,3.866,1501,3.866,1502,3.866,1503,1.824,1504,3.866,1505,1.824]],["title/modules/MedecinSousserviceModule.html",[28,1.696,43,3.625]],["body/modules/MedecinSousserviceModule.html",[2,3.023,3,0.065,4,0.057,5,0.057,11,0.006,16,0.162,17,1.448,20,0.065,21,0.408,26,0.005,27,0.005,28,3,30,2.995,31,2.995,32,3.135,33,3.135,34,2.995,35,4.192,36,3.135,43,7.001,65,3.866,66,3.135,67,3.063,100,4.668,101,4.795,691,4.566,1421,6.778,1451,6.667,1452,5.873,1506,5.873,1507,5.873,1508,6.572,1509,6.572]],["title/classes/ModePaiement.html",[21,0.309,1510,3.625]],["body/classes/ModePaiement.html",[3,0.046,4,0.041,5,0.041,7,0.177,10,0.841,11,0.006,12,0.402,15,0.81,16,0.119,20,0.046,21,0.29,26,0.004,27,0.004,130,1.515,150,0.394,151,0.656,282,0.481,346,1.041,415,1.788,424,0.499,427,0.668,435,1.255,449,1.196,534,1.657,537,1.553,538,1.426,539,1.344,541,1.875,542,1.445,543,1.875,559,2.055,627,1.476,629,1.547,630,1.952,631,1.85,700,4.943,712,4.334,860,2.772,862,2.772,871,4.136,1510,4.722,1511,4.169,1512,7.433,1513,4.665,1514,4.665,1515,4.665,1516,4.665,1517,4.665,1518,4.665,1519,4.665,1520,4.169]],["title/controllers/ModePaiementController.html",[0,1.82,1521,3.832]],["body/controllers/ModePaiementController.html",[0,1.52,2,1.548,3,0.041,4,0.036,5,0.079,7,0.158,8,1.727,10,0.759,11,0.006,12,0.362,14,2.339,15,0.754,16,0.159,17,0.915,20,0.041,21,0.258,22,1.891,23,1.467,24,2.414,26,0.003,27,0.003,116,4.694,117,6.131,148,2.244,149,2.244,150,0.329,151,0.772,160,2.191,188,3.146,191,2.884,192,2.319,198,1.98,210,3.028,211,3.028,215,2.191,229,1.52,242,2.079,265,3.234,266,3.681,267,2.319,277,3.063,278,2.252,279,2.191,282,0.428,292,4.51,421,3.109,449,1.352,465,4.695,626,1.303,699,5.588,704,5.838,712,3.584,878,2.352,879,1.935,880,3.191,882,2.716,894,4.697,907,1.891,912,2.391,913,2.252,916,1.347,922,2.319,925,2.47,926,2.556,931,2.47,1018,2.391,1237,3.67,1328,2.47,1423,2.985,1424,3.146,1436,2.079,1441,2.191,1458,2.652,1461,2.76,1521,4.598,1522,3.71,1523,3.419,1524,3.419,1525,3.419,1526,4.151,1527,4.151,1528,4.151,1529,4.151,1530,4.151,1531,4.151,1532,4.151,1533,5.069,1534,4.151,1535,4.151,1536,5.379,1537,3.202,1538,3.202,1539,3.028,1540,4.846,1541,3.202,1542,4.909,1543,3.028,1544,4.349,1545,4.151,1546,4.151,1547,5.961,1548,4.598,1549,3.419,1550,4.151,1551,4.151,1552,4.151,1553,4.151,1554,4.151]],["title/classes/ModePaiementDto.html",[21,0.309,1555,4.092]],["body/classes/ModePaiementDto.html",[3,0.05,4,0.044,5,0.044,7,0.191,10,0.84,11,0.006,12,0.401,15,0.819,16,0.093,20,0.05,21,0.313,26,0.004,27,0.004,130,1.439,150,0.394,282,0.519,346,1.097,415,1.811,424,0.538,427,0.703,435,1.256,449,1.244,534,1.658,537,1.55,541,1.975,542,1.472,543,1.975,559,2.138,627,1.535,629,1.598,630,1.997,631,1.91,700,5.142,860,2.884,862,2.884,1555,5.616,1556,4.497,1557,5.033,1558,5.033,1559,5.033,1560,5.033,1561,5.033,1562,5.033]],["title/modules/ModePaiementModule.html",[28,1.696,44,3.625]],["body/modules/ModePaiementModule.html",[2,2.935,3,0.062,4,0.055,5,0.055,11,0.006,16,0.166,17,1.381,20,0.062,21,0.389,26,0.004,27,0.004,28,2.936,30,2.856,31,2.856,32,2.99,33,2.99,34,2.856,35,4.103,36,3.754,44,7.101,52,5.84,65,3.754,66,2.99,67,2.921,74,4.396,93,4.573,116,4.845,117,4.573,704,4.355,1521,6.634,1540,6.589,1541,4.834,1563,5.601,1564,5.601,1565,6.268,1566,6.268,1567,5.601]],["title/injectables/ModePaiementService.html",[132,1.128,1540,3.452]],["body/injectables/ModePaiementService.html",[3,0.031,4,0.027,5,0.073,7,0.117,8,1.386,11,0.006,12,0.353,14,2.182,15,0.258,16,0.139,17,0.681,20,0.031,21,0.192,23,2.068,24,2.13,26,0.003,27,0.003,59,2.598,63,3.37,76,1.348,116,5.24,117,5.92,130,0.536,132,1.086,133,1.132,148,2.217,149,2.217,150,0.307,151,0.763,159,3.141,199,1.677,210,2.255,211,2.255,217,3.747,229,2.877,233,3.398,253,1.51,310,2.984,321,1.32,324,2.147,339,3.432,341,1.962,346,1.34,357,1.78,360,3.562,366,1.548,373,2.666,374,2.756,395,1.839,407,1.548,411,1.588,413,2.395,415,0.578,421,2.608,449,1.305,465,4.207,478,3.918,525,1.903,559,1.322,625,2.255,626,0.97,627,1.308,629,1.128,656,1.474,685,1.726,699,4.379,700,5.008,704,5.638,712,4.28,753,1.548,878,1.887,880,2.756,882,2.179,887,1.378,890,2.845,894,3.865,907,2.179,916,1.003,964,1.975,1049,4.237,1083,2.672,1085,1.839,1086,1.726,1090,1.975,1091,1.975,1237,3.602,1282,1.839,1321,1.903,1365,3.323,1392,2.147,1404,1.903,1423,2.395,1424,2.524,1436,2.395,1441,2.524,1444,1.839,1449,1.903,1491,3.939,1495,2.384,1497,2.545,1503,2.384,1505,2.384,1533,4.379,1540,3.323,1542,3.939,1568,2.762,1569,3.09,1570,3.09,1571,3.09,1572,3.09,1573,3.09,1574,3.09,1575,3.489,1576,3.09,1577,1.903,1578,2.255,1579,2.384,1580,2.384,1581,1.975,1582,2.147,1583,2.147,1584,2.255,1585,2.255,1586,3.09,1587,5.228,1588,4.782,1589,4.782,1590,4.782,1591,3.689,1592,3.939,1593,4.782,1594,3.09,1595,1.903,1596,4.782,1597,3.09,1598,3.09,1599,2.762,1600,2.147,1601,3.09,1602,4.782]],["title/injectables/OptionalJwtAuthGuard.html",[132,1.128,1603,3.832]],["body/injectables/OptionalJwtAuthGuard.html",[3,0.089,4,0.055,5,0.055,7,0.239,8,2.284,11,0.006,12,0.282,14,1.821,16,0.145,17,1.385,20,0.062,21,0.39,24,1.88,26,0.004,27,0.004,132,1.789,133,2.302,144,7.437,148,1.85,149,1.85,150,0.256,151,0.636,152,6.643,170,5.176,193,4.016,208,5.176,276,5.036,318,4.585,397,5.176,494,4.366,629,1.211,956,5.176,1083,5.196,1266,5.176,1267,4.69,1268,7.044,1270,7.044,1272,5.617,1275,7.044,1277,5.617,1603,6.08,1604,7.044,1605,6.285,1606,6.285,1607,6.285]],["title/classes/Ordonnance.html",[21,0.309,1608,3.832]],["body/classes/Ordonnance.html",[3,0.042,4,0.037,5,0.037,7,0.162,10,0.854,11,0.006,12,0.408,15,0.77,16,0.112,20,0.042,21,0.265,26,0.003,27,0.003,100,4.083,130,1.056,150,0.398,151,0.782,239,4.549,282,0.441,346,1.365,415,1.761,424,0.457,427,0.628,435,1.267,449,1.14,516,5.172,534,1.673,537,1.576,538,1.702,539,1.604,541,2.459,542,1.491,543,2.459,627,1.408,629,1.173,630,1.898,631,1.402,694,4.714,860,2.644,862,2.644,1153,6.335,1154,6.335,1164,2.97,1608,4.695,1609,3.82,1610,4.274,1611,4.274,1612,4.274,1613,4.274,1614,4.274,1615,4.274,1616,4.274,1617,4.274,1618,4.274]],["title/classes/OrdonnanceDto.html",[21,0.309,1619,4.092]],["body/classes/OrdonnanceDto.html",[3,0.053,4,0.046,5,0.046,7,0.203,10,0.831,11,0.006,12,0.397,15,0.804,16,0.098,20,0.053,21,0.331,26,0.004,27,0.004,130,1.231,150,0.392,282,0.55,346,1.141,415,1.828,424,0.57,427,0.731,435,1.25,449,1.281,516,5.811,534,1.649,537,1.533,541,2.055,542,1.491,543,2.055,627,1.582,629,1.367,630,2.032,631,1.634,860,2.971,862,2.971,1619,5.841,1620,4.769,1621,5.336,1622,5.336,1623,5.336,1624,5.336,1625,5.336]],["title/classes/Paiement.html",[21,0.309,712,2.553]],["body/classes/Paiement.html",[3,0.039,4,0.034,5,0.034,7,0.15,10,0.862,11,0.006,12,0.412,15,0.788,16,0.125,20,0.039,21,0.245,26,0.003,27,0.003,130,0.997,150,0.4,151,0.754,282,0.407,346,1.456,415,1.734,424,0.422,427,0.592,435,1.275,449,1.09,534,1.683,537,1.591,538,1.64,539,1.545,541,2.392,542,1.495,543,2.392,567,4.943,627,1.345,629,1.107,630,1.847,631,1.324,712,2.952,721,4.708,722,3.576,723,4.943,726,3.67,730,5.226,860,2.527,862,2.527,1414,4.88,1420,3.042,1510,6.373,1626,3.525,1627,3.944,1628,3.944,1629,3.944,1630,3.944,1631,3.944,1632,3.944,1633,3.944,1634,3.944,1635,3.944,1636,3.944,1637,3.944,1638,3.944]],["title/controllers/PaiementController.html",[0,1.82,73,3.625]],["body/controllers/PaiementController.html",[0,1.372,2,1.397,3,0.037,4,0.033,5,0.033,7,0.142,8,1.602,10,0.683,11,0.006,12,0.326,14,2.104,15,0.758,16,0.149,17,0.825,20,0.037,21,0.233,23,1.955,24,2.172,26,0.003,27,0.003,57,3.534,58,4.372,73,4.035,125,2.602,126,2.889,148,2.137,149,2.386,150,0.373,151,0.735,160,2.919,188,3.47,192,2.092,198,1.787,203,3.406,204,4.67,215,1.976,238,2.842,242,1.876,245,2.921,265,3.001,266,3.47,267,2.092,277,2.842,278,2.032,279,1.976,280,4.462,282,0.386,286,4.183,292,2.092,339,2.52,341,1.536,346,0.89,427,0.386,439,3.384,449,1.168,625,2.732,626,1.176,712,3.379,736,5.914,774,3.085,879,1.746,891,2.889,892,3.001,894,3.001,897,3.186,901,3.186,913,2.032,1018,2.157,1263,6.64,1328,2.228,1348,4.035,1541,2.889,1544,4.797,1639,3.347,1640,4.942,1641,6.489,1642,5.53,1643,5.53,1644,3.347,1645,3.745,1646,6.677,1647,5.53,1648,7.261,1649,7.239,1650,3.745,1651,3.745,1652,3.745,1653,5.53,1654,5.53,1655,5.53,1656,3.745,1657,3.745,1658,3.745,1659,3.745,1660,3.745,1661,3.745,1662,3.745,1663,3.745,1664,3.347,1665,5.072,1666,3.745,1667,3.745,1668,3.745,1669,3.745,1670,3.745,1671,3.745,1672,3.745,1673,3.745,1674,3.745,1675,3.745,1676,3.745,1677,3.745,1678,5.981,1679,3.745,1680,3.745,1681,4.942,1682,3.745,1683,4.942,1684,3.745,1685,4.942,1686,3.745,1687,4.555,1688,4.555,1689,3.745,1690,3.745]],["title/classes/PaiementDto.html",[21,0.309,1691,4.092]],["body/classes/PaiementDto.html",[3,0.048,4,0.042,5,0.042,7,0.185,10,0.851,11,0.006,12,0.406,15,0.815,16,0.09,20,0.048,21,0.302,26,0.004,27,0.004,130,1.156,150,0.397,282,0.501,346,1.422,415,1.801,424,0.52,427,0.687,435,1.268,449,1.222,534,1.673,537,1.571,541,1.93,542,1.498,543,1.93,627,1.508,629,1.284,630,1.977,631,1.535,721,5.278,722,4.009,723,5.542,726,4.255,860,2.833,862,2.833,1691,5.486,1692,4.345,1693,4.862,1694,4.862,1695,4.862,1696,4.862,1697,4.862,1698,4.862,1699,4.862]],["title/modules/PaiementModule.html",[28,1.696,45,3.625]],["body/modules/PaiementModule.html",[2,2.742,3,0.056,4,0.049,5,0.049,11,0.006,16,0.176,17,1.242,20,0.056,21,0.35,26,0.004,27,0.004,28,2.793,30,2.569,31,2.569,32,2.689,33,2.689,34,2.569,35,3.904,36,2.689,45,7.257,57,5.893,58,6.134,59,3.639,65,3.508,66,2.689,67,2.627,73,5.97,74,3.149,76,2.46,122,6.25,123,5.038,125,3.917,126,4.348,310,3.504,321,2.409,712,2.897,1541,4.348,1567,5.038,1700,5.038,1701,5.637,1702,5.038,1703,5.637,1704,3.749,1705,5.038,1706,4.113,1707,4.643,1708,5.637]],["title/injectables/PaiementNabooService.html",[57,3.174,132,1.128]],["body/injectables/PaiementNabooService.html",[3,0.034,4,0.03,5,0.03,7,0.129,8,1.493,11,0.006,12,0.351,14,2.156,15,0.751,16,0.128,17,0.751,20,0.034,21,0.212,23,2.196,24,2.225,26,0.003,27,0.003,57,3.292,111,1.903,125,5.647,130,0.591,132,1.17,133,1.248,148,2.039,149,2.19,150,0.355,151,0.702,159,3.029,217,3.617,229,1.887,245,2.072,268,6.191,295,1.204,298,4.604,339,3.566,346,0.829,360,2.9,362,3.759,373,3.157,374,2.9,388,4.607,396,4.607,419,5.347,421,3.623,427,0.531,468,2.098,469,2.027,507,2.098,532,2.806,539,0.707,722,2.719,773,2.806,957,1.962,1116,2.806,1261,2.628,1263,5.343,1264,2.806,1348,5.054,1577,2.098,1600,2.367,1641,5.553,1646,5.706,1649,2.806,1678,4.244,1681,4.604,1683,4.604,1685,5.553,1687,4.244,1688,4.244,1709,7.263,1710,3.044,1711,6.214,1712,5.152,1713,5.152,1714,6.928,1715,5.152,1716,5.152,1717,3.407,1718,4.604,1719,5.152,1720,3.407,1721,5.152,1722,3.407,1723,3.407,1724,5.152,1725,5.152,1726,5.152,1727,5.152,1728,3.407,1729,5.152,1730,3.407,1731,4.604,1732,5.152,1733,3.407,1734,3.407,1735,3.044,1736,3.407,1737,3.407,1738,3.407,1739,3.407,1740,3.407,1741,3.407,1742,3.407,1743,3.407,1744,3.407,1745,3.407,1746,3.407,1747,3.407,1748,3.407,1749,3.407,1750,3.407,1751,3.407,1752,6.928,1753,3.407,1754,3.407,1755,3.407,1756,3.407,1757,6.214,1758,3.407,1759,3.407,1760,3.407,1761,3.407,1762,3.407,1763,3.407,1764,3.407,1765,3.044,1766,3.407,1767,3.407,1768,3.407,1769,3.407,1770,3.407,1771,3.407,1772,4.604,1773,3.407]],["title/injectables/PaiementService.html",[58,3.304,132,1.128]],["body/injectables/PaiementService.html",[3,0.022,4,0.019,5,0.019,7,0.083,8,1.054,11,0.006,12,0.307,14,1.738,15,0.694,16,0.126,17,0.484,20,0.022,21,0.136,23,1.646,24,1.794,26,0.002,27,0.002,57,3.459,58,2.42,59,2.136,76,0.959,125,1.527,126,1.695,130,1.289,132,0.826,133,0.805,148,1.903,149,1.903,150,0.291,151,0.655,159,3.342,185,2.975,194,1.81,199,1.193,207,1.87,217,3.39,227,1.024,229,1.333,233,2.862,245,0.884,253,1.074,266,1.921,287,2.655,310,2.057,321,0.939,333,1.193,339,3.119,341,1.493,346,0.354,360,3.716,373,3.725,374,3.421,400,2.655,407,1.101,411,1.129,413,1.823,421,2.882,422,2.655,427,0.375,449,1.152,468,1.353,469,1.308,492,1.462,559,1.287,567,3.397,605,1.16,626,0.69,629,1.043,712,4.524,721,2.528,722,2.458,723,4.377,730,1.695,736,3.95,742,2.975,753,1.823,755,3.6,761,3.397,858,1.353,861,1.527,870,2.975,894,1.193,957,1.266,958,1.604,992,2.241,1049,3.846,1077,1.81,1085,2.165,1086,4.149,1263,5.523,1264,1.81,1282,1.308,1301,1.964,1348,2.655,1406,2.096,1414,3.351,1510,2.655,1577,1.353,1581,1.404,1599,1.964,1600,4.756,1640,3.252,1644,3.252,1646,2.997,1649,3.836,1664,1.964,1678,1.81,1687,1.81,1688,1.81,1704,3.6,1705,1.964,1706,1.604,1707,1.81,1735,1.964,1765,1.964,1774,1.964,1775,4.657,1776,3.639,1777,4.657,1778,3.639,1779,3.639,1780,4.657,1781,3.639,1782,2.198,1783,3.639,1784,2.198,1785,2.198,1786,5.414,1787,2.198,1788,3.639,1789,2.198,1790,3.639,1791,2.198,1792,3.639,1793,3.639,1794,4.162,1795,1.964,1796,3.639,1797,3.235,1798,1.964,1799,2.198,1800,2.198,1801,2.198,1802,1.964,1803,3.252,1804,1.964,1805,2.198,1806,2.198,1807,3.639,1808,2.198,1809,2.198,1810,2.198,1811,2.198,1812,4.162,1813,2.198,1814,2.198,1815,2.198,1816,2.198,1817,2.198,1818,3.639,1819,2.198,1820,2.198,1821,2.198,1822,3.639,1823,2.198,1824,3.252,1825,4.838,1826,4.162,1827,2.198,1828,4.162,1829,2.198,1830,1.964,1831,2.198,1832,1.81,1833,1.964,1834,2.198,1835,2.198,1836,5.414,1837,2.198,1838,2.198,1839,2.198,1840,2.198,1841,4.838,1842,3.836,1843,5.778,1844,3.252,1845,2.198,1846,2.198,1847,3.639,1848,5.999,1849,3.252,1850,2.198,1851,1.964,1852,2.198,1853,3.639,1854,2.198,1855,2.198,1856,2.198,1857,2.198,1858,2.198,1859,2.198,1860,4.657,1861,2.198,1862,5.414,1863,3.639,1864,2.198,1865,2.198,1866,2.198,1867,2.198,1868,1.964,1869,2.198,1870,2.198,1871,2.198,1872,3.639,1873,1.964,1874,2.198,1875,3.252,1876,2.198]],["title/modules/PrismaModule.html",[28,1.696,46,3.452]],["body/modules/PrismaModule.html",[3,0.065,4,0.057,5,0.057,11,0.006,16,0.149,17,1.444,20,0.065,21,0.407,26,0.005,27,0.005,28,2.996,30,2.986,31,2.986,32,3.126,33,3.126,34,2.986,35,4.187,36,4.187,46,6.752,59,3.967,65,3.859,66,3.126,67,3.055,74,3.661,1877,5.857,1878,6.554,1879,5.857,1880,6.554,1881,6.24,1882,6.554]],["title/injectables/PrismaService.html",[59,1.96,132,1.128]],["body/injectables/PrismaService.html",[3,0.057,4,0.05,5,0.05,7,0.217,8,2.147,11,0.006,12,0.37,14,2.147,16,0.161,17,1.257,20,0.057,21,0.354,22,2.601,26,0.004,27,0.004,59,2.924,86,4.402,87,4.402,132,1.682,133,2.09,148,1.68,149,1.68,150,0.232,151,0.578,158,4.164,217,3.723,341,2.341,360,3.102,388,3.795,396,3.795,492,4.929,1080,4.164,1267,4.41,1278,4.701,1868,5.1,1883,5.1,1884,8.232,1885,9.255,1886,9.255,1887,5.707,1888,7.787,1889,5.707,1890,6.624,1891,5.707,1892,5.707,1893,5.1,1894,4.701,1895,5.707,1896,5.707,1897,5.707,1898,7.412,1899,5.707,1900,7.412,1901,5.707,1902,5.707,1903,5.707,1904,5.707,1905,5.707,1906,5.707]],["title/classes/Privilege.html",[21,0.309,366,2.488]],["body/classes/Privilege.html",[3,0.049,4,0.043,5,0.043,7,0.187,10,0.834,11,0.006,12,0.398,15,0.792,16,0.124,20,0.049,21,0.306,26,0.004,27,0.004,130,1.426,150,0.393,151,0.68,239,4.306,282,0.508,346,1.081,366,3.365,415,1.805,424,0.526,427,0.693,435,1.249,449,1.23,534,1.649,537,1.54,538,1.48,539,1.395,541,1.946,542,1.464,543,1.946,559,2.114,627,1.518,629,1.295,630,1.984,631,1.548,860,2.852,862,2.852,871,4.293,1164,3.422,1907,4.401,1908,6.299,1909,4.925,1910,4.925,1911,4.925,1912,4.925,1913,4.925,1914,4.925]],["title/classes/Privilege-1.html",[21,0.258,295,1.47,366,2.083]],["body/classes/Privilege-1.html",[3,0.076,4,0.067,5,0.067,11,0.005,20,0.076,21,0.478,26,0.005,27,0.005,366,4.46,424,0.823,1915,6.876]],["title/controllers/PrivilegeController.html",[0,1.82,1916,3.832]],["body/controllers/PrivilegeController.html",[0,1.339,2,1.363,3,0.036,4,0.032,5,0.032,7,0.139,8,1.574,10,0.721,11,0.006,12,0.344,14,2.222,15,0.73,16,0.148,17,0.805,20,0.036,21,0.227,22,1.666,23,1.292,24,2.293,26,0.003,27,0.003,148,2.257,149,2.257,150,0.292,151,0.777,160,4.047,188,4.914,192,4.009,196,3.267,198,1.744,207,2.792,215,1.929,238,4.393,242,2.721,245,2.887,253,2.654,265,2.948,266,2.867,267,2.042,277,2.792,278,1.984,279,1.929,280,4.629,281,5,282,0.377,286,4.417,287,3.963,292,2.042,333,1.984,407,1.831,449,1.375,453,6.175,622,2.654,626,1.148,656,2.592,743,5.134,753,4.452,878,2.143,879,1.704,880,2.274,882,2.475,887,3.199,891,2.82,892,2.948,896,2.82,897,3.129,900,2.54,901,3.129,902,3.774,905,2.54,907,1.666,909,3.011,910,3.774,912,2.106,913,1.984,916,1.186,919,2.431,922,2.042,925,2.175,926,2.251,931,2.175,1018,2.106,1320,3.011,1322,3.471,1328,2.175,1330,3.011,1423,2.721,1424,2.867,1429,4.19,1433,3.963,1436,1.831,1441,1.929,1458,2.336,1461,2.431,1581,3.471,1595,3.345,1916,4.19,1917,3.267,1918,3.267,1919,3.267,1920,3.656,1921,3.656,1922,4.855,1923,3.656,1924,4.474,1925,7.193,1926,3.656,1927,3.656,1928,3.656,1929,5.684,1930,3.656,1931,4.504,1932,3.267,1933,3.963,1934,3.656,1935,3.011,1936,3.656,1937,5.432,1938,3.656,1939,3.656,1940,3.656,1941,3.656,1942,3.656,1943,3.656,1944,3.656]],["title/classes/PrivilegeDto.html",[21,0.309,1945,4.092]],["body/classes/PrivilegeDto.html",[3,0.053,4,0.046,5,0.046,7,0.203,10,0.831,11,0.006,12,0.397,15,0.804,16,0.098,20,0.053,21,0.331,26,0.004,27,0.004,130,1.231,150,0.392,282,0.55,346,1.141,415,1.828,424,0.57,427,0.731,435,1.25,449,1.281,534,1.649,537,1.533,541,2.055,542,1.491,543,2.055,559,2.202,627,1.582,629,1.367,630,2.032,631,1.634,860,2.971,862,2.971,1945,5.841,1946,4.769,1947,5.336,1948,5.336,1949,5.336,1950,5.336,1951,5.336]],["title/modules/PrivilegeModule.html",[28,1.696,47,3.625]],["body/modules/PrivilegeModule.html",[2,3.05,3,0.066,4,0.058,5,0.058,11,0.006,16,0.163,17,1.469,20,0.066,21,0.414,26,0.005,27,0.005,28,3.019,30,3.038,31,3.038,32,3.181,33,3.181,34,3.038,35,4.219,36,3.181,47,7.025,65,3.901,66,3.181,67,3.108,1916,6.821,1931,6.69,1932,5.959,1952,5.959,1953,5.959,1954,6.668,1955,6.668]],["title/injectables/PrivilegeService.html",[132,1.128,1931,3.452]],["body/injectables/PrivilegeService.html",[3,0.028,4,0.025,5,0.025,7,0.108,8,1.303,11,0.006,12,0.342,14,2.112,16,0.126,17,0.629,20,0.028,21,0.177,23,1.589,24,2.052,26,0.003,27,0.003,59,2.489,76,1.246,130,0.496,132,1.021,133,1.046,148,2.245,149,2.245,150,0.31,151,0.772,159,3.147,175,3.425,199,1.55,203,3.425,217,3.697,227,2.096,229,1.046,233,3.274,253,2.718,255,1.882,310,2.897,321,1.22,333,1.55,339,3.127,341,1.845,346,1.308,357,1.645,360,3.749,366,3.958,373,3.321,374,3.192,395,1.699,404,3.864,407,2.786,411,1.468,413,2.252,415,0.534,421,2.479,449,1.408,453,5.648,525,1.759,559,1.243,626,0.897,627,1.363,629,1.216,656,1.363,685,2.512,711,2.512,743,4.657,748,3.699,750,3.124,753,3.651,856,5.317,878,1.774,879,1.331,880,1.882,882,2.049,887,1.273,899,1.699,907,2.049,916,0.927,957,3.634,981,1.699,1049,5.329,1079,2.203,1080,2.084,1083,2.512,1085,1.699,1086,1.596,1090,1.825,1091,1.825,1092,3.469,1282,2.676,1321,1.759,1365,3.124,1392,1.984,1404,1.759,1423,2.252,1424,2.373,1436,2.252,1441,2.373,1444,3.754,1449,1.759,1479,4.581,1480,4.581,1575,3.281,1577,3.425,1582,1.984,1583,1.984,1584,3.281,1585,5.007,1595,1.759,1918,2.553,1919,4.019,1924,2.352,1929,5.254,1931,3.124,1933,3.281,1956,2.553,1957,2.856,1958,2.856,1959,4.019,1960,2.856,1961,2.856,1962,2.856,1963,2.856,1964,2.856,1965,2.856,1966,2.856,1967,6.309,1968,4.019,1969,2.856,1970,4.019,1971,4.497,1972,4.019,1973,2.856,1974,2.856,1975,2.856,1976,2.856,1977,4.971,1978,2.856,1979,4.497,1980,2.856,1981,2.856,1982,4.497,1983,2.856]],["title/classes/Reservation.html",[21,0.309,1414,2.776]],["body/classes/Reservation.html",[3,0.035,4,0.031,5,0.031,7,0.133,10,0.861,11,0.006,12,0.411,15,0.772,16,0.139,20,0.035,21,0.218,26,0.003,27,0.003,130,1.222,150,0.399,151,0.856,239,4.232,282,0.363,346,1.359,415,1.694,424,0.376,427,0.544,435,1.272,449,1.019,534,1.678,537,1.589,538,1.862,539,1.754,541,2.448,542,1.464,543,2.448,627,1.258,629,1.357,630,1.771,631,1.622,637,4.212,712,4.342,755,4.212,756,4.212,761,4.621,860,2.362,862,2.362,992,5.203,1002,2.712,1164,2.443,1307,4.4,1414,2.948,1520,3.142,1797,5.871,1984,3.142,1985,3.516,1986,3.516,1987,3.516,1988,3.516,1989,3.516,1990,3.516,1991,3.516,1992,3.516,1993,3.516,1994,3.516,1995,3.516,1996,3.516,1997,3.516,1998,3.516]],["title/controllers/ReservationController.html",[0,1.82,1999,3.832]],["body/controllers/ReservationController.html",[0,1.356,2,1.381,3,0.037,4,0.032,5,0.032,7,0.141,8,1.589,10,0.725,11,0.006,12,0.346,14,2.234,15,0.732,16,0.149,17,0.816,20,0.037,21,0.23,22,1.687,23,1.309,24,2.306,26,0.003,27,0.003,113,2.701,148,2.269,149,2.525,150,0.329,151,0.781,160,4.069,188,4.925,192,4.034,198,1.766,204,4.942,215,1.954,229,2.957,242,1.855,245,3.248,265,2.976,266,2.894,267,2.069,277,2.818,278,2.009,279,1.954,280,4.651,282,0.382,286,4.441,292,4.307,386,4.972,449,1.541,626,1.162,742,5.599,754,5.369,878,2.164,879,1.726,880,2.296,882,2.499,887,2.445,890,2.203,892,2.976,894,4.381,902,3.81,907,1.687,912,2.133,913,2.009,916,1.202,919,2.462,922,2.069,925,2.203,926,2.28,931,2.203,1006,3.309,1018,2.133,1130,2.573,1320,3.05,1328,2.203,1330,3.05,1423,2.747,1433,4.001,1436,1.855,1448,4.23,1458,2.366,1544,4.765,1665,5.57,1999,4.23,2000,4.901,2001,4.901,2002,3.309,2003,3.703,2004,5.484,2005,6.532,2006,3.703,2007,5.484,2008,3.703,2009,3.703,2010,4.901,2011,3.703,2012,3.703,2013,4.901,2014,3.703,2015,5.369,2016,3.703,2017,3.703,2018,4.538,2019,4.23,2020,3.703,2021,3.703,2022,3.703,2023,3.703,2024,3.703,2025,3.703,2026,3.703,2027,3.703]],["title/injectables/ReservationDocumentService.html",[132,1.128,1704,3.304]],["body/injectables/ReservationDocumentService.html",[3,0.038,4,0.033,5,0.033,7,0.145,8,1.626,11,0.006,12,0.299,14,1.626,15,0.738,16,0.144,17,0.842,20,0.038,21,0.237,24,2.192,26,0.003,27,0.003,132,1.274,133,1.399,148,1.652,149,1.652,150,0.228,151,0.568,159,3.16,217,3.284,229,1.399,341,2.729,346,1.07,360,2.349,373,2.557,374,3.532,388,3.732,396,3.732,419,4.684,422,5.348,449,1.07,466,6.316,468,3.455,469,3.339,476,3.414,477,4.622,479,2.54,481,3.414,482,3.414,483,3.414,484,3.414,485,3.414,486,3.414,487,3.414,488,5.944,489,5.015,490,5.015,491,5.015,492,5.429,499,5.015,505,5.015,506,5.015,507,3.455,508,5.015,523,4.622,529,2.946,536,3.585,742,2.441,958,2.787,1240,4.328,1414,3.135,1578,2.787,1704,3.732,1706,5.348,1812,3.414,1832,4.622,1833,5.015,2028,6.551,2029,3.414,2030,6.651,2031,6.651,2032,3.82,2033,3.82,2034,3.82,2035,5.612,2036,3.82,2037,6.651,2038,3.82,2039,5.612,2040,5.612,2041,5.944,2042,3.82,2043,3.82,2044,3.82,2045,3.82,2046,5.612,2047,5.612,2048,5.612,2049,3.82,2050,5.612,2051,5.612,2052,3.82,2053,3.82,2054,3.82,2055,3.82,2056,3.82,2057,5.612,2058,3.82,2059,3.82,2060,3.82,2061,3.82,2062,3.82,2063,3.82,2064,3.82,2065,5.612,2066,3.82,2067,3.82,2068,3.82,2069,3.414,2070,3.414,2071,3.82,2072,3.82,2073,3.82,2074,3.82,2075,3.82,2076,3.82,2077,3.82,2078,3.82]],["title/classes/ReservationDto.html",[21,0.309,2079,4.092]],["body/classes/ReservationDto.html",[3,0.051,4,0.045,5,0.045,7,0.194,10,0.843,11,0.006,12,0.403,15,0.82,16,0.094,20,0.051,21,0.317,26,0.004,27,0.004,130,1.196,150,0.395,282,0.527,346,1.108,415,1.816,424,0.546,427,0.711,435,1.261,449,1.254,534,1.665,537,1.557,541,1.996,542,1.477,543,1.996,627,1.548,629,1.328,630,2.006,631,1.587,755,5.183,756,5.183,860,2.907,862,2.907,2079,5.675,2080,4.567,2081,5.111,2082,5.111,2083,5.111,2084,5.111,2085,5.111,2086,5.111]],["title/modules/ReservationModule.html",[28,1.696,122,3.452]],["body/modules/ReservationModule.html",[2,2.637,3,0.053,4,0.046,5,0.046,11,0.006,16,0.171,17,1.17,20,0.053,21,0.33,26,0.004,27,0.004,28,2.713,30,2.42,31,2.42,32,2.534,33,2.534,34,2.42,35,3.791,36,3.791,59,3.579,65,3.373,66,2.534,67,2.476,74,2.967,76,2.317,113,3.875,114,4.375,122,6.915,195,3.06,310,3.447,321,2.269,332,4.747,454,6.303,1388,4.375,1414,2.967,1430,4.097,1704,6.531,1706,3.875,1707,4.375,1999,6.13,2018,6.783,2087,4.747,2088,4.747,2089,4.747,2090,7.07,2091,5.312,2092,4.747]],["title/injectables/ReservationService.html",[132,1.128,2018,3.452]],["body/injectables/ReservationService.html",[3,0.019,4,0.017,5,0.017,7,0.073,8,0.948,11,0.006,12,0.272,14,1.618,16,0.103,17,0.426,20,0.019,21,0.12,24,1.67,26,0.002,27,0.002,59,1.971,76,0.844,96,1.726,100,3.492,111,2.374,130,1.556,132,0.743,133,0.709,148,1.784,149,1.784,150,0.247,151,0.614,159,3.492,185,2.715,194,2.694,195,1.115,199,2.306,203,2.617,207,3.115,217,3.277,227,1.525,229,0.709,231,1.493,233,2.664,239,1.638,310,1.898,321,0.827,339,1.491,341,1.342,346,1.137,360,3.355,373,3.815,374,3.678,386,3.077,411,0.994,413,1.638,415,1.208,421,2.227,449,1.289,559,0.535,605,1.021,626,0.608,629,0.631,635,4.5,636,4.744,637,2.826,638,3.322,642,2.387,656,0.923,670,2.523,712,2.567,742,3.569,748,1.287,750,1.344,753,2.502,754,3.322,755,2.175,756,1.287,761,2.387,779,1.525,858,1.192,861,1.344,878,1.291,880,1.369,882,1.491,887,1.458,890,1.946,892,1.05,894,2.711,907,1.491,916,0.628,957,1.115,973,1.493,977,1.594,981,1.151,986,1.493,990,3.471,992,4.5,1004,2.523,1049,4.681,1064,1.594,1077,1.594,1084,1.412,1085,3.606,1086,4.617,1108,5.768,1130,1.344,1131,1.729,1282,1.946,1307,2.273,1406,3.492,1414,3.606,1423,1.638,1436,1.638,1577,1.192,1581,2.715,1600,4.485,1795,3.798,1797,4.485,1798,3.798,1802,3.798,1803,4.465,1804,3.798,1824,2.924,1825,2.924,1826,1.729,1828,1.729,1830,4.465,1841,2.924,1842,1.594,1843,4.465,1844,1.729,1849,1.729,1851,2.924,1959,2.924,2001,2.924,2002,2.924,2010,1.729,2015,3.322,2018,2.273,2019,2.523,2069,1.729,2070,1.729,2093,1.729,2094,1.935,2095,1.935,2096,1.935,2097,1.935,2098,1.935,2099,1.935,2100,1.935,2101,3.271,2102,6.455,2103,3.271,2104,1.729,2105,3.271,2106,1.935,2107,1.935,2108,1.935,2109,1.935,2110,4.996,2111,1.935,2112,3.271,2113,3.271,2114,3.271,2115,3.271,2116,4.996,2117,4.996,2118,3.271,2119,3.271,2120,3.271,2121,3.271,2122,3.271,2123,3.271,2124,4.996,2125,3.271,2126,3.271,2127,4.996,2128,4.996,2129,3.271,2130,3.271,2131,1.935,2132,4.249,2133,1.935,2134,1.935,2135,1.935,2136,1.935,2137,3.271,2138,3.271,2139,1.935,2140,1.935,2141,1.935,2142,1.935,2143,3.271,2144,1.935,2145,1.935,2146,1.935,2147,1.935,2148,1.935,2149,1.935,2150,3.271]],["title/classes/ResetPasswordDto.html",[21,0.309,260,3.625]],["body/classes/ResetPasswordDto.html",[3,0.068,4,0.06,5,0.06,7,0.26,10,0.644,11,0.006,12,0.307,15,0.694,16,0.153,20,0.068,21,0.516,26,0.005,27,0.005,150,0.279,260,6.062,282,0.706,351,4.855,424,0.732,426,5.639,427,0.857,430,4.553,435,1.143,436,4.386,438,2.65,439,3.191,596,6.062,832,6.118,853,6.118,2151,7.426,2152,6.846]],["title/interfaces/Response.html",[185,3.174,1230,3.059]],["body/interfaces/Response.html",[3,0.062,4,0.055,5,0.055,7,0.239,11,0.006,15,0.836,20,0.062,26,0.004,27,0.004,150,0.387,151,0.987,185,5.045,346,1.387,404,5.991,421,4.029,427,0.814,646,5.775,1198,6.972,1230,3.881,1231,4.598,2153,5.632,2154,8.078,2155,8.078,2156,8.078]],["title/injectables/ResponseService.html",[132,1.128,310,1.887]],["body/injectables/ResponseService.html",[3,0.033,4,0.029,5,0.029,7,0.128,8,1.483,11,0.006,12,0.384,14,2.476,15,0.802,16,0.094,17,0.744,20,0.033,21,0.21,24,2.556,26,0.003,27,0.003,132,1.162,133,1.237,148,2.606,149,2.515,150,0.36,151,0.866,185,6.072,207,3.544,244,2.604,247,4.215,253,2.501,255,2.887,310,1.944,374,3.577,400,3.734,404,5.799,407,2.563,421,3.074,468,5.263,469,5.084,492,3.403,494,4.791,646,6.202,973,3.948,979,3.948,1198,3.948,1283,5.68,1394,4.215,1429,2.604,1495,3.948,1581,3.27,1873,4.574,1922,3.017,2155,7.637,2156,7.637,2157,3.017,2158,5.118,2159,5.118,2160,5.118,2161,5.118,2162,5.118,2163,5.118,2164,5.118,2165,3.377,2166,5.118,2167,5.118,2168,3.377,2169,5.118,2170,5.118,2171,5.118,2172,3.377,2173,5.118,2174,3.377,2175,6.896,2176,6.896,2177,5.118,2178,3.377,2179,5.118,2180,5.118,2181,3.377,2182,5.118,2183,3.377,2184,5.118,2185,3.377,2186,5.118,2187,5.118,2188,3.377,2189,3.377,2190,8.546,2191,3.377,2192,3.377,2193,3.017,2194,5.118,2195,3.377]],["title/classes/Service.html",[21,0.309,779,2.316]],["body/classes/Service.html",[3,0.049,4,0.043,5,0.043,7,0.187,10,0.834,11,0.006,12,0.398,15,0.792,16,0.124,20,0.049,21,0.306,26,0.004,27,0.004,130,1.426,150,0.393,151,0.68,282,0.508,346,1.081,415,1.805,424,0.526,427,0.693,435,1.249,449,1.23,534,1.649,537,1.54,538,1.48,539,1.395,541,1.946,542,1.464,543,1.946,559,2.114,627,1.518,629,1.295,630,1.984,631,1.548,779,3.131,860,2.852,862,2.852,871,4.293,1406,4.953,1418,4.056,2196,4.401,2197,6.834,2198,4.925,2199,4.925,2200,4.925,2201,4.925,2202,4.925,2203,4.925]],["title/controllers/ServiceController.html",[0,1.82,2204,3.832]],["body/controllers/ServiceController.html",[0,1.592,2,1.621,3,0.043,4,0.038,5,0.079,7,0.165,8,1.785,10,0.772,11,0.006,12,0.369,14,2.381,15,0.762,16,0.162,17,0.958,20,0.043,21,0.27,22,1.981,23,1.536,24,2.457,26,0.004,27,0.004,60,4.758,148,2.291,149,2.291,150,0.334,151,0.788,160,2.294,188,3.251,191,3.02,192,2.429,198,2.074,215,2.294,242,2.177,265,3.343,266,3.776,267,2.429,277,3.166,278,2.359,279,2.294,282,0.448,292,2.429,421,3.19,449,1.373,465,4.767,626,1.365,781,6.064,878,2.43,879,2.026,880,3.258,882,2.807,907,1.981,912,2.504,913,2.359,916,1.411,922,3.442,925,2.586,926,2.677,931,3.665,1018,2.504,1237,3.793,1328,2.586,1423,3.086,1424,3.251,1436,2.177,1441,2.294,1454,2.891,1458,2.778,1461,2.891,1476,4.494,1523,3.58,1524,3.58,1525,3.58,1536,5.519,1537,3.353,1538,3.353,1539,3.171,1543,3.171,1544,4.494,1548,4.752,1549,3.58,2204,4.752,2205,3.885,2206,4.347,2207,4.347,2208,4.347,2209,4.347,2210,5.962,2211,3.885,2212,4.347,2213,3.353,2214,4.347,2215,4.347,2216,3.885,2217,4.347,2218,4.347,2219,4.347,2220,3.885,2221,4.347,2222,4.347]],["title/classes/ServiceDto.html",[21,0.309,2223,4.092]],["body/classes/ServiceDto.html",[3,0.053,4,0.046,5,0.046,7,0.203,10,0.831,11,0.006,12,0.397,15,0.804,16,0.098,20,0.053,21,0.331,26,0.004,27,0.004,130,1.231,150,0.392,282,0.55,346,1.141,415,1.828,424,0.57,427,0.731,435,1.25,449,1.281,534,1.649,537,1.533,541,2.055,542,1.491,543,2.055,559,2.202,627,1.582,629,1.367,630,2.032,631,1.634,860,2.971,862,2.971,2223,5.841,2224,4.769,2225,5.336,2226,5.336,2227,5.336,2228,5.336,2229,5.336]],["title/modules/ServiceModule.html",[28,1.696,48,3.625]],["body/modules/ServiceModule.html",[2,2.76,3,0.056,4,0.05,5,0.05,11,0.006,16,0.173,17,1.254,20,0.056,21,0.354,26,0.004,27,0.004,28,2.972,30,2.594,31,2.594,32,2.716,33,2.716,34,2.594,35,3.922,36,3.922,48,7.234,52,5.695,59,3.649,60,6.56,63,3.279,65,3.53,66,2.716,67,2.654,74,4.134,76,2.484,93,4.153,255,2.383,310,3.514,321,2.432,2204,6.342,2213,4.391,2230,5.088,2231,5.088,2232,5.693,2233,5.693,2234,5.693,2235,5.088,2236,5.693]],["title/injectables/ServiceService.html",[60,3.304,132,1.128]],["body/injectables/ServiceService.html",[3,0.031,4,0.028,5,0.073,7,0.12,8,1.413,11,0.006,12,0.356,14,2.205,16,0.14,17,0.699,20,0.031,21,0.197,23,2.102,24,2.155,26,0.003,27,0.003,59,2.634,60,3.244,63,3.425,76,1.384,130,0.55,132,1.107,133,1.162,148,2.24,149,2.24,150,0.31,151,0.771,159,3.168,195,1.827,199,2.647,217,3.763,227,2.274,233,3.438,242,1.588,253,2.905,310,3.012,321,1.355,324,2.203,339,3.468,341,2.002,346,1.35,357,1.827,360,3.587,366,1.588,373,2.709,374,2.794,395,1.887,407,1.588,411,1.63,413,2.444,415,0.593,421,2.65,449,1.316,465,4.252,478,3.972,525,1.953,559,1.349,626,0.996,627,1.326,629,1.146,656,1.513,685,1.772,711,2.726,753,1.588,779,3.814,781,4.792,784,5.287,856,2.314,878,1.925,879,1.478,880,2.794,882,2.223,887,1.414,899,1.887,907,2.223,916,1.029,957,1.827,964,3.117,981,1.887,1049,4.288,1083,2.726,1085,1.887,1086,1.772,1090,2.026,1091,2.026,1237,3.661,1282,1.887,1321,1.953,1365,3.39,1392,2.203,1404,1.953,1423,2.444,1424,2.575,1436,2.444,1441,2.575,1444,1.887,1449,1.953,1454,4.439,1476,3.559,1575,3.559,1577,1.953,1578,2.314,1579,2.446,1580,2.446,1581,2.026,1582,2.203,1583,2.203,1584,2.314,1585,2.314,1591,3.763,1592,4.018,1595,1.953,1600,2.203,2210,5.442,2237,2.834,2238,3.172,2239,4.879,2240,3.172,2241,3.172,2242,3.172,2243,3.172,2244,3.172,2245,3.172,2246,2.834,2247,4.36,2248,3.172,2249,5.946,2250,2.834,2251,3.172,2252,4.018,2253,4.018,2254,3.172,2255,3.172,2256,3.172,2257,3.172,2258,2.834,2259,3.172,2260,3.172,2261,3.172,2262,3.172,2263,4.879,2264,3.172]],["title/classes/SousService.html",[21,0.309,1406,2.862]],["body/classes/SousService.html",[3,0.041,4,0.036,5,0.036,7,0.156,10,0.846,11,0.006,12,0.404,15,0.764,16,0.14,20,0.041,21,0.256,26,0.003,27,0.003,130,1.455,150,0.396,151,0.849,282,0.425,346,1.222,415,1.749,424,0.441,427,0.612,435,1.257,449,1.117,534,1.659,537,1.563,538,1.847,539,1.74,541,2.201,542,1.448,543,2.201,559,1.92,627,1.379,629,1.143,630,1.875,631,1.366,779,4.12,796,5.358,860,2.591,861,4.826,862,2.591,870,5.143,871,4.854,874,3.683,992,4.957,1002,3.179,1406,3.416,2265,3.683,2266,6.946,2267,4.121,2268,4.121,2269,4.121,2270,4.121,2271,4.121,2272,4.121,2273,4.121,2274,4.121,2275,4.121,2276,4.121]],["title/controllers/SousServiceController.html",[0,1.82,2277,3.832]],["body/controllers/SousServiceController.html",[0,1.45,2,1.476,3,0.039,4,0.034,5,0.078,7,0.15,8,1.668,10,0.777,11,0.006,12,0.371,14,2.395,15,0.775,16,0.157,17,0.872,20,0.039,21,0.246,22,1.804,23,1.399,24,2.472,26,0.003,27,0.003,96,3.935,97,6.225,148,2.332,149,2.332,150,0.336,151,0.802,160,2.089,188,3.039,191,2.75,192,2.211,198,1.888,215,2.089,242,1.982,265,3.125,266,3.583,267,2.211,277,2.959,278,2.148,279,2.089,282,0.408,292,2.211,421,3.026,449,1.33,465,4.619,626,1.243,791,5.928,794,5.928,796,4.442,878,2.272,879,1.845,880,3.121,882,2.624,907,1.804,912,2.28,913,2.148,916,1.284,922,3.217,925,2.355,926,2.437,931,3.426,1018,2.28,1237,3.546,1328,2.355,1423,2.885,1424,3.039,1436,1.982,1441,2.089,1454,4.515,1458,2.529,1461,2.632,1476,4.202,1523,3.26,1524,3.26,1525,3.26,1536,5.236,1537,3.053,1538,3.053,1539,2.887,1543,4.202,1544,4.202,1548,4.442,1549,3.26,1772,3.537,2211,3.537,2213,3.053,2216,3.537,2220,3.537,2277,4.442,2278,3.537,2279,5.147,2280,3.958,2281,3.958,2282,3.958,2283,3.537,2284,5.759,2285,5.759,2286,3.958,2287,3.958,2288,3.958,2289,5.814,2290,3.958,2291,4.717,2292,3.958,2293,3.958,2294,3.958,2295,3.958,2296,3.958,2297,3.958,2298,3.958,2299,3.958,2300,3.958]],["title/classes/SousServiceDto.html",[21,0.309,2301,4.092]],["body/classes/SousServiceDto.html",[3,0.053,4,0.046,5,0.046,7,0.203,10,0.831,11,0.006,12,0.397,15,0.804,16,0.098,20,0.053,21,0.331,26,0.004,27,0.004,130,1.231,150,0.392,282,0.55,346,1.141,415,1.828,424,0.57,427,0.731,435,1.25,449,1.281,534,1.649,537,1.533,541,2.055,542,1.491,543,2.055,559,2.202,627,1.582,629,1.367,630,2.032,631,1.634,860,2.971,862,2.971,2301,5.841,2302,4.769,2303,5.336,2304,5.336,2305,5.336,2306,5.336,2307,5.336]],["title/modules/SousServiceModule.html",[28,1.696,49,3.625]],["body/modules/SousServiceModule.html",[2,2.769,3,0.057,4,0.05,5,0.05,11,0.006,16,0.171,17,1.261,20,0.057,21,0.355,26,0.004,27,0.004,28,2.813,30,2.607,31,2.607,32,2.729,33,2.729,34,2.607,35,3.932,36,3.932,49,7.239,52,5.703,59,3.654,65,3.542,66,2.729,67,2.667,74,4.147,76,2.496,93,4.174,96,3.918,97,4.174,310,3.518,321,2.444,794,3.975,2213,4.413,2235,5.113,2277,6.357,2291,6.859,2308,5.113,2309,5.113,2310,5.113,2311,5.722,2312,5.722]],["title/injectables/SousServiceService.html",[132,1.128,2291,3.452]],["body/injectables/SousServiceService.html",[3,0.028,4,0.025,5,0.071,7,0.107,8,1.293,11,0.006,12,0.354,14,2.201,16,0.134,17,0.623,20,0.028,21,0.176,23,1.953,24,2.171,26,0.003,27,0.003,59,2.476,63,3.183,76,1.234,96,4.379,97,5.912,130,0.491,132,1.013,133,1.036,148,2.236,149,2.236,150,0.309,151,0.769,159,3.212,199,1.535,217,3.761,227,1.318,233,3.462,242,1.416,253,3.066,255,1.184,310,2.887,321,1.208,324,1.965,339,3.307,341,1.831,346,1.384,357,1.629,360,3.602,366,1.416,370,2.181,373,2.859,374,2.859,395,1.683,407,2.235,411,1.453,413,2.235,415,0.529,421,2.464,449,1.304,465,4.055,478,3.733,525,1.741,559,0.782,626,0.888,627,1.441,629,1.316,656,1.349,685,1.58,711,1.58,753,1.416,779,3.777,784,5.043,791,5.236,794,5.631,796,5.268,878,1.76,879,1.318,880,2.627,882,2.033,887,1.261,899,1.683,907,2.033,916,0.918,957,1.629,964,1.807,981,1.683,1049,4.063,1083,2.493,1085,1.683,1086,1.58,1090,1.807,1091,1.807,1237,3.403,1282,1.683,1321,1.741,1365,3.1,1392,1.965,1404,1.741,1406,3.183,1423,2.235,1424,2.355,1436,2.235,1441,2.355,1444,1.683,1449,1.741,1454,4.173,1476,3.255,1477,2.329,1575,3.255,1577,1.741,1578,2.063,1579,2.181,1580,2.181,1581,1.807,1582,1.965,1583,1.965,1584,2.063,1585,2.063,1591,3.442,1592,3.675,1595,1.741,1600,3.1,2197,4.939,2246,2.527,2247,3.988,2250,2.527,2252,3.675,2253,3.675,2258,2.527,2279,3.988,2283,3.988,2289,5.236,2291,3.1,2313,2.527,2314,2.828,2315,4.462,2316,2.828,2317,2.828,2318,2.828,2319,2.828,2320,2.828,2321,2.828,2322,2.828,2323,2.828,2324,2.828,2325,4.462,2326,2.828,2327,2.828,2328,2.828,2329,2.828,2330,2.828,2331,2.828,2332,2.828,2333,4.462,2334,2.828,2335,4.462,2336,2.527,2337,2.828]],["title/classes/StatutReservation.html",[21,0.309,1797,3.452]],["body/classes/StatutReservation.html",[3,0.049,4,0.043,5,0.043,7,0.187,10,0.834,11,0.006,12,0.398,15,0.792,16,0.124,20,0.049,21,0.306,26,0.004,27,0.004,130,1.426,150,0.393,151,0.68,282,0.508,346,1.081,415,1.805,424,0.526,427,0.693,435,1.249,449,1.23,534,1.649,537,1.54,538,1.48,539,1.395,541,1.946,542,1.464,543,1.946,559,2.114,627,1.518,629,1.295,630,1.984,631,1.548,860,2.852,862,2.852,871,4.293,1130,5.313,1414,4.803,1420,3.798,1797,4.668,2338,4.401,2339,4.925,2340,4.925,2341,4.925,2342,4.925,2343,4.925,2344,4.925]],["title/controllers/StatutReservationController.html",[0,1.82,72,3.625]],["body/controllers/StatutReservationController.html",[0,1.278,2,1.301,3,0.035,4,0.03,5,0.03,7,0.132,8,1.52,10,0.707,11,0.006,12,0.337,14,2.178,15,0.721,16,0.146,17,0.769,20,0.035,21,0.217,22,1.59,23,1.233,24,2.248,26,0.003,27,0.003,61,3.489,72,3.828,111,5.275,112,5.762,113,2.546,148,2.064,149,2.412,150,0.358,151,0.71,160,2.769,188,3.327,192,1.949,198,1.665,215,1.841,229,3.268,238,4.332,242,1.748,245,3.177,255,3.306,265,2.847,266,2.769,267,1.949,277,2.696,278,1.893,279,1.841,280,4.549,282,0.36,286,4.33,292,1.949,346,1.27,449,1.543,622,3.426,626,1.095,742,5.701,779,1.626,804,4.663,806,5.487,878,2.07,879,2.445,880,2.935,882,2.391,887,2.339,890,2.076,892,2.847,894,4.286,896,2.691,897,4.039,899,3.121,900,2.424,901,3.022,905,2.424,907,1.59,912,2.01,913,1.893,916,1.132,919,2.32,922,1.949,925,2.076,926,2.149,931,2.076,1018,2.01,1322,3.352,1328,2.076,1414,2.931,1423,2.628,1424,2.769,1436,1.748,1441,1.841,1448,5.408,1456,3.118,1457,3.118,1458,2.229,1459,3.118,1460,3.118,1461,2.32,1462,3.118,1543,2.546,1665,5.408,2013,6.266,2019,4.047,2345,3.118,2346,6.305,2347,3.489,2348,5.246,2349,3.489,2350,4.321,2351,3.489,2352,4.689,2353,3.489,2354,3.489,2355,3.489,2356,4.663,2357,3.489,2358,3.489,2359,3.489,2360,3.489,2361,5.246]],["title/classes/StatutReservationDto.html",[21,0.309,2362,4.092]],["body/classes/StatutReservationDto.html",[3,0.053,4,0.046,5,0.046,7,0.203,10,0.831,11,0.006,12,0.397,15,0.804,16,0.098,20,0.053,21,0.331,26,0.004,27,0.004,130,1.231,150,0.392,282,0.55,346,1.141,415,1.828,424,0.57,427,0.731,435,1.25,449,1.281,534,1.649,537,1.533,541,2.055,542,1.491,543,2.055,559,2.202,627,1.582,629,1.367,630,2.032,631,1.634,860,2.971,862,2.971,2362,5.841,2363,4.769,2364,5.336,2365,5.336,2366,5.336,2367,5.336,2368,5.336]],["title/modules/StatutReservationModule.html",[28,1.696,50,3.625]],["body/modules/StatutReservationModule.html",[2,3.007,3,0.065,4,0.057,5,0.057,11,0.006,16,0.161,17,1.436,20,0.065,21,0.405,26,0.005,27,0.005,28,2.988,30,2.969,31,2.969,32,3.109,33,3.109,34,2.969,35,4.176,36,3.846,50,6.986,61,6.368,65,3.846,66,3.109,67,3.037,72,6.387,74,3.64,111,4.504,112,4.754,113,4.754,114,5.367,806,4.527,2369,6.516,2370,6.516,2371,6.516]],["title/injectables/StatutReservationService.html",[61,3.304,132,1.128]],["body/injectables/StatutReservationService.html",[3,0.036,4,0.031,5,0.031,7,0.136,8,1.552,11,0.006,12,0.371,14,2.312,16,0.14,17,0.79,20,0.036,21,0.223,23,1.893,24,2.275,26,0.003,27,0.003,59,2.805,61,3.562,76,1.565,111,3.972,112,6.202,130,0.623,132,1.216,133,1.314,148,2.349,149,2.349,150,0.325,151,0.808,159,3.089,199,1.947,217,3.836,233,3.629,310,3.142,321,1.533,339,3.467,341,2.197,346,1.398,357,2.066,360,3.558,366,1.797,373,2.441,374,2.683,395,2.134,411,1.843,413,2.683,415,0.671,421,2.857,449,1.33,559,0.992,626,1.126,627,1.412,629,1.235,656,1.711,685,2.004,753,1.797,804,4.728,806,5.906,878,2.113,880,2.976,882,2.441,887,1.599,890,3.187,894,4.33,899,2.134,907,2.441,916,1.164,964,2.292,1049,4.526,1083,2.992,1085,2.134,1086,2.004,1090,2.292,1091,2.292,1282,2.134,1365,3.722,1392,2.492,1423,2.683,1424,2.827,1436,2.683,1441,2.827,1444,2.134,1449,2.209,1491,4.412,1495,2.767,1497,2.955,1503,2.767,1505,2.767,1575,3.908,1577,2.209,1580,2.767,1581,2.292,1582,2.492,1583,2.492,1584,2.617,1585,2.617,1587,3.206,1595,2.209,1842,2.955,2019,4.132,2104,3.206,2356,4.728,2372,3.206,2373,3.587,2374,3.587,2375,3.587,2376,3.587,2377,3.587,2378,3.587,2379,3.587,2380,3.587,2381,3.587,2382,3.587,2383,3.587,2384,3.587,2385,3.587,2386,3.587,2387,5.356]],["title/classes/Tarif.html",[21,0.309,870,3.174]],["body/classes/Tarif.html",[3,0.04,4,0.036,5,0.036,7,0.155,10,0.857,11,0.006,12,0.409,15,0.698,16,0.127,20,0.04,21,0.253,26,0.003,27,0.003,130,1.021,150,0.398,151,0.766,282,0.421,346,1.467,415,1.746,424,0.436,427,0.607,435,1.27,449,1.111,534,1.676,537,1.582,538,1.666,539,1.569,541,2.42,542,1.503,543,2.42,605,3.644,607,4.498,627,1.371,629,1.134,630,1.868,631,1.356,695,4.412,722,3.644,726,3.76,814,5.687,858,5.428,860,2.575,862,2.575,870,3.76,1406,5.077,1418,3.358,2388,3.644,2389,4.077,2390,4.077,2391,4.077,2392,4.077,2393,4.077,2394,4.077,2395,4.077,2396,4.077,2397,4.077,2398,4.077,2399,4.077]],["title/controllers/TarifController.html",[0,1.82,71,3.625]],["body/controllers/TarifController.html",[0,1.117,2,1.137,3,0.03,4,0.027,5,0.027,7,0.116,8,1.371,10,0.759,11,0.006,12,0.363,14,2.341,15,0.79,16,0.13,17,0.672,20,0.03,21,0.189,22,1.39,23,1.078,24,2.481,26,0.003,27,0.003,62,3.857,71,3.453,96,3.451,148,2.378,149,2.672,150,0.387,151,0.818,215,1.609,227,2.206,238,4.505,240,2.915,265,2.568,266,2.498,279,1.609,280,4.779,282,0.315,286,4.653,333,2.568,346,1.445,449,1.547,538,1.043,539,0.983,622,2.313,626,0.957,656,2.258,695,4.522,779,2.206,810,4.178,861,4.543,870,5.417,877,3.651,878,1.867,879,2.704,880,1.981,881,3.148,882,2.157,883,2.352,884,2.725,885,3.898,886,5.385,887,3.339,888,3.651,890,1.814,891,2.352,892,2.568,894,4.065,895,2.352,896,2.352,897,2.726,900,2.119,901,3.766,904,2.028,905,2.119,907,1.39,909,2.512,910,3.289,912,1.757,913,1.655,916,0.99,919,2.028,922,1.704,923,2.352,925,1.814,926,1.878,928,2.725,929,2.725,931,1.814,932,2.725,1237,1.878,1322,4.178,1433,3.453,1487,4.23,1665,6.028,2350,3.898,2352,2.725,2400,2.725,2401,4.23,2402,4.733,2403,4.733,2404,3.049,2405,3.049,2406,2.725,2407,3.049,2408,3.049,2409,3.049,2410,4.733,2411,3.049,2412,3.049,2413,3.049,2414,3.049,2415,3.049,2416,4.733,2417,3.049,2418,4.23,2419,4.733,2420,3.049,2421,3.049,2422,4.348,2423,3.049,2424,3.049,2425,2.725,2426,3.898,2427,4.733,2428,3.049,2429,3.049,2430,3.049,2431,3.049,2432,3.049,2433,3.049,2434,3.049,2435,3.049,2436,3.049,2437,3.049,2438,3.049,2439,3.049,2440,3.049,2441,3.049,2442,3.049,2443,3.049,2444,3.049]],["title/classes/TarifDto.html",[21,0.309,2445,4.092]],["body/classes/TarifDto.html",[3,0.05,4,0.044,5,0.044,7,0.192,10,0.841,11,0.006,12,0.402,15,0.748,16,0.093,20,0.05,21,0.315,26,0.004,27,0.004,130,1.189,150,0.394,282,0.522,346,1.439,415,1.813,424,0.542,427,0.706,435,1.259,449,1.248,534,1.661,537,1.553,541,1.984,542,1.51,543,1.984,605,4.095,607,4.945,627,1.541,629,1.32,630,2.001,631,1.578,722,4.095,726,4.376,860,2.894,862,2.894,2445,5.641,2446,4.527,2447,5.066,2448,5.066,2449,5.066,2450,5.066,2451,5.066,2452,5.066]],["title/modules/TarifModule.html",[28,1.696,51,3.625]],["body/modules/TarifModule.html",[2,3.002,3,0.064,4,0.057,5,0.057,11,0.006,16,0.168,17,1.432,20,0.064,21,0.404,26,0.005,27,0.005,28,2.985,30,2.961,31,2.961,32,3.1,33,3.1,34,2.961,35,4.171,36,3.839,51,6.981,62,6.364,65,3.839,66,3.1,67,3.029,71,6.378,74,3.63,310,2.469,321,2.776,2425,5.807,2453,6.498,2454,6.498,2455,6.498,2456,6.498]],["title/injectables/TarifService.html",[62,3.304,132,1.128]],["body/injectables/TarifService.html",[3,0.02,4,0.017,5,0.017,7,0.076,8,0.971,11,0.006,12,0.332,14,2.071,16,0.105,17,0.439,20,0.02,21,0.124,23,1.185,24,2.786,26,0.002,27,0.002,59,2.008,62,2.229,76,0.869,96,2.291,130,1.509,132,0.761,133,0.73,148,2.104,149,2.104,150,0.291,151,0.724,159,3.264,193,1.273,199,1.819,207,3.674,217,3.667,227,2.023,233,3.41,238,1.024,240,2.064,253,3.007,310,2.486,321,0.851,333,2.355,339,1.528,341,1.375,346,1.411,360,3.751,374,0.834,376,4.569,388,4.754,395,1.185,396,4.754,407,2.844,411,1.024,413,2.844,415,0.373,421,3.063,449,1.473,492,4.754,539,1.179,605,4.009,626,0.625,627,0.862,629,0.646,656,0.95,695,5.247,722,2.291,779,2.868,810,3.629,814,4.677,858,4.677,861,4.275,870,5.388,877,2.586,878,1.323,879,1.563,880,2.131,881,2.229,882,1.528,883,2.586,887,1.494,895,2.586,904,2.229,907,1.528,916,0.646,960,1.78,963,1.453,964,1.273,965,3.879,979,1.537,1086,3.839,1282,1.185,1322,2.142,1404,1.227,1406,4.48,1444,1.185,1449,1.227,1477,3.575,1503,1.537,1505,1.537,1595,1.227,1970,1.78,2336,2.996,2350,2.761,2401,2.996,2406,2.996,2418,1.78,2422,4.569,2426,2.761,2457,1.78,2458,3.352,2459,3.352,2460,1.992,2461,1.992,2462,3.352,2463,1.992,2464,1.992,2465,1.992,2466,1.992,2467,3.352,2468,1.992,2469,3.352,2470,1.992,2471,1.992,2472,1.992,2473,5.679,2474,4.34,2475,5.679,2476,1.992,2477,3.352,2478,1.992,2479,4.34,2480,3.352,2481,4.34,2482,1.992,2483,1.992,2484,7.149,2485,4.34,2486,4.34,2487,5.679,2488,5.679,2489,1.992,2490,3.352,2491,1.992,2492,1.992,2493,1.992,2494,1.992,2495,1.992,2496,1.992,2497,3.352,2498,1.992,2499,1.992,2500,1.992,2501,1.992,2502,1.992,2503,1.992,2504,3.352,2505,1.992,2506,1.992,2507,1.992,2508,1.992]],["title/classes/UpdateDeviseDto.html",[21,0.309,908,3.304]],["body/classes/UpdateDeviseDto.html",[3,0.072,4,0.063,5,0.063,11,0.006,16,0.159,20,0.072,21,0.452,26,0.005,27,0.005,424,0.778,535,5.058,603,4.651,878,2.872,908,5.733,915,5.996,1267,5.129,2509,6.506,2510,8.621,2511,5.311,2512,5.311,2513,5.311]],["title/classes/UpdateDeviseDto-1.html",[21,0.258,295,1.47,908,2.766]],["body/classes/UpdateDeviseDto-1.html",[3,0.05,4,0.044,5,0.044,7,0.194,10,0.818,11,0.006,12,0.391,15,0.82,16,0.094,20,0.05,21,0.317,26,0.004,27,0.004,130,1.194,150,0.388,151,0.967,282,0.526,415,1.559,424,0.545,427,0.71,435,1.233,534,1.628,535,3.543,536,4.974,537,1.51,538,2.103,539,1.982,542,1.09,559,2.152,605,4.109,606,5.409,607,4.958,627,1.546,629,1.326,630,1.538,631,1.585,908,4.575,916,2.909,2514,5.1,2515,5.1,2516,5.1,2517,5.1,2518,5.1]],["title/classes/UpdateDisponibiliteDto.html",[21,0.309,1017,3.304]],["body/classes/UpdateDisponibiliteDto.html",[3,0.072,4,0.063,5,0.063,11,0.006,16,0.159,20,0.072,21,0.452,26,0.005,27,0.005,424,0.778,546,5.058,633,4.651,878,2.872,1016,5.996,1017,5.733,1267,5.129,2511,5.311,2512,5.311,2513,5.311,2519,6.506,2520,8.621]],["title/classes/UpdateDisponibiliteDto-1.html",[21,0.258,295,1.47,1017,2.766]],["body/classes/UpdateDisponibiliteDto-1.html",[3,0.054,4,0.047,5,0.047,7,0.205,10,0.802,11,0.006,12,0.383,15,0.827,16,0.1,20,0.054,21,0.336,26,0.004,27,0.004,130,1.242,150,0.384,151,0.956,282,0.558,415,1.597,424,0.579,427,0.738,435,1.221,534,1.612,537,1.481,538,2.081,539,1.961,542,1.134,546,3.76,547,4.836,627,1.593,629,1.38,630,1.601,631,1.649,635,4.939,636,4.939,638,5.334,916,2.88,1017,4.76,2521,5.412,2522,5.412,2523,5.412]],["title/classes/UpdateDossierMedicalDto.html",[21,0.309,2524,4.092]],["body/classes/UpdateDossierMedicalDto.html",[3,0.053,4,0.046,5,0.046,7,0.203,10,0.798,11,0.006,12,0.381,15,0.816,16,0.098,20,0.053,21,0.331,26,0.004,27,0.004,130,1.231,150,0.383,151,0.954,282,0.55,415,1.761,424,0.57,427,0.731,435,1.216,534,1.604,537,1.473,538,2.074,539,1.955,542,1.345,549,4.116,550,4.769,627,1.582,629,1.367,630,1.898,631,1.634,677,6.144,678,6.144,679,6.144,916,2.867,2524,5.841,2525,5.336,2526,5.336,2527,5.336]],["title/classes/UpdateLogDto.html",[21,0.309,2528,4.092]],["body/classes/UpdateLogDto.html",[3,0.057,4,0.05,5,0.05,7,0.219,10,0.778,11,0.006,12,0.371,15,0.815,16,0.106,20,0.057,21,0.358,26,0.004,27,0.004,130,1.295,150,0.378,151,0.94,171,5.093,282,0.595,415,1.636,424,0.616,427,0.769,435,1.203,534,1.588,537,1.435,538,2.045,539,1.927,542,1.182,552,4.446,553,5.152,627,1.642,629,1.438,630,1.668,631,1.719,685,4.621,916,2.838,2528,6.144,2529,5.765,2530,5.765]],["title/classes/UpdateMedecinSousServiceDto.html",[21,0.309,1446,3.304]],["body/classes/UpdateMedecinSousServiceDto.html",[3,0.066,4,0.058,5,0.058,7,0.252,10,0.623,11,0.006,12,0.298,15,0.681,16,0.122,20,0.066,21,0.412,26,0.005,27,0.005,130,1.414,150,0.332,151,0.825,282,0.684,415,1.721,424,0.709,427,0.84,435,1.121,534,1.479,537,1.15,538,1.795,539,1.692,542,1.291,555,5.113,627,1.752,629,1.57,630,1.822,631,1.877,690,5.924,916,2.644,1446,5.418]],["title/classes/UpdateMedecinSousServiceDto-1.html",[21,0.258,295,1.47,1446,2.766]],["body/classes/UpdateMedecinSousServiceDto-1.html",[3,0.064,4,0.057,5,0.057,7,0.247,10,0.757,11,0.006,12,0.361,16,0.12,20,0.064,21,0.5,26,0.005,27,0.005,96,4.614,100,5.036,150,0.328,151,0.925,346,1.47,424,0.695,427,0.83,438,2.515,617,4.379,667,5.384,691,6.074,693,5.352,694,5.814,695,5.586,697,5.807,698,5.807,1446,5.352,2531,7.813,2532,8.048]],["title/classes/UpdateModePaiementDto.html",[21,0.309,1533,3.304]],["body/classes/UpdateModePaiementDto.html",[3,0.056,4,0.049,5,0.049,7,0.215,10,0.771,11,0.006,12,0.368,15,0.813,16,0.104,20,0.056,21,0.352,26,0.004,27,0.004,130,1.508,150,0.376,151,0.935,282,0.584,415,1.625,424,0.606,427,0.761,435,1.195,534,1.577,537,1.423,538,2.035,539,1.918,542,1.168,558,4.37,559,2.267,561,5.063,627,1.629,629,1.675,630,1.65,631,2.002,700,5.454,916,2.819,1533,4.905,2533,5.665,2534,5.665]],["title/classes/UpdateModePaiementDto-1.html",[21,0.258,295,1.47,1533,2.766]],["body/classes/UpdateModePaiementDto-1.html",[3,0.058,4,0.051,5,0.051,7,0.222,10,0.708,11,0.006,12,0.338,15,0.778,16,0.139,20,0.058,21,0.468,26,0.004,27,0.004,116,5.605,150,0.339,151,0.891,229,2.759,245,2.354,255,3.153,282,0.604,424,0.626,427,0.777,435,1.146,438,2.266,439,3.511,537,1.016,538,1.938,539,1.564,542,1.193,559,2.303,566,3.892,597,3.594,617,4.173,700,5.54,704,5.788,707,4.813,708,4.514,710,3.27,711,4.209,712,3.871,716,6.732,727,4.82,785,3.892,1533,5.01,2535,7.445,2536,7.534,2537,7.534,2538,5.853]],["title/classes/UpdateOrdonnanceDto.html",[21,0.309,2539,4.092]],["body/classes/UpdateOrdonnanceDto.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.732,11,0.006,12,0.35,15,0.789,16,0.114,20,0.061,21,0.383,26,0.004,27,0.004,130,1.352,150,0.365,151,0.908,282,0.636,415,1.678,424,0.659,427,0.803,435,1.174,516,6.228,534,1.55,537,1.352,538,1.976,539,1.862,542,1.234,563,4.756,564,5.511,627,1.695,629,1.501,630,1.742,631,1.795,916,2.77,2539,6.415,2540,6.167]],["title/classes/UpdatePaiementDto.html",[21,0.309,2541,3.625]],["body/classes/UpdatePaiementDto.html",[3,0.053,4,0.047,5,0.047,7,0.203,10,0.799,11,0.006,12,0.382,15,0.805,16,0.099,20,0.053,21,0.333,26,0.004,27,0.004,130,1.235,150,0.384,151,0.954,282,0.553,346,1.368,415,1.591,424,0.573,427,0.734,435,1.217,534,1.607,537,1.476,538,2.076,539,1.957,542,1.347,566,3.565,568,4.791,627,1.585,629,1.371,630,1.591,631,1.639,721,5.547,722,4.213,723,5.825,726,4.545,916,2.872,2541,5.19,2542,5.361,2543,5.361,2544,5.361]],["title/classes/UpdatePaiementDto-1.html",[21,0.258,295,1.47,2541,3.035]],["body/classes/UpdatePaiementDto-1.html",[3,0.072,4,0.064,5,0.064,11,0.006,16,0.159,20,0.072,21,0.454,26,0.005,27,0.005,282,0.753,424,0.781,566,4.857,720,5.074,878,2.881,1267,5.139,1542,6.015,2511,5.328,2541,6.302,2545,6.527,2546,8.638]],["title/classes/UpdatePrivilegeDto.html",[21,0.309,1929,3.304]],["body/classes/UpdatePrivilegeDto.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.732,11,0.006,12,0.35,15,0.789,16,0.114,20,0.061,21,0.383,26,0.004,27,0.004,130,1.352,150,0.365,151,0.908,282,0.636,415,1.678,424,0.659,427,0.803,435,1.174,445,3.94,534,1.55,537,1.352,538,1.976,539,1.862,542,1.234,559,2.36,627,1.695,629,1.501,630,1.742,631,1.795,916,2.77,1929,5.179,2547,6.167,2548,6.167]],["title/classes/UpdatePrivilegeDto-1.html",[21,0.258,295,1.47,1929,2.766]],["body/classes/UpdatePrivilegeDto-1.html",[3,0.072,4,0.063,5,0.063,11,0.006,16,0.159,20,0.072,21,0.452,26,0.005,27,0.005,424,0.778,445,4.651,743,4.651,878,2.872,1267,5.129,1929,5.733,1933,5.311,2511,5.311,2512,5.311,2513,5.311,2549,6.506,2550,8.621]],["title/classes/UpdateReservationDto.html",[21,0.309,2015,3.304]],["body/classes/UpdateReservationDto.html",[3,0.057,4,0.05,5,0.05,7,0.219,10,0.778,11,0.006,12,0.371,15,0.815,16,0.106,20,0.057,21,0.358,26,0.004,27,0.004,130,1.295,150,0.378,151,0.94,282,0.595,415,1.636,424,0.616,427,0.769,435,1.203,534,1.588,537,1.435,538,2.045,539,1.927,542,1.182,574,3.683,575,4.446,627,1.642,629,1.438,630,1.668,631,1.719,755,5.5,756,5.5,766,4.748,916,2.838,2015,4.961,2551,5.765]],["title/classes/UpdateReservationDto-1.html",[21,0.258,295,1.47,2015,2.766]],["body/classes/UpdateReservationDto-1.html",[3,0.042,4,0.037,5,0.037,7,0.16,10,0.817,11,0.006,12,0.39,15,0.743,16,0.111,20,0.042,21,0.374,26,0.003,27,0.003,111,3.36,150,0.368,151,0.95,229,3.362,245,3.495,255,3.532,282,0.434,346,1.233,386,4.721,415,1.518,424,0.449,427,0.62,435,1.223,438,1.627,449,1.233,538,2.068,539,1.752,574,2.686,575,3.243,597,3.657,617,4.352,625,3.067,635,4.325,636,4.325,637,4.671,642,5.593,647,6.315,660,4.954,665,4.64,667,4.325,710,4.854,712,3.091,742,4.899,755,4.671,756,4.671,761,5.124,766,3.463,768,5.376,769,3.757,771,6.277,772,6.682,773,4.954,774,4.954,777,5.376,778,3.757,779,1.959,780,3.757,785,4.671,2015,4,2552,7.942,2553,4.204,2554,6.015,2555,4.204,2556,4.204,2557,4.204,2558,4.204,2559,4.204,2560,4.204,2561,4.204]],["title/classes/UpdateServiceDto.html",[21,0.309,2210,3.304]],["body/classes/UpdateServiceDto.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.732,11,0.006,12,0.35,15,0.789,16,0.114,20,0.061,21,0.383,26,0.004,27,0.004,130,1.352,150,0.365,151,0.908,282,0.636,415,1.678,424,0.659,427,0.803,435,1.174,534,1.55,537,1.352,538,1.976,539,1.862,542,1.234,559,2.36,577,3.94,627,1.695,629,1.501,630,1.742,631,1.795,786,5.079,916,2.77,2210,5.179,2562,6.167]],["title/classes/UpdateServiceDto-1.html",[21,0.258,295,1.47,2210,2.766]],["body/classes/UpdateServiceDto-1.html",[3,0.057,4,0.05,5,0.05,7,0.217,10,0.698,11,0.006,12,0.333,15,0.774,16,0.137,20,0.057,21,0.461,26,0.004,27,0.004,150,0.335,151,0.883,229,2.719,245,2.986,255,3.107,282,0.59,424,0.612,427,0.766,435,1.2,438,2.215,439,4.065,507,4.572,538,2.04,539,1.711,542,1.176,559,2.278,577,3.656,578,4.712,597,3.542,617,4.128,656,3.542,707,4.743,708,4.413,710,4.147,711,4.147,779,3.46,784,5.726,785,3.805,788,4.413,789,6.635,797,6.115,798,6.115,799,4.712,986,5.726,2210,4.937,2563,7.365]],["title/classes/UpdateSousServiceDto.html",[21,0.309,2289,3.304]],["body/classes/UpdateSousServiceDto.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.732,11,0.006,12,0.35,15,0.789,16,0.114,20,0.061,21,0.383,26,0.004,27,0.004,130,1.352,150,0.365,151,0.908,282,0.636,415,1.678,424,0.659,427,0.803,435,1.174,534,1.55,537,1.352,538,1.976,539,1.862,542,1.234,559,2.36,581,4.756,582,5.511,627,1.695,629,1.501,630,1.742,631,1.795,916,2.77,2289,5.179,2564,6.167]],["title/classes/UpdateSousServiceDto-1.html",[21,0.258,295,1.47,2289,2.766]],["body/classes/UpdateSousServiceDto-1.html",[3,0.056,4,0.049,5,0.049,7,0.213,10,0.689,11,0.006,12,0.329,15,0.77,16,0.135,20,0.056,21,0.455,26,0.004,27,0.004,96,4.952,150,0.332,151,0.877,229,2.684,245,2.948,255,3.623,282,0.579,424,0.6,427,0.756,435,1.191,438,2.172,439,4.034,507,4.513,538,2.03,539,1.695,542,1.161,559,2.257,577,3.584,578,4.62,597,3.496,617,4.089,707,4.683,708,4.327,710,4.095,711,4.095,779,4.034,784,5.672,785,3.73,788,4.327,794,5.672,797,6.037,798,6.037,799,4.62,803,6.55,2289,4.874,2565,7.295]],["title/classes/UpdateStatutReservationDto.html",[21,0.309,2356,3.304]],["body/classes/UpdateStatutReservationDto.html",[3,0.061,4,0.054,5,0.054,7,0.234,10,0.732,11,0.006,12,0.35,15,0.789,16,0.114,20,0.061,21,0.383,26,0.004,27,0.004,130,1.352,150,0.365,151,0.908,282,0.636,415,1.678,424,0.659,427,0.803,435,1.174,534,1.55,537,1.352,538,1.976,539,1.862,542,1.234,559,2.36,584,4.756,627,1.695,629,1.501,630,1.742,631,1.795,916,2.77,2356,5.179,2566,6.167,2567,6.167]],["title/classes/UpdateStatutReservationDto-1.html",[21,0.258,295,1.47,2356,2.766]],["body/classes/UpdateStatutReservationDto-1.html",[3,0.065,4,0.057,5,0.057,7,0.249,10,0.618,11,0.006,12,0.295,15,0.677,16,0.149,20,0.065,21,0.503,26,0.005,27,0.005,111,5.125,150,0.267,151,0.821,245,2.644,255,3.392,282,0.678,424,0.703,427,0.836,435,1.115,438,2.544,439,3.777,559,2.429,574,4.199,597,3.866,617,4.059,710,3.672,711,4.528,770,5.413,806,5.631,809,5.873,2356,5.389,2568,7.243,2569,6.572]],["title/classes/UpdateTarifDto.html",[21,0.309,2422,3.304]],["body/classes/UpdateTarifDto.html",[3,0.057,4,0.05,5,0.05,7,0.217,10,0.774,11,0.006,12,0.37,15,0.619,16,0.105,20,0.057,21,0.354,26,0.004,27,0.004,130,1.286,150,0.377,151,0.937,282,0.589,346,1.402,415,1.63,424,0.61,427,0.764,435,1.199,534,1.582,537,1.429,538,2.039,539,1.921,542,1.38,588,3.965,605,4.344,607,5.184,627,1.634,629,1.429,630,1.658,631,1.708,722,4.344,726,4.736,916,2.827,2422,4.929,2570,5.707,2571,5.707,2572,5.707]],["title/classes/UpdateTarifDto-1.html",[21,0.258,295,1.47,2422,2.766]],["body/classes/UpdateTarifDto-1.html",[3,0.072,4,0.063,5,0.063,11,0.006,16,0.159,20,0.072,21,0.452,26,0.005,27,0.005,424,0.778,588,5.058,810,4.651,878,2.872,1267,5.129,2422,5.733,2426,5.996,2511,5.311,2512,5.311,2513,5.311,2573,6.506,2574,8.621]],["title/classes/UpdateUtilisateurDto.html",[21,0.309,2575,3.304]],["body/classes/UpdateUtilisateurDto.html",[3,0.045,4,0.039,5,0.039,7,0.171,10,0.833,11,0.006,12,0.398,15,0.84,16,0.083,20,0.045,21,0.28,26,0.004,27,0.004,130,1.373,150,0.392,151,0.977,282,0.465,300,4.343,351,3.961,415,1.48,424,0.482,427,0.652,435,1.245,534,1.643,537,1.539,538,2.125,539,2.002,542,1.001,591,2.881,600,4.664,627,1.449,629,1.525,630,1.414,631,1.823,821,4.664,822,4.664,823,4.664,829,4.03,916,2.936,2575,4.204,2576,4.509,2577,4.509,2578,4.509,2579,4.03,2580,4.03,2581,4.509]],["title/classes/UpdateUtilisateurDto-1.html",[21,0.258,295,1.47,2575,2.766]],["body/classes/UpdateUtilisateurDto-1.html",[3,0.035,4,0.031,5,0.031,7,0.133,10,0.794,11,0.006,12,0.379,15,0.772,16,0.097,20,0.035,21,0.328,26,0.003,27,0.003,150,0.352,151,0.951,175,3.9,195,2.025,204,2.025,207,1.807,227,3.281,228,5.797,229,2.901,230,5.797,240,4.334,282,0.363,300,3.768,333,2.863,346,0.849,351,3.437,405,3.142,424,0.376,427,0.544,437,2.896,438,1.361,439,3.829,446,4.4,447,3.142,494,2.443,517,4.346,542,0.836,591,2.246,596,3.849,597,3.598,600,4.047,602,2.565,617,4.329,622,2.578,624,2.896,646,5.399,667,3.249,668,2.896,707,2.246,731,5.66,750,4.89,752,2.896,753,1.761,821,4.047,822,4.047,823,4.047,831,5.217,840,4.07,841,4.346,842,4.715,844,6.29,845,4.715,846,4.715,847,4.346,848,4.715,850,7.724,851,2.896,852,2.896,855,3.142,1113,4.715,1249,4.346,1250,4.346,1935,2.896,2575,3.509,2579,3.142,2580,3.142,2582,7.724,2583,8.215,2584,3.516,2585,3.516,2586,3.516,2587,3.516,2588,3.516,2589,3.516,2590,3.516,2591,3.516,2592,3.516,2593,5.277,2594,5.277,2595,3.516,2596,5.277,2597,5.277,2598,5.277,2599,5.277,2600,3.516,2601,3.516,2602,3.516,2603,3.516,2604,3.516,2605,3.516,2606,3.516,2607,3.516,2608,3.516,2609,3.516,2610,8.215,2611,3.516,2612,3.516,2613,3.516,2614,3.516,2615,3.516,2616,3.516,2617,3.516,2618,3.516,2619,3.516,2620,3.516,2621,3.516,2622,3.516,2623,3.516]],["title/modules/UploadModule.html",[28,1.696,52,3.059]],["body/modules/UploadModule.html",[3,0.06,4,0.053,5,0.053,11,0.006,16,0.156,17,1.334,20,0.06,21,0.376,26,0.004,27,0.004,28,2.889,30,2.758,31,2.758,32,2.888,33,2.888,34,2.758,35,4.038,36,4.038,52,6.01,63,5.78,65,3.672,66,2.888,67,2.821,454,6.636,1881,5.937,2092,5.409,2624,5.409,2625,6.053,2626,5.409,2627,6.053,2628,6.053,2629,6.053,2630,6.053,2631,6.053,2632,6.053,2633,6.053,2634,6.053]],["title/injectables/UploadService.html",[63,2.862,132,1.128]],["body/injectables/UploadService.html",[3,0.033,4,0.029,5,0.054,7,0.128,8,1.484,11,0.006,12,0.384,14,2.261,15,0.794,16,0.137,17,0.745,20,0.033,21,0.21,24,2.218,26,0.003,27,0.003,63,2.951,130,0.587,132,1.163,133,1.238,145,2.467,148,2.297,149,2.297,150,0.33,151,0.79,158,2.467,159,3.232,189,2.608,217,3.611,227,1.576,229,2.266,255,1.415,339,4.091,341,2.538,360,3.104,373,2.819,374,2.589,388,4.114,396,4.114,419,5.335,427,0.528,449,0.544,456,6.168,457,4.22,458,4.771,459,4.771,464,2.785,465,4.776,466,6.237,468,3.809,469,3.68,470,3.952,471,6.168,472,6.168,473,2.785,478,3.048,479,2.249,480,3.022,492,4.932,493,3.022,494,2.349,495,3.022,496,3.022,507,2.082,510,3.022,513,5.528,518,3.022,519,3.022,520,3.022,521,3.022,522,3.022,523,4.22,528,3.022,529,2.608,531,3.022,897,1.948,1203,3.022,1204,3.022,1205,3.022,1206,2.785,1207,3.022,1208,3.022,1209,3.022,1210,3.022,1211,3.022,1233,4.22,1235,6.628,1444,2.012,1794,4.579,2154,4.579,2635,3.022,2636,6.186,2637,5.124,2638,5.124,2639,5.124,2640,5.124,2641,3.381,2642,5.124,2643,3.381,2644,5.124,2645,3.381,2646,3.381,2647,5.124,2648,3.381,2649,3.381,2650,3.381,2651,5.124,2652,3.381,2653,3.381,2654,3.381,2655,3.381,2656,3.381,2657,3.381,2658,6.186,2659,5.124,2660,3.381,2661,3.381,2662,3.381,2663,3.381,2664,3.381,2665,3.381,2666,3.381,2667,3.381,2668,6.186,2669,3.381,2670,3.381,2671,3.381,2672,3.381,2673,5.124,2674,3.381,2675,3.381,2676,3.381,2677,3.381,2678,3.381,2679,3.381]],["title/classes/Utilisateur.html",[21,0.309,239,2.488]],["body/classes/Utilisateur.html",[3,0.028,4,0.025,5,0.025,7,0.109,10,0.865,11,0.006,12,0.413,15,0.811,16,0.141,20,0.028,21,0.178,26,0.003,27,0.003,90,4.236,130,1.571,150,0.4,151,0.898,239,2.261,282,0.296,300,3.32,346,1.018,351,3.028,366,3.964,415,1.616,424,0.307,427,0.466,435,1.274,446,3.877,449,0.898,534,1.681,537,1.596,538,1.954,539,1.841,541,1.833,542,1.32,543,1.833,600,3.565,627,1.108,629,1.219,630,1.633,631,1.458,821,3.565,822,3.565,823,3.565,860,2.081,862,2.081,871,5.519,992,4.874,1002,2.214,1130,3.877,1151,5.306,1319,4.596,1414,3.843,1420,2.214,1608,6.28,2680,2.565,2681,5.58,2682,5.58,2683,5.58,2684,2.87,2685,2.87,2686,2.87,2687,2.87,2688,2.87,2689,2.87,2690,2.87,2691,2.87,2692,2.87,2693,2.87,2694,2.87,2695,2.87,2696,2.87,2697,2.87,2698,2.87,2699,2.87,2700,2.87,2701,2.87,2702,2.87,2703,2.87,2704,2.87,2705,2.87]],["title/classes/Utilisateur-1.html",[21,0.258,239,2.083,295,1.47]],["body/classes/Utilisateur-1.html",[3,0.076,4,0.067,5,0.067,11,0.005,20,0.076,21,0.478,26,0.005,27,0.005,239,4.46,424,0.823,2706,6.876]],["title/controllers/UtilisateurController.html",[0,1.82,2707,3.832]],["body/controllers/UtilisateurController.html",[0,1.046,2,1.065,3,0.028,4,0.025,5,0.069,7,0.108,8,1.303,10,0.743,11,0.006,12,0.355,14,2.289,15,0.721,16,0.153,17,0.629,20,0.028,21,0.177,22,1.301,23,1.01,24,2.363,26,0.003,27,0.003,148,2.02,149,2.02,150,0.279,151,0.695,160,2.373,175,1.759,188,2.935,191,1.984,192,1.596,195,1.645,198,1.363,203,2.769,207,2.311,215,1.507,227,2.592,238,4.361,239,4.568,242,3.82,244,3.469,245,2.932,253,2.197,265,2.44,266,2.935,267,1.596,272,3.704,275,2.203,276,1.825,277,2.311,278,2.44,279,1.507,280,4.683,281,4.867,282,0.295,286,4.551,287,4.058,292,3.834,311,3.554,351,3.018,376,3.699,385,2.203,407,2.252,421,2.005,443,2.084,448,2.553,449,1.271,465,4.072,622,3.083,626,0.897,656,2.145,753,2.252,820,5.072,823,3.554,878,2.194,879,1.331,880,2.641,882,2.535,887,3.059,892,2.44,897,2.59,901,3.634,907,1.301,910,3.124,912,1.645,913,1.55,916,0.927,922,1.596,925,1.699,931,1.699,1018,1.645,1322,4.873,1328,4.537,1388,2.352,1423,2.252,1424,2.373,1429,3.469,1433,5.007,1436,1.431,1441,1.507,1458,1.825,1461,1.899,1536,4.29,1537,2.203,1538,2.203,1539,2.084,1543,2.084,1548,3.469,1595,2.769,1603,2.203,1881,2.203,1908,5.652,1925,2.352,1933,2.084,2193,4.019,2575,5.254,2707,3.469,2708,2.553,2709,5.639,2710,6.309,2711,4.019,2712,2.856,2713,2.856,2714,4.497,2715,7.289,2716,4.497,2717,2.856,2718,2.856,2719,2.856,2720,2.856,2721,4.497,2722,2.856,2723,4.497,2724,2.856,2725,5.562,2726,5.562,2727,5.562,2728,4.971,2729,2.856,2730,2.553,2731,2.856,2732,2.856,2733,2.856,2734,2.856,2735,2.856,2736,2.856,2737,2.856,2738,2.856,2739,2.856,2740,4.497,2741,4.497,2742,2.856,2743,2.553,2744,2.856,2745,2.856,2746,2.856,2747,2.856,2748,2.856,2749,2.856,2750,4.497,2751,2.856,2752,2.856,2753,2.856,2754,2.856,2755,2.856,2756,2.856,2757,2.856,2758,2.856,2759,2.856,2760,2.856,2761,2.856,2762,2.856,2763,2.856,2764,2.856,2765,2.856,2766,2.856,2767,2.856,2768,2.856,2769,2.856,2770,2.856]],["title/classes/UtilisateurDto.html",[21,0.309,2771,4.092]],["body/classes/UtilisateurDto.html",[3,0.043,4,0.038,5,0.038,7,0.164,10,0.868,11,0.006,12,0.414,15,0.842,16,0.079,20,0.043,21,0.268,26,0.003,27,0.003,130,1.346,150,0.401,282,0.445,300,4.239,346,0.986,351,3.867,415,1.764,424,0.461,427,0.632,435,1.285,449,1.146,534,1.695,537,1.602,541,1.775,542,1.417,543,1.775,600,4.553,627,1.415,629,1.495,630,1.904,631,1.787,821,4.553,822,4.553,823,4.553,860,2.658,862,2.658,2771,5.047,2772,3.856,2773,4.315,2774,4.315,2775,4.315,2776,4.315,2777,4.315,2778,4.315,2779,4.315,2780,4.315,2781,4.315,2782,4.315]],["title/modules/UtilisateurModule.html",[28,1.696,53,3.625]],["body/modules/UtilisateurModule.html",[2,2.716,3,0.055,4,0.048,5,0.048,11,0.006,16,0.169,17,1.224,20,0.055,21,0.345,26,0.004,27,0.004,28,2.774,30,2.532,31,2.532,32,2.65,33,2.65,34,2.532,35,3.876,36,3.876,40,6.504,52,5.513,53,7.21,59,3.625,65,3.474,66,2.65,67,2.589,74,4.069,76,2.424,84,4.965,93,4.053,229,2.035,311,6.28,333,3.952,343,4.965,624,4.576,1394,4.576,1430,4.285,2707,6.267,2743,4.965,2783,4.965,2784,5.556,2785,4.965,2786,5.556,2787,5.556,2788,5.556,2789,5.556,2790,5.556,2791,5.556,2792,5.556]],["title/injectables/UtilisateurService.html",[132,1.128,311,3.174]],["body/injectables/UtilisateurService.html",[3,0.019,4,0.017,5,0.063,7,0.073,8,0.941,11,0.006,12,0.337,14,2.111,15,0.537,16,0.125,17,0.423,20,0.019,21,0.119,23,1.493,24,2.179,26,0.002,27,0.002,59,1.96,63,2.433,76,0.837,130,1.173,132,0.737,133,0.703,148,1.99,149,1.99,150,0.275,151,0.685,159,3.368,175,3.06,193,2.075,195,1.105,199,1.763,203,1.182,207,0.986,217,3.696,227,0.894,229,0.703,233,3.475,238,2.17,239,3.649,240,1.182,253,3.303,272,2.675,275,1.48,300,1.142,310,2.442,311,2.075,321,0.82,324,1.333,339,1.924,341,1.333,346,1.236,351,3.668,357,1.871,358,2.675,360,3.724,366,4.07,370,1.48,373,3.32,374,3.138,376,2.16,395,1.142,404,1.333,407,2.784,411,0.986,413,1.627,415,0.359,421,2.69,443,4.69,446,4.467,449,1.307,453,4.193,465,3.371,478,2.956,525,2.601,529,1.48,559,1.167,600,2.075,625,2.37,626,0.602,627,1.198,629,1.071,656,2.015,753,2.115,820,4.013,821,1.226,822,1.226,823,3.175,831,5.8,840,1.48,841,1.581,878,1.666,879,0.894,880,2.08,882,1.924,887,0.855,892,1.041,897,1.105,899,1.142,907,0.874,910,1.333,916,0.623,949,1.715,956,1.581,957,3.476,958,1.4,964,1.226,981,1.933,1049,2.956,1060,1.715,1083,1.815,1084,3.081,1085,1.142,1086,3.776,1090,1.226,1091,1.226,1092,2.505,1237,2.601,1249,1.581,1321,2.601,1404,2,1423,1.627,1424,1.714,1436,1.627,1441,1.714,1444,1.933,1449,2,1479,3.478,1480,4.093,1485,1.715,1577,2.601,1578,1.4,1579,1.48,1582,3.452,1583,1.333,1591,2.505,1595,1.182,1908,5.8,1924,1.581,1933,1.4,1968,3.774,1972,2.903,1977,1.715,2252,2.675,2253,2.675,2575,4.275,2709,4.441,2711,2.903,2728,5.393,2730,2.903,2793,1.715,2794,3.248,2795,4.969,2796,3.248,2797,1.919,2798,3.248,2799,1.919,2800,1.919,2801,1.919,2802,1.919,2803,1.919,2804,1.919,2805,1.919,2806,1.919,2807,3.248,2808,1.919,2809,1.919,2810,1.919,2811,1.919,2812,3.248,2813,1.919,2814,1.919,2815,3.248,2816,1.919,2817,3.248,2818,3.248,2819,1.919,2820,3.248,2821,3.248,2822,3.248,2823,1.919,2824,3.248,2825,1.919,2826,3.248,2827,1.919,2828,1.919,2829,1.919,2830,3.248,2831,1.919,2832,1.919,2833,4.223,2834,3.248,2835,1.919,2836,1.919,2837,3.248,2838,1.919,2839,1.919,2840,1.919,2841,1.919,2842,1.919,2843,1.919,2844,1.919,2845,1.919,2846,3.248,2847,1.919,2848,3.248,2849,1.919,2850,3.248,2851,1.919,2852,1.919,2853,1.919,2854,1.919,2855,3.248,2856,1.919,2857,3.248,2858,1.919,2859,3.248,2860,1.919,2861,3.248,2862,4.223,2863,3.248,2864,3.248,2865,4.223,2866,1.919,2867,1.919,2868,1.919]],["title/modules/ValidationModule.html",[28,1.696,54,3.625]],["body/modules/ValidationModule.html",[3,0.056,4,0.049,5,0.049,11,0.006,16,0.16,17,1.245,20,0.056,21,0.351,26,0.004,27,0.004,28,2.963,30,3.356,31,2.575,32,2.696,33,2.696,34,2.575,35,3.908,36,3.908,54,7.227,64,6.846,65,3.513,66,2.696,67,2.634,310,3.744,333,3.067,385,4.359,887,3.283,888,4.359,963,4.123,1174,6.846,1454,3.758,1881,5.68,2869,5.05,2870,5.05,2871,5.05,2872,5.651,2873,5.651,2874,5.05,2875,5.651,2876,5.651,2877,5.651,2878,5.651,2879,5.651,2880,5.651]],["title/injectables/ValidationService.html",[64,3.452,132,1.128]],["body/injectables/ValidationService.html",[3,0.06,4,0.053,5,0.053,11,0.006,12,0.273,16,0.164,17,1.702,20,0.06,21,0.48,22,2.773,23,2.151,24,1.82,26,0.004,27,0.004,64,5.366,130,1.549,132,1.753,133,2.229,148,1.791,149,1.791,150,0.248,151,0.616,159,2.355,341,2.496,438,2.355,469,3.62,539,1.603,1174,6.54,1196,7.583,1198,4.694,1267,4.595,2874,5.438,2881,5.438,2882,8.485,2883,6.085,2884,6.085,2885,7.723,2886,6.085,2887,6.085,2888,6.085,2889,6.085,2890,6.085,2891,6.085,2892,6.085,2893,6.085,2894,6.085,2895,6.085]],["title/coverage.html",[2896,5.567]],["body/coverage.html",[0,2.801,1,1.211,5,0.014,6,1.403,11,0.006,18,1.091,21,0.623,26,0.002,27,0.002,34,0.716,55,1.091,56,1.044,57,1.003,58,1.044,59,0.62,60,1.044,61,1.044,62,1.044,63,0.904,64,1.091,69,1.146,70,1.211,71,1.146,72,1.146,73,1.146,89,1.091,90,0.967,91,1.211,96,2.293,97,1.995,100,1.575,101,1.995,111,1.528,112,1.995,116,1.684,117,1.995,125,1.091,132,2.014,134,1.403,138,1.293,139,1.403,140,2.252,141,1.403,150,0.064,156,1.211,179,1.293,180,1.403,181,1.403,185,1.003,198,0.749,202,7.867,213,1.211,214,1.403,223,1.146,235,1.9,239,1.369,260,1.146,269,1.091,271,3.737,276,1.003,277,0.807,308,1.044,309,1.146,310,0.597,311,1.003,338,1.403,366,1.369,374,0.657,408,1.403,425,1.403,426,2.252,443,1.146,444,1.403,445,3.713,454,1.091,455,1.403,478,0.934,479,1.044,533,1.293,534,1.783,535,3.421,545,1.293,546,3.421,548,1.293,549,2.801,551,1.293,552,2.801,554,1.293,555,2.801,557,1.293,558,2.801,562,1.293,563,2.801,565,1.293,566,3.595,570,1.293,573,1.293,574,3.713,576,1.293,577,3.713,580,1.293,581,2.801,583,1.293,584,2.801,587,1.293,588,3.421,590,1.403,591,3.713,603,1.747,604,1.403,626,2.401,633,1.747,634,1.403,676,1.293,684,1.293,689,1.818,691,3.018,692,1.403,693,2.252,699,1.818,704,3.018,705,1.403,706,1.403,712,1.405,717,1.293,720,1.9,729,2.252,736,1.146,737,1.403,743,1.747,745,1.403,754,1.818,760,1.403,779,0.732,781,1.818,783,1.403,791,1.818,794,3.018,795,1.403,804,1.818,806,3.018,807,1.403,810,1.747,813,1.403,820,1.818,830,1.403,858,0.967,859,1.403,870,1.003,875,1.403,908,1.818,916,2.481,934,1.293,935,1.403,944,1.403,990,1.091,991,1.403,992,0.967,1003,1.403,1017,1.818,1027,1.293,1028,1.403,1040,1.403,1151,1.211,1152,1.403,1165,1.293,1166,1.403,1174,1.091,1175,1.403,1230,2.675,1232,2.801,1239,1.211,1241,1.293,1242,1.403,1244,1.293,1245,1.403,1261,1.211,1262,1.403,1265,1.403,1266,2.252,1284,1.403,1305,1.403,1317,1.211,1318,1.403,1325,1.044,1333,1.293,1334,1.403,1342,1.403,1343,1.403,1363,1.403,1405,1.403,1406,0.904,1414,0.877,1421,1.211,1422,1.403,1446,1.818,1451,1.091,1463,1.293,1464,1.403,1469,1.403,1510,1.146,1511,1.403,1521,1.211,1522,1.403,1533,1.818,1540,1.091,1555,1.293,1556,1.403,1568,1.403,1603,1.211,1604,1.403,1608,1.211,1609,1.403,1619,1.293,1620,1.403,1626,1.403,1639,1.403,1691,1.293,1692,1.403,1704,1.044,1706,1.146,1709,1.403,1710,1.403,1774,1.403,1797,1.091,1883,1.403,1894,1.293,1907,1.403,1915,1.403,1916,1.211,1917,1.403,1929,1.818,1931,1.091,1945,1.293,1946,1.403,1956,1.403,1984,1.403,1999,1.211,2000,1.403,2015,1.818,2018,1.091,2028,1.403,2029,1.403,2079,1.293,2080,1.403,2093,1.403,2151,1.403,2153,1.403,2157,1.403,2196,1.403,2204,1.211,2205,1.403,2210,1.818,2223,1.293,2224,1.403,2237,1.403,2265,1.403,2277,1.211,2278,1.403,2289,1.818,2291,1.091,2301,1.293,2302,1.403,2313,1.403,2338,1.403,2345,1.403,2356,1.818,2362,1.293,2363,1.403,2372,1.403,2388,1.403,2400,1.403,2422,1.818,2445,1.293,2446,1.403,2457,1.403,2509,1.403,2519,1.403,2524,1.293,2528,1.293,2531,1.403,2535,1.403,2539,1.293,2541,1.995,2545,1.403,2549,1.403,2552,1.403,2563,1.403,2565,1.403,2568,1.403,2573,1.403,2575,1.818,2582,1.403,2635,1.403,2680,1.403,2706,1.403,2707,1.211,2708,1.403,2771,1.293,2772,1.403,2793,1.403,2881,1.403,2896,1.293,2897,1.403,2898,1.57,2899,1.57,2900,8.385,2901,7.499,2902,7.499,2903,7.647,2904,8.874,2905,1.57,2906,1.57,2907,1.57,2908,1.57,2909,6.949,2910,1.57,2911,1.57,2912,7.782,2913,7.647,2914,4.925,2915,6.158,2916,4.345,2917,2.734,2918,1.57,2919,1.57,2920,1.403,2921,1.57,2922,2.444,2923,3.632,2924,1.57,2925,1.57]],["title/dependencies.html",[31,2.72,2926,3.717]],["body/dependencies.html",[11,0.006,17,1.377,21,0.488,26,0.004,27,0.004,31,2.848,83,4.56,86,4.821,87,4.821,155,5.586,191,5.458,276,3.994,282,0.645,316,5.148,318,4.56,358,5.148,413,3.131,438,2.42,477,5.148,1293,7.02,1539,4.56,1731,5.586,1832,5.148,1893,5.586,1935,5.148,2041,5.586,2512,4.56,2513,4.56,2927,8.591,2928,7.855,2929,6.251,2930,6.251,2931,6.251,2932,6.251,2933,6.251,2934,7.855,2935,6.251,2936,6.251,2937,6.251,2938,6.251,2939,6.251,2940,6.251,2941,6.251,2942,6.251,2943,6.251,2944,6.251,2945,6.251,2946,6.251,2947,6.251,2948,6.251,2949,6.251]],["title/miscellaneous/functions.html",[2950,3.208,2951,5.335]],["body/miscellaneous/functions.html",[7,0.294,11,0.005,26,0.005,27,0.005,34,4.294,2920,6.923,2950,5.975,2951,6.923,2952,7.746]],["title/index.html",[7,0.158,2953,4.159,2954,4.159]],["body/index.html",[4,0.038,11,0.006,26,0.004,27,0.004,67,3.977,116,3.793,245,1.749,439,3.628,630,1.6,772,3.58,1206,3.58,1875,5.505,2896,3.58,2897,5.505,2955,4.347,2956,4.347,2957,7.155,2958,6.16,2959,4.347,2960,4.347,2961,4.347,2962,4.347,2963,6.16,2964,7.155,2965,4.347,2966,4.347,2967,7.784,2968,4.347,2969,8.965,2970,4.347,2971,8.775,2972,4.347,2973,4.347,2974,4.347,2975,4.347,2976,6.16,2977,4.347,2978,7.155,2979,4.347,2980,4.347,2981,4.347,2982,4.347,2983,4.347,2984,4.347,2985,7.784,2986,8.965,2987,8.533,2988,4.347,2989,6.16,2990,4.347,2991,4.347,2992,4.347,2993,4.347,2994,4.347,2995,8.533,2996,6.16,2997,7.784,2998,4.347,2999,6.16,3000,4.347,3001,4.347,3002,6.16,3003,8.533,3004,7.784,3005,4.347,3006,6.16,3007,4.347,3008,4.347,3009,4.347,3010,4.347,3011,7.784,3012,4.347,3013,4.347,3014,4.347,3015,4.347,3016,6.16,3017,4.347,3018,4.347,3019,4.347,3020,4.347,3021,4.347,3022,6.16,3023,4.347,3024,4.347,3025,4.347,3026,6.16,3027,4.347,3028,4.347,3029,6.956,3030,6.16,3031,4.347,3032,4.347,3033,4.347,3034,4.347,3035,4.347,3036,4.347,3037,4.347,3038,6.16,3039,4.347,3040,4.347,3041,4.347,3042,4.347,3043,4.347,3044,4.347,3045,4.347,3046,4.347,3047,4.347,3048,4.347,3049,6.16,3050,4.347,3051,4.347,3052,4.347,3053,4.347,3054,4.347,3055,6.16,3056,4.347,3057,4.347,3058,4.347,3059,6.16,3060,6.16,3061,4.347,3062,4.347,3063,4.347,3064,4.347,3065,4.347,3066,4.347,3067,4.347,3068,4.347,3069,4.347,3070,4.347,3071,4.347,3072,3.885,3073,4.347,3074,4.347,3075,4.347,3076,4.347,3077,4.347,3078,4.347,3079,3.885]],["title/modules.html",[30,3.08]],["body/modules.html",[11,0.004,26,0.004,27,0.004,29,4.731,30,2.795,40,4.262,41,4.475,42,4.475,43,4.475,44,4.475,45,4.475,46,4.262,47,4.475,48,4.475,49,4.475,50,4.475,51,4.475,52,3.777,53,4.475,54,4.475,122,4.262,3029,9.06,3080,10.138,3081,10.138,3082,10.138]],["title/overview.html",[3083,6.04]],["body/overview.html",[2,1.076,11,0.006,18,3.89,26,0.003,27,0.003,28,0.985,29,7.769,30,1.315,31,1.315,32,1.376,33,1.376,34,1.315,35,1.376,36,1.376,37,2.578,38,2.578,39,2.578,40,6.44,41,5.585,42,6.31,43,5.031,44,5.585,45,6.399,46,5.319,47,5.031,48,6.31,49,6.31,50,5.031,51,5.031,52,5.326,53,6.31,54,6.31,55,3.89,56,4.219,57,4.054,58,4.219,59,3.503,60,5.273,61,4.219,62,4.219,63,4.567,64,5.509,65,2.162,66,1.376,67,1.345,89,3.89,122,6.236,133,1.057,198,2.671,269,5.319,305,2.578,306,2.578,307,2.578,308,3.723,309,4.084,310,3.373,311,5.066,424,0.308,454,4.408,847,2.376,1174,5.319,1231,2.105,1325,5.091,1355,2.578,1356,2.578,1357,2.578,1451,3.89,1506,2.578,1507,2.578,1540,3.89,1563,2.578,1564,2.578,1700,2.578,1702,2.578,1704,5.091,1877,2.578,1879,2.578,1931,3.89,1952,2.578,1953,2.578,2018,5.319,2087,2.578,2088,2.578,2089,2.578,2230,2.578,2231,2.578,2291,5.319,2308,2.578,2309,2.578,2310,2.578,2624,2.578,2626,2.578,2783,2.578,2785,2.578,2869,2.578,2870,2.578,2871,2.578,3083,2.578,3084,2.885,3085,2.885,3086,2.885,3087,2.885]],["title/properties.html",[427,0.616,2926,3.717]],["body/properties.html",[11,0.006,26,0.005,27,0.005,245,3.085,427,0.791,3072,6.853,3079,6.853,3088,7.669,3089,7.669,3090,7.669]],["title/miscellaneous/variables.html",[2950,3.208,3091,5.335]],["body/miscellaneous/variables.html",[7,0.229,11,0.006,15,0.503,24,2.294,26,0.004,27,0.004,90,4.724,145,4.393,150,0.245,156,6.512,159,2.97,162,5.381,163,4.959,168,5.381,171,3.708,173,5.381,193,3.847,195,3.468,202,4.644,217,2.422,231,4.644,238,3.094,360,2.52,374,2.52,419,3.847,422,5.597,468,5.199,469,5.023,685,3.364,1080,4.393,1232,4.644,1239,5.917,1240,4.644,1307,4.183,1353,4.959,1718,6.856,1888,5.381,1890,5.381,1894,6.319,1925,4.959,2922,5.381,2950,4.644,3091,5.381,3092,7.672,3093,6.021,3094,7.672,3095,6.021,3096,6.021,3097,7.672,3098,6.021,3099,6.021,3100,6.021,3101,6.021,3102,6.021,3103,6.021]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":202,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":3102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":3089,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2909,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2915,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2916,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2917,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2918,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2919,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2900,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2904,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2903,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2901,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2912,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2902,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2913,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2914,"title":{},"body":{"coverage.html":{}}}],["09:00",{"_index":641,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["1",{"_index":295,"title":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Privilege-1.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"injectables/PaiementNabooService.html":{}}}],["1.5.4",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2826,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["1000",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["10000",{"_index":1686,"title":{},"body":{"controllers/PaiementController.html":{}}}],["108",{"_index":3086,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["11.0.6",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["1234567890",{"_index":854,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["1234567890'})@isnotempty()@matches(/^\\+?\\d{9,15",{"_index":839,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["12:00",{"_index":659,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["12:30",{"_index":664,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["15",{"_index":847,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"overview.html":{}}}],["16:00",{"_index":649,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["17",{"_index":3084,"title":{},"body":{"overview.html":{}}}],["1h",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{}}}],["1})@isnotempty",{"_index":833,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["1})@isnotempty()@isint",{"_index":801,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{}}}],["2",{"_index":447,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["2.6.0",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/ResponseService.html":{},"controllers/UtilisateurController.html":{}}}],["201",{"_index":1429,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"injectables/ResponseService.html":{},"controllers/UtilisateurController.html":{}}}],["221786360662",{"_index":2619,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["221786360662'})@validateif(o",{"_index":2606,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["2})@validateif(o",{"_index":2587,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["3.0.1",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3085,"title":{},"body":{"overview.html":{}}}],["300",{"_index":2045,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["3]):([0",{"_index":644,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["4",{"_index":3087,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2191,"title":{},"body":{"injectables/ResponseService.html":{}}}],["401",{"_index":1922,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/ResponseService.html":{}}}],["403",{"_index":2192,"title":{},"body":{"injectables/ResponseService.html":{}}}],["404",{"_index":2193,"title":{},"body":{"injectables/ResponseService.html":{},"controllers/UtilisateurController.html":{}}}],["409",{"_index":2195,"title":{},"body":{"injectables/ResponseService.html":{}}}],["5",{"_index":611,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["5.0.1",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":2194,"title":{},"body":{"injectables/ResponseService.html":{}}}],["5]\\d",{"_index":645,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["6.5.0",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":2906,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2908,"title":{},"body":{"coverage.html":{}}}],["7.8.1",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2907,"title":{},"body":{"coverage.html":{}}}],["770000000",{"_index":1684,"title":{},"body":{"controllers/PaiementController.html":{}}}],["8",{"_index":2594,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["8/10",{"_index":2911,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2910,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2905,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":846,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["accept",{"_index":1725,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["access_token",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":2877,"title":{},"body":{"modules/ValidationModule.html":{}}}],["accesstoken",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["accès",{"_index":1394,"title":{},"body":{"injectables/LogService.html":{},"injectables/ResponseService.html":{},"modules/UtilisateurModule.html":{}}}],["accéder",{"_index":1281,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{}}}],["actif",{"_index":605,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateTarifDto.html":{}}}],["actifs",{"_index":2350,"title":{},"body":{"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["action",{"_index":685,"title":{},"body":{"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateLogDto.html":{},"miscellaneous/variables.html":{}}}],["activ",{"_index":2503,"title":{},"body":{"injectables/TarifService.html":{}}}],["activate",{"_index":877,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["activate(@param('id",{"_index":929,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["activate(id",{"_index":883,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["activateddevise",{"_index":987,"title":{},"body":{"injectables/DeviseService.html":{}}}],["activatedtarif",{"_index":2501,"title":{},"body":{"injectables/TarifService.html":{}}}],["active",{"_index":950,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["activer",{"_index":885,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{}}}],["actives",{"_index":953,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["activée",{"_index":974,"title":{},"body":{"injectables/DeviseService.html":{}}}],["actuelle",{"_index":1073,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["adaptez",{"_index":1361,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["admin",{"_index":753,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["admin'].includes(user.privilege.libelle",{"_index":1087,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["admin'})@isnotempty({message",{"_index":746,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{}}}],["admin'})@validateif(o",{"_index":2601,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["administrateur",{"_index":1485,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["administrateurs",{"_index":1090,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["adminuser",{"_index":2815,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["adminuser.privilege?.libelle",{"_index":2816,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["afficher",{"_index":2013,"title":{},"body":{"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{}}}],["ajout",{"_index":1430,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/ReservationModule.html":{},"modules/UtilisateurModule.html":{}}}],["ajoute",{"_index":2630,"title":{},"body":{"modules/UploadModule.html":{}}}],["ajouter",{"_index":1143,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{}}}],["align",{"_index":2059,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["allowing",{"_index":3017,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":3065,"title":{},"body":{"index.html":{}}}],["amount",{"_index":1685,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{}}}],["ancienmotdepasse123",{"_index":440,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["ancienmotdepasse123'})@isnotempty",{"_index":433,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["annuler",{"_index":2004,"title":{},"body":{"controllers/ReservationController.html":{}}}],["annulertransaction",{"_index":1640,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementService.html":{}}}],["annulertransaction(@param('orderid",{"_index":1675,"title":{},"body":{"controllers/PaiementController.html":{}}}],["annulertransaction(orderid",{"_index":1644,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementService.html":{}}}],["annulée",{"_index":1851,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["api_key",{"_index":484,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["api_secret",{"_index":486,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["apibearerauth",{"_index":1018,"title":{},"body":{"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["apibearerauth('access",{"_index":1328,"title":{},"body":{"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["apibody",{"_index":1544,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["apiconsumes",{"_index":1543,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["apiconsumes('application/json",{"_index":2361,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["apiconsumes('multipart/form",{"_index":1548,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["apikey",{"_index":1711,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["apioperation",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["apiparam",{"_index":1665,"title":{},"body":{"controllers/PaiementController.html":{},"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["apiproperty",{"_index":435,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["apiproperty({description",{"_index":710,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["apiproperty({example",{"_index":430,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{}}}],["apiproperty({type",{"_index":537,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["apipropertyoptional",{"_index":850,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["apipropertyoptional({example",{"_index":2583,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["apipropertyoptional({type",{"_index":2603,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["apiquery",{"_index":2427,"title":{},"body":{"controllers/TarifController.html":{}}}],["apiresponse",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/UtilisateurController.html":{}}}],["apitags",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["apitags('authentification",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('devises",{"_index":917,"title":{},"body":{"controllers/DeviseController.html":{}}}],["apitags('disponibilités",{"_index":1019,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["apitags('logs",{"_index":1327,"title":{},"body":{"controllers/LogController.html":{}}}],["apitags('mode",{"_index":1545,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["apitags('médecins",{"_index":1453,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["apitags('paiement",{"_index":1666,"title":{},"body":{"controllers/PaiementController.html":{}}}],["apitags('privilèges",{"_index":1934,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["apitags('réservations",{"_index":2020,"title":{},"body":{"controllers/ReservationController.html":{}}}],["apitags('services",{"_index":2214,"title":{},"body":{"controllers/ServiceController.html":{}}}],["apitags('sous",{"_index":2292,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["apitags('statuts",{"_index":2359,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["apitags('tarifs",{"_index":2428,"title":{},"body":{"controllers/TarifController.html":{}}}],["apitags('utilisateurs",{"_index":2747,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["app.controller",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":2987,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1772,"title":{},"body":{"injectables/PaiementNabooService.html":{},"controllers/SousServiceController.html":{}}}],["applications",{"_index":2963,"title":{},"body":{"index.html":{}}}],["appliquée",{"_index":200,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arborescence",{"_index":1376,"title":{},"body":{"injectables/LogService.html":{}}}],["arg0",{"_index":1187,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["asc",{"_index":1126,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["associ",{"_index":1494,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["associer",{"_index":1427,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["async",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["asynccontextinterceptor",{"_index":138,"title":{"injectables/AsyncContextInterceptor.html":{}},"body":{"injectables/AsyncContextInterceptor.html":{},"coverage.html":{}}}],["asynccontextmiddleware",{"_index":179,"title":{"injectables/AsyncContextMiddleware.html":{}},"body":{"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["asynclocalstorage",{"_index":156,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["asynclocalstorage.getstore",{"_index":3096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asynclocalstorage.run(context",{"_index":212,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["asynclocalstorage.run(store",{"_index":178,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["attente",{"_index":2134,"title":{},"body":{"injectables/ReservationService.html":{}}}],["au",{"_index":1113,"title":{},"body":{"injectables/DisponibiliteService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["auth",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["auth.guard.ts",{"_index":1266,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":1274,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:15",{"_index":1276,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:6",{"_index":1272,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["auth.service",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/UtilisateurModule.html":{}}}],["auth/jwt",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DisponibiliteController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["auth/optional",{"_index":2744,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["authcontroller",{"_index":213,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentifi",{"_index":208,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["authentifier",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard",{"_index":1277,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1268,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["authheader",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["authheader?.split",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["authmodule,uploadmodule",{"_index":2791,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["author",{"_index":3072,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1726,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["authservice",{"_index":269,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoris",{"_index":1581,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["autorisée",{"_index":1840,"title":{},"body":{"injectables/PaiementService.html":{}}}],["autorisés",{"_index":1082,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["autre",{"_index":205,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["autres",{"_index":888,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"modules/ValidationModule.html":{}}}],["available",{"_index":1901,"title":{},"body":{"injectables/PrismaService.html":{}}}],["avec",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["avoir",{"_index":2790,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["await",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":3006,"title":{},"body":{"index.html":{}}}],["axios",{"_index":1731,"title":{},"body":{"injectables/PaiementNabooService.html":{},"dependencies.html":{}}}],["axios.delete",{"_index":1763,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["axios.get",{"_index":1758,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["axios.post(url",{"_index":1768,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["axios.put",{"_index":1750,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["ayant",{"_index":2727,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["babaissandiaye242@gmail.com",{"_index":598,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{}}}],["babaissandiaye242@gmail.com'})@isnotempty()@isemail",{"_index":592,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{}}}],["backers",{"_index":3066,"title":{},"body":{"index.html":{}}}],["badrequest",{"_index":2158,"title":{},"body":{"injectables/ResponseService.html":{}}}],["badrequest(errors",{"_index":2164,"title":{},"body":{"injectables/ResponseService.html":{}}}],["badrequestexception",{"_index":958,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/UtilisateurService.html":{}}}],["badrequestexception(\"aucune",{"_index":2841,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["badrequestexception('erreur",{"_index":2047,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["badrequestexception('signature",{"_index":1858,"title":{},"body":{"injectables/PaiementService.html":{}}}],["badrequestexception('une",{"_index":962,"title":{},"body":{"injectables/DeviseService.html":{}}}],["badrequestexception(`erreur",{"_index":2050,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["badrequestexception(`jour",{"_index":1104,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["based",{"_index":3001,"title":{},"body":{"index.html":{}}}],["basedir",{"_index":2636,"title":{},"body":{"injectables/UploadService.html":{}}}],["batch",{"_index":522,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["bba93370af52ecd7a64549a9bf09aa321a2d4dd0",{"_index":1793,"title":{},"body":{"injectables/PaiementService.html":{}}}],["bcrypt",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createutilisateurdto.password",{"_index":2825,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["bcrypt.hash(updateutilisateurdto.password",{"_index":2854,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["bearer",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PaiementNabooService.html":{}}}],["binary",{"_index":707,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["binary'})@isoptional",{"_index":2604,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["blacklist",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["blacklist/blacklist.service",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["blacklistservice",{"_index":308,"title":{"injectables/BlacklistService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["blacklisttoken",{"_index":409,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["blacklisttoken(token",{"_index":414,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["board",{"_index":3058,"title":{},"body":{"index.html":{}}}],["body",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["body.order_id",{"_index":1859,"title":{},"body":{"injectables/PaiementService.html":{}}}],["body.transaction_status",{"_index":1862,"title":{},"body":{"injectables/PaiementService.html":{}}}],["boolean",{"_index":607,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateTarifDto.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":3082,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3080,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":2054,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["buffers",{"_index":2053,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["buffers.push.bind(buffers",{"_index":2056,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["building",{"_index":2958,"title":{},"body":{"index.html":{}}}],["calcul",{"_index":1071,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["callhandler",{"_index":146,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["canactivate",{"_index":1269,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1273,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cancel",{"_index":2001,"title":{},"body":{"controllers/ReservationController.html":{},"injectables/ReservationService.html":{}}}],["cancel(@param('id",{"_index":2026,"title":{},"body":{"controllers/ReservationController.html":{}}}],["cancel(id",{"_index":2002,"title":{},"body":{"controllers/ReservationController.html":{},"injectables/ReservationService.html":{}}}],["cancelled",{"_index":1843,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["cancelledstatut",{"_index":1841,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["cancelledstatut.id",{"_index":1849,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["caractères",{"_index":752,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["caractères'})@matches(/^(?=.*[a",{"_index":2595,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["cas",{"_index":2770,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["cashout",{"_index":1641,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{}}}],["cashout(@body",{"_index":1689,"title":{},"body":{"controllers/PaiementController.html":{}}}],["cashout(body",{"_index":1651,"title":{},"body":{"controllers/PaiementController.html":{}}}],["cashout(params",{"_index":1716,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["catch",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PrismaService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{}}}],["category",{"_index":1739,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["ce",{"_index":963,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/TarifService.html":{},"modules/ValidationModule.html":{}}}],["center",{"_index":2060,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["cette",{"_index":1282,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{}}}],["ceux",{"_index":2726,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["chambres",{"_index":472,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["champs",{"_index":2740,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["chang",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":2142,"title":{},"body":{"injectables/ReservationService.html":{}}}],["changepassword",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@request",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(req",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(utilisateurid",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassworddto",{"_index":223,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["changeprivilege",{"_index":2794,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["changeprivilege(id",{"_index":2798,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["changeprivilegedto",{"_index":443,"title":{"classes/ChangePrivilegeDto.html":{}},"body":{"classes/ChangePrivilegeDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["changeprivilegedto.idprivilege",{"_index":2865,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["changer",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["channel",{"_index":3032,"title":{},"body":{"index.html":{}}}],["chaque",{"_index":1145,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["chaîne",{"_index":751,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{}}}],["check",{"_index":2995,"title":{},"body":{"index.html":{}}}],["chemin",{"_index":1362,"title":{},"body":{"modules/LogModule.html":{},"injectables/LogService.html":{}}}],["chevauchements",{"_index":2123,"title":{},"body":{"injectables/ReservationService.html":{}}}],["chiffres",{"_index":848,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["chographie",{"_index":803,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["chographie'})@isnotempty",{"_index":802,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{}}}],["choisissez",{"_index":1105,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["chou",{"_index":1876,"title":{},"body":{"injectables/PaiementService.html":{}}}],["chouée",{"_index":1972,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["class",{"_index":21,"title":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"classes/UtilisateurDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":424,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"classes/UtilisateurDto.html":{},"overview.html":{}}}],["clicks",{"_index":3016,"title":{},"body":{"index.html":{}}}],["client",{"_index":2728,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["clients",{"_index":2755,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["clients')@apibearerauth('access",{"_index":2724,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["cloud",{"_index":3000,"title":{},"body":{"index.html":{}}}],["cloud_name",{"_index":482,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["cloudinary",{"_index":477,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{},"dependencies.html":{}}}],["cloudinary.config",{"_index":481,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["cloudinary.uploader.destroy(fileid",{"_index":527,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["cloudinary.uploader.upload_stream",{"_index":491,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["cloudinary/cloudinary.service",{"_index":2628,"title":{},"body":{"modules/UploadModule.html":{}}}],["cloudinaryservice",{"_index":454,"title":{"injectables/CloudinaryService.html":{}},"body":{"injectables/CloudinaryService.html":{},"modules/ReservationModule.html":{},"modules/UploadModule.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_disponibilitemodule",{"_index":1036,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["cluster_disponibilitemodule_providers",{"_index":1037,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["cluster_logmodule",{"_index":1355,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_exports",{"_index":1356,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_logmodule_imports",{"_index":1358,"title":{},"body":{"modules/LogModule.html":{}}}],["cluster_logmodule_providers",{"_index":1357,"title":{},"body":{"modules/LogModule.html":{},"overview.html":{}}}],["cluster_medecinsousservicemodule",{"_index":1506,"title":{},"body":{"modules/MedecinSousserviceModule.html":{},"overview.html":{}}}],["cluster_medecinsousservicemodule_providers",{"_index":1507,"title":{},"body":{"modules/MedecinSousserviceModule.html":{},"overview.html":{}}}],["cluster_modepaiementmodule",{"_index":1563,"title":{},"body":{"modules/ModePaiementModule.html":{},"overview.html":{}}}],["cluster_modepaiementmodule_imports",{"_index":1565,"title":{},"body":{"modules/ModePaiementModule.html":{}}}],["cluster_modepaiementmodule_providers",{"_index":1564,"title":{},"body":{"modules/ModePaiementModule.html":{},"overview.html":{}}}],["cluster_paiementmodule",{"_index":1700,"title":{},"body":{"modules/PaiementModule.html":{},"overview.html":{}}}],["cluster_paiementmodule_imports",{"_index":1702,"title":{},"body":{"modules/PaiementModule.html":{},"overview.html":{}}}],["cluster_paiementmodule_providers",{"_index":1701,"title":{},"body":{"modules/PaiementModule.html":{}}}],["cluster_prismamodule",{"_index":1877,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1879,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1878,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_privilegemodule",{"_index":1952,"title":{},"body":{"modules/PrivilegeModule.html":{},"overview.html":{}}}],["cluster_privilegemodule_providers",{"_index":1953,"title":{},"body":{"modules/PrivilegeModule.html":{},"overview.html":{}}}],["cluster_reservationmodule",{"_index":2087,"title":{},"body":{"modules/ReservationModule.html":{},"overview.html":{}}}],["cluster_reservationmodule_exports",{"_index":2089,"title":{},"body":{"modules/ReservationModule.html":{},"overview.html":{}}}],["cluster_reservationmodule_providers",{"_index":2088,"title":{},"body":{"modules/ReservationModule.html":{},"overview.html":{}}}],["cluster_servicemodule",{"_index":2230,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_exports",{"_index":2231,"title":{},"body":{"modules/ServiceModule.html":{},"overview.html":{}}}],["cluster_servicemodule_imports",{"_index":2232,"title":{},"body":{"modules/ServiceModule.html":{}}}],["cluster_servicemodule_providers",{"_index":2233,"title":{},"body":{"modules/ServiceModule.html":{}}}],["cluster_sousservicemodule",{"_index":2308,"title":{},"body":{"modules/SousServiceModule.html":{},"overview.html":{}}}],["cluster_sousservicemodule_exports",{"_index":2310,"title":{},"body":{"modules/SousServiceModule.html":{},"overview.html":{}}}],["cluster_sousservicemodule_imports",{"_index":2311,"title":{},"body":{"modules/SousServiceModule.html":{}}}],["cluster_sousservicemodule_providers",{"_index":2309,"title":{},"body":{"modules/SousServiceModule.html":{},"overview.html":{}}}],["cluster_statutreservationmodule",{"_index":2369,"title":{},"body":{"modules/StatutReservationModule.html":{}}}],["cluster_statutreservationmodule_providers",{"_index":2370,"title":{},"body":{"modules/StatutReservationModule.html":{}}}],["cluster_tarifmodule",{"_index":2453,"title":{},"body":{"modules/TarifModule.html":{}}}],["cluster_tarifmodule_providers",{"_index":2454,"title":{},"body":{"modules/TarifModule.html":{}}}],["cluster_uploadmodule",{"_index":2624,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_uploadmodule_exports",{"_index":2626,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_uploadmodule_providers",{"_index":2625,"title":{},"body":{"modules/UploadModule.html":{}}}],["cluster_utilisateurmodule",{"_index":2783,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_exports",{"_index":2785,"title":{},"body":{"modules/UtilisateurModule.html":{},"overview.html":{}}}],["cluster_utilisateurmodule_imports",{"_index":2784,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["cluster_utilisateurmodule_providers",{"_index":2786,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["cluster_validationmodule",{"_index":2869,"title":{},"body":{"modules/ValidationModule.html":{},"overview.html":{}}}],["cluster_validationmodule_exports",{"_index":2870,"title":{},"body":{"modules/ValidationModule.html":{},"overview.html":{}}}],["cluster_validationmodule_providers",{"_index":2871,"title":{},"body":{"modules/ValidationModule.html":{},"overview.html":{}}}],["code",{"_index":536,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"injectables/ReservationDocumentService.html":{},"classes/UpdateDeviseDto-1.html":{}}}],["come",{"_index":3023,"title":{},"body":{"index.html":{}}}],["commencer",{"_index":842,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["completed",{"_index":1865,"title":{},"body":{"injectables/PaiementService.html":{}}}],["compléter",{"_index":1835,"title":{},"body":{"injectables/PaiementService.html":{}}}],["computedsignature",{"_index":1853,"title":{},"body":{"injectables/PaiementService.html":{}}}],["concern",{"_index":1502,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["configmodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('jwt_expires_in",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('jwt_secret",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmed",{"_index":1864,"title":{},"body":{"injectables/PaiementService.html":{}}}],["confirmedstatut",{"_index":1863,"title":{},"body":{"injectables/PaiementService.html":{}}}],["confirmedstatut.id",{"_index":1866,"title":{},"body":{"injectables/PaiementService.html":{}}}],["confirmée",{"_index":809,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["confirmée'})@isnotempty()@isstring",{"_index":808,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{}}}],["confirmée'})@isoptional()@isstring",{"_index":2569,"title":{},"body":{"classes/UpdateStatutReservationDto-1.html":{}}}],["conflict",{"_index":2159,"title":{},"body":{"injectables/ResponseService.html":{}}}],["conflict(message",{"_index":2167,"title":{},"body":{"injectables/ResponseService.html":{}}}],["conflictexception",{"_index":1577,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["conflictexception('erreur",{"_index":1757,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["conflictexception(this.response.conflict('créneau",{"_index":2129,"title":{},"body":{"injectables/ReservationService.html":{}}}],["conflictexception(this.response.conflict('médecin",{"_index":2122,"title":{},"body":{"injectables/ReservationService.html":{}}}],["conflictexception(this.response.conflict('paiement",{"_index":1800,"title":{},"body":{"injectables/PaiementService.html":{}}}],["conflictexception(this.response.conflict('réservation",{"_index":2138,"title":{},"body":{"injectables/ReservationService.html":{}}}],["conflictexception(this.response.conflict('statut",{"_index":2107,"title":{},"body":{"injectables/ReservationService.html":{}}}],["conflictexception(this.responseservice.conflict(\"ce",{"_index":2380,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["conflictexception(this.responseservice.conflict(`mode",{"_index":1588,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["conflictexception(this.responseservice.conflict(`service",{"_index":2259,"title":{},"body":{"injectables/ServiceService.html":{}}}],["conflictexception(this.responseservice.conflict(`un",{"_index":2250,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["conflit",{"_index":2169,"title":{},"body":{"injectables/ResponseService.html":{}}}],["connect",{"_index":1080,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"miscellaneous/variables.html":{}}}],["connectdevisedto",{"_index":533,"title":{"classes/ConnectDeviseDto.html":{}},"body":{"classes/ConnectDeviseDto.html":{},"coverage.html":{}}}],["connectdisponibilitedto",{"_index":545,"title":{"classes/ConnectDisponibiliteDto.html":{}},"body":{"classes/ConnectDisponibiliteDto.html":{},"coverage.html":{}}}],["connectdossiermedicaldto",{"_index":548,"title":{"classes/ConnectDossierMedicalDto.html":{}},"body":{"classes/ConnectDossierMedicalDto.html":{},"coverage.html":{}}}],["connected",{"_index":1899,"title":{},"body":{"injectables/PrismaService.html":{}}}],["connectlogdto",{"_index":551,"title":{"classes/ConnectLogDto.html":{}},"body":{"classes/ConnectLogDto.html":{},"coverage.html":{}}}],["connectmedecinsousservicedto",{"_index":554,"title":{"classes/ConnectMedecinSousServiceDto.html":{}},"body":{"classes/ConnectMedecinSousServiceDto.html":{},"coverage.html":{}}}],["connectmodepaiementdto",{"_index":557,"title":{"classes/ConnectModePaiementDto.html":{}},"body":{"classes/ConnectModePaiementDto.html":{},"coverage.html":{}}}],["connectordonnancedto",{"_index":562,"title":{"classes/ConnectOrdonnanceDto.html":{}},"body":{"classes/ConnectOrdonnanceDto.html":{},"coverage.html":{}}}],["connectpaiementdto",{"_index":565,"title":{"classes/ConnectPaiementDto.html":{}},"body":{"classes/ConnectPaiementDto.html":{},"coverage.html":{}}}],["connectprivilegedto",{"_index":570,"title":{"classes/ConnectPrivilegeDto.html":{}},"body":{"classes/ConnectPrivilegeDto.html":{},"coverage.html":{}}}],["connectreservationdto",{"_index":573,"title":{"classes/ConnectReservationDto.html":{}},"body":{"classes/ConnectReservationDto.html":{},"coverage.html":{}}}],["connectservicedto",{"_index":576,"title":{"classes/ConnectServiceDto.html":{}},"body":{"classes/ConnectServiceDto.html":{},"coverage.html":{}}}],["connectsousservicedto",{"_index":580,"title":{"classes/ConnectSousServiceDto.html":{}},"body":{"classes/ConnectSousServiceDto.html":{},"coverage.html":{}}}],["connectstatutreservationdto",{"_index":583,"title":{"classes/ConnectStatutReservationDto.html":{}},"body":{"classes/ConnectStatutReservationDto.html":{},"coverage.html":{}}}],["connecttarifdto",{"_index":587,"title":{"classes/ConnectTarifDto.html":{}},"body":{"classes/ConnectTarifDto.html":{},"coverage.html":{}}}],["connectutilisateurdto",{"_index":235,"title":{"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"coverage.html":{}}}],["connectutilisateurdto.password",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["connexion",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["console.error",{"_index":1904,"title":{},"body":{"injectables/PrismaService.html":{}}}],["console.log",{"_index":1898,"title":{},"body":{"injectables/PrismaService.html":{}}}],["const",{"_index":159,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PaiementController.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["constructor(eventemitter",{"_index":1887,"title":{},"body":{"injectables/PrismaService.html":{}}}],["constructor(exceptionservice",{"_index":2883,"title":{},"body":{"injectables/ValidationService.html":{}}}],["constructor(httpresponseservice",{"_index":1182,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["constructor(logservice",{"_index":1345,"title":{},"body":{"injectables/LogListener.html":{}}}],["constructor(prisma",{"_index":411,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/BlacklistService.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"injectables/ValidationService.html":{}}}],["constructor(responseservice",{"_index":1271,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(utilisateurservice",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["consultation",{"_index":773,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"injectables/PaiementNabooService.html":{},"classes/UpdateReservationDto-1.html":{}}}],["contactez",{"_index":2813,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["contenant",{"_index":2236,"title":{},"body":{"modules/ServiceModule.html":{}}}],["contenir",{"_index":844,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["content",{"_index":1724,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["contenu",{"_index":516,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/UpdateOrdonnanceDto.html":{}}}],["context",{"_index":152,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["context.interceptor.ts",{"_index":141,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"coverage.html":{}}}],["context.interceptor.ts:7",{"_index":147,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["context.middleware.ts",{"_index":181,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["context.middleware.ts:7",{"_index":187,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["context.switchtohttp().getrequest",{"_index":161,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["context/async",{"_index":140,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["continue",{"_index":1607,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('devises",{"_index":918,"title":{},"body":{"controllers/DeviseController.html":{}}}],["controller('disponibilites",{"_index":1020,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["controller('logs",{"_index":1329,"title":{},"body":{"controllers/LogController.html":{}}}],["controller('medecin",{"_index":1455,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["controller('mode",{"_index":1546,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["controller('paiement",{"_index":1667,"title":{},"body":{"controllers/PaiementController.html":{}}}],["controller('privileges",{"_index":1939,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["controller('reservations",{"_index":2021,"title":{},"body":{"controllers/ReservationController.html":{}}}],["controller('services",{"_index":2215,"title":{},"body":{"controllers/ServiceController.html":{}}}],["controller('sous",{"_index":2293,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["controller('statuts",{"_index":2360,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["controller('tarifs",{"_index":2429,"title":{},"body":{"controllers/TarifController.html":{}}}],["controller('utilisateur",{"_index":2748,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"controllers/MedecinSousServiceController.html":{},"modules/MedecinSousserviceModule.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"controllers/ReservationController.html":{},"modules/ReservationModule.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"overview.html":{}}}],["convertir",{"_index":1076,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["courses",{"_index":3037,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":2896,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cr",{"_index":1595,"title":{},"body":{"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["create",{"_index":878,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["create(@body",{"_index":919,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["create(@request",{"_index":1549,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["create(createdevisedto",{"_index":947,"title":{},"body":{"injectables/DeviseService.html":{}}}],["create(createdisponibilitedto",{"_index":1048,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["create(createprivilegedto",{"_index":1919,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{}}}],["create(createservicedto",{"_index":2239,"title":{},"body":{"injectables/ServiceService.html":{}}}],["create(createsousservicedto",{"_index":2315,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["create(createtarifdto",{"_index":2462,"title":{},"body":{"injectables/TarifService.html":{}}}],["create(createutilisateurdto",{"_index":2800,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["create(dto",{"_index":890,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{}}}],["create(file",{"_index":2712,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["create(req",{"_index":1523,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["createbadrequestexception",{"_index":1176,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createbadrequestexception(arg0",{"_index":1185,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["created",{"_index":1495,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/ResponseService.html":{},"injectables/StatutReservationService.html":{}}}],["created(data",{"_index":2171,"title":{},"body":{"injectables/ResponseService.html":{}}}],["createdat",{"_index":860,"title":{},"body":{"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["createdevisedto",{"_index":603,"title":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto.html":{},"coverage.html":{}}}],["createdevisedto.actif",{"_index":967,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdevisedto.code",{"_index":961,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdevisedto.libelle",{"_index":970,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdevisedto.symbole",{"_index":971,"title":{},"body":{"injectables/DeviseService.html":{}}}],["createdisponibilitedto",{"_index":633,"title":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{}},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto.html":{},"coverage.html":{}}}],["createdisponibilitedto.heuredebut",{"_index":1118,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.heurefin",{"_index":1119,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.idmedecinsousservice",{"_index":1111,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.joursemaine.trim().tolowercase",{"_index":1102,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.pausedebut",{"_index":1120,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdisponibilitedto.pausefin",{"_index":1121,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["createdossiermedicaldto",{"_index":676,"title":{"classes/CreateDossierMedicalDto.html":{}},"body":{"classes/CreateDossierMedicalDto.html":{},"coverage.html":{}}}],["createforbiddenexception",{"_index":1177,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createforbiddenexception(message",{"_index":1188,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createhmac('sha256",{"_index":1854,"title":{},"body":{"injectables/PaiementService.html":{}}}],["createinternalserverexception",{"_index":1178,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createinternalserverexception(message",{"_index":1191,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createlog",{"_index":1364,"title":{},"body":{"injectables/LogService.html":{}}}],["createlog(payload",{"_index":1367,"title":{},"body":{"injectables/LogService.html":{}}}],["createlogdto",{"_index":684,"title":{"classes/CreateLogDto.html":{}},"body":{"classes/CreateLogDto.html":{},"coverage.html":{}}}],["createmedecinsousservicedto",{"_index":689,"title":{"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{}},"body":{"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"coverage.html":{}}}],["createmodepaiementdto",{"_index":699,"title":{"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{}},"body":{"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"coverage.html":{}}}],["createnotfoundexception",{"_index":1179,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createnotfoundexception(message",{"_index":1193,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createordonnancedto",{"_index":717,"title":{"classes/CreateOrdonnanceDto.html":{}},"body":{"classes/CreateOrdonnanceDto.html":{},"coverage.html":{}}}],["createpaiementdto",{"_index":720,"title":{"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{}},"body":{"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/UpdatePaiementDto-1.html":{},"coverage.html":{}}}],["createpaiementnaboodto",{"_index":736,"title":{"classes/CreatePaiementNabooDto.html":{}},"body":{"classes/CreatePaiementNabooDto.html":{},"controllers/PaiementController.html":{},"injectables/PaiementService.html":{},"coverage.html":{}}}],["createprivilegedto",{"_index":743,"title":{"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{}},"body":{"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["createprivilegedto.libelle",{"_index":1969,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["createreservationdto",{"_index":754,"title":{"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{}},"body":{"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"coverage.html":{}}}],["createservicedto",{"_index":781,"title":{"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{}},"body":{"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"coverage.html":{}}}],["createservicedto.iconurl",{"_index":2251,"title":{},"body":{"injectables/ServiceService.html":{}}}],["createservicedto.libelle",{"_index":2249,"title":{},"body":{"injectables/ServiceService.html":{}}}],["createsousservicedto",{"_index":791,"title":{"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{}},"body":{"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"coverage.html":{}}}],["createsousservicedto.iconurl",{"_index":2326,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["createsousservicedto.libelle",{"_index":2325,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["createstatutreservationdto",{"_index":804,"title":{"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{}},"body":{"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"coverage.html":{}}}],["createtarifdto",{"_index":810,"title":{"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{}},"body":{"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["createtarifdto.actif",{"_index":2480,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtarifdto.iddevise",{"_index":2475,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtarifdto.idsousservice",{"_index":2473,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtarifdto.montant",{"_index":2479,"title":{},"body":{"injectables/TarifService.html":{}}}],["createtransaction",{"_index":1712,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["createtransaction(params",{"_index":1719,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["createutilisateurdto",{"_index":820,"title":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{}},"body":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["createutilisateurdto.email",{"_index":2818,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.idprivilege",{"_index":2811,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.nom",{"_index":2827,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.prenom",{"_index":2828,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createutilisateurdto.telephone",{"_index":2822,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["createvalidationexception",{"_index":1180,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["createvalidationexception(errors",{"_index":1195,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["creerpaiement",{"_index":1642,"title":{},"body":{"controllers/PaiementController.html":{}}}],["creerpaiement(@body",{"_index":1669,"title":{},"body":{"controllers/PaiementController.html":{}}}],["creerpaiement(dto",{"_index":1658,"title":{},"body":{"controllers/PaiementController.html":{}}}],["crypto",{"_index":1794,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/UploadService.html":{}}}],["crypto.randombytes(8).tostring('hex",{"_index":2665,"title":{},"body":{"injectables/UploadService.html":{}}}],["création",{"_index":1116,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PaiementNabooService.html":{}}}],["crée",{"_index":168,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"miscellaneous/variables.html":{}}}],["créer",{"_index":892,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["créneaux",{"_index":1056,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["créée",{"_index":973,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{}}}],["currentheure",{"_index":1139,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["currentuser",{"_index":1049,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["currentuser.id",{"_index":1085,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["currentuser.privilege?.libelle",{"_index":1803,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["d'autres",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["d'en",{"_index":1115,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["d'un",{"_index":1013,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{}}}],["d'upload",{"_index":501,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["d'utilisateur",{"_index":176,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["dans",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogService.html":{},"controllers/UtilisateurController.html":{},"modules/ValidationModule.html":{}}}],["data",{"_index":421,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["data')@apibearerauth('access",{"_index":2714,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["data')@apibody({type",{"_index":1525,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["data.amount_to_pay",{"_index":1755,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["data.checkout_url",{"_index":1753,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["data.date",{"_index":2146,"title":{},"body":{"injectables/ReservationService.html":{}}}],["data.email",{"_index":2851,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.heuredebut",{"_index":2147,"title":{},"body":{"injectables/ReservationService.html":{}}}],["data.heurefin",{"_index":2148,"title":{},"body":{"injectables/ReservationService.html":{}}}],["data.idmedecinsousservice",{"_index":2140,"title":{},"body":{"injectables/ReservationService.html":{}}}],["data.idprivilege",{"_index":2858,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.message",{"_index":1766,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["data.nom",{"_index":2847,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.order_id",{"_index":1754,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["data.password",{"_index":2853,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.prenom",{"_index":2849,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.profil",{"_index":2860,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.profilurl",{"_index":2830,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.telephone",{"_index":2856,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["data.transaction_status",{"_index":1756,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["data.typeconsultation",{"_index":2149,"title":{},"body":{"injectables/ReservationService.html":{}}}],["database",{"_index":1900,"title":{},"body":{"injectables/PrismaService.html":{}}}],["database_connection",{"_index":1239,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":415,"title":{},"body":{"injectables/BlacklistService.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["date().toisostring",{"_index":2190,"title":{},"body":{"injectables/ResponseService.html":{}}}],["date(decoded.exp",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(dto.date",{"_index":2110,"title":{},"body":{"injectables/ReservationService.html":{}}}],["date(reservation.date",{"_index":2144,"title":{},"body":{"injectables/ReservationService.html":{}}}],["date(reservation.date).tolocaledatestring",{"_index":2067,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["date.tolocalestring('fr",{"_index":2145,"title":{},"body":{"injectables/ReservationService.html":{}}}],["datecreation",{"_index":1306,"title":{},"body":{"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{}}}],["datemiseajour",{"_index":677,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["datereservation",{"_index":2109,"title":{},"body":{"injectables/ReservationService.html":{}}}],["datereservation.tolocalestring('fr",{"_index":2111,"title":{},"body":{"injectables/ReservationService.html":{}}}],["de",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["deactivate",{"_index":2401,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["deactivate(@param('id",{"_index":2443,"title":{},"body":{"controllers/TarifController.html":{}}}],["deactivate(id",{"_index":2406,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["decoded",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{}}}],["deeper",{"_index":3034,"title":{},"body":{"index.html":{}}}],["default",{"_index":468,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ResponseService.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["delete",{"_index":879,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["delete(':id",{"_index":931,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["delete(':id')@apibearerauth('access",{"_index":1442,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":896,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["delete(':id')@useguards(jwtauthguard)@apibearerauth('access",{"_index":2737,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["delete(':id')@useguards(jwtauthguard)@apioperation({summary",{"_index":2003,"title":{},"body":{"controllers/ReservationController.html":{}}}],["delete(':orderid",{"_index":1674,"title":{},"body":{"controllers/PaiementController.html":{}}}],["delete(':orderid')@apioperation({summary",{"_index":1645,"title":{},"body":{"controllers/PaiementController.html":{}}}],["delete(@param('id",{"_index":932,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["delete(id",{"_index":895,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["delete)'})@apiparam({name",{"_index":2354,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["delete)'})@apiresponse({status",{"_index":1443,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["deletedat",{"_index":627,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["deletefile",{"_index":457,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["deletefile(fileid",{"_index":461,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["deletefile(filepath",{"_index":1233,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["deletetransaction",{"_index":1713,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["deletetransaction(orderid",{"_index":1721,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2985,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":3005,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":2996,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":3015,"title":{},"body":{"index.html":{}}}],["depuis",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["des",{"_index":525,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["desc",{"_index":1398,"title":{},"body":{"injectables/LogService.html":{}}}],["description",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePrivilegeDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"controllers/UtilisateurController.html":{},"index.html":{},"properties.html":{}}}],["details",{"_index":1353,"title":{},"body":{"injectables/LogListener.html":{},"injectables/LogService.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":2972,"title":{},"body":{"index.html":{}}}],["devez",{"_index":1079,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/PrivilegeService.html":{}}}],["devise",{"_index":858,"title":{"classes/Devise.html":{}},"body":{"classes/Devise.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"classes/Tarif.html":{},"injectables/TarifService.html":{},"coverage.html":{}}}],["devise.dto",{"_index":915,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto.html":{}}}],["devise.dto.ts",{"_index":535,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"coverage.html":{}}}],["devise.dto.ts:11",{"_index":614,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:12",{"_index":2515,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:13",{"_index":544,"title":{},"body":{"classes/ConnectDeviseDto.html":{}}}],["devise.dto.ts:15",{"_index":615,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:17",{"_index":2517,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:18",{"_index":540,"title":{},"body":{"classes/ConnectDeviseDto.html":{}}}],["devise.dto.ts:19",{"_index":609,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:22",{"_index":2518,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:23",{"_index":628,"title":{},"body":{"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:27",{"_index":2514,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:30",{"_index":632,"title":{},"body":{"classes/CreateDeviseDto-1.html":{}}}],["devise.dto.ts:34",{"_index":2516,"title":{},"body":{"classes/UpdateDeviseDto-1.html":{}}}],["devise.dto.ts:7",{"_index":612,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["devise.entity",{"_index":2399,"title":{},"body":{"classes/Tarif.html":{}}}],["devise.service",{"_index":914,"title":{},"body":{"controllers/DeviseController.html":{}}}],["devise/devise.controller",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["devise/devise.service",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["devisecontroller",{"_index":70,"title":{"controllers/DeviseController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DeviseController.html":{},"coverage.html":{}}}],["devisedto",{"_index":934,"title":{"classes/DeviseDto.html":{}},"body":{"classes/DeviseDto.html":{},"coverage.html":{}}}],["devises",{"_index":876,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{}}}],["deviseservice",{"_index":55,"title":{"injectables/DeviseService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"coverage.html":{},"overview.html":{}}}],["devtools",{"_index":3044,"title":{},"body":{"index.html":{}}}],["digest('hex",{"_index":1857,"title":{},"body":{"injectables/PaiementService.html":{}}}],["dimanche",{"_index":1100,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["dirpath",{"_index":2658,"title":{},"body":{"injectables/UploadService.html":{}}}],["disable",{"_index":1204,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["discord",{"_index":3031,"title":{},"body":{"index.html":{}}}],["disp",{"_index":2119,"title":{},"body":{"injectables/ReservationService.html":{}}}],["disp.heuredebut",{"_index":2121,"title":{},"body":{"injectables/ReservationService.html":{}}}],["disp.joursemaine.tolowercase",{"_index":2120,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dispo",{"_index":1148,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["dispo.idmedecinsousservice",{"_index":1149,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["disponibilit",{"_index":670,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{}}}],["disponibilite",{"_index":990,"title":{"classes/Disponibilite.html":{}},"body":{"classes/Disponibilite.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"injectables/ReservationService.html":{},"coverage.html":{}}}],["disponibilite.controller",{"_index":1039,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["disponibilite.dto",{"_index":1016,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts",{"_index":546,"title":{},"body":{"classes/ConnectDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"coverage.html":{}}}],["disponibilite.dto.ts:11",{"_index":675,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:12",{"_index":547,"title":{},"body":{"classes/ConnectDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:13",{"_index":658,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:15",{"_index":673,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:17",{"_index":2522,"title":{},"body":{"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:18",{"_index":648,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:19",{"_index":674,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:22",{"_index":2523,"title":{},"body":{"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:23",{"_index":651,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:26",{"_index":672,"title":{},"body":{"classes/CreateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:28",{"_index":663,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:29",{"_index":2521,"title":{},"body":{"classes/UpdateDisponibiliteDto-1.html":{}}}],["disponibilite.dto.ts:33",{"_index":666,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.dto.ts:8",{"_index":654,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilite.entity",{"_index":1419,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["disponibilite.idmedecinsousservice",{"_index":1132,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["disponibilite.service",{"_index":1015,"title":{},"body":{"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{}}}],["disponibilite/disponibilite.controller",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["disponibilite/disponibilite.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["disponibilite/disponibilite.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["disponibilitecontroller",{"_index":69,"title":{"controllers/DisponibiliteController.html":{}},"body":{"modules/AppModule.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"coverage.html":{}}}],["disponibilitedto",{"_index":1027,"title":{"classes/DisponibiliteDto.html":{}},"body":{"classes/DisponibiliteDto.html":{},"coverage.html":{}}}],["disponibilitemodule",{"_index":41,"title":{"modules/DisponibiliteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DisponibiliteModule.html":{},"modules.html":{},"overview.html":{}}}],["disponibilites",{"_index":1004,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"injectables/ReservationService.html":{}}}],["disponibiliteservice",{"_index":56,"title":{"injectables/DisponibiliteService.html":{}},"body":{"modules/AppModule.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"coverage.html":{},"overview.html":{}}}],["disponibilité'})@isnotempty()@isstring",{"_index":657,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["disponibilités",{"_index":1008,"title":{},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{}}}],["disponible",{"_index":194,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["disponibles",{"_index":1057,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["dive",{"_index":3033,"title":{},"body":{"index.html":{}}}],["doc",{"_index":2052,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.end",{"_index":2074,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.fontsize(12).text(`réservation",{"_index":2062,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.fontsize(16).text('confirmation",{"_index":2058,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.movedown",{"_index":2061,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.on('data",{"_index":2055,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.on('end",{"_index":2057,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.text(`date",{"_index":2066,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.text(`heure",{"_index":2068,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.text(`montant",{"_index":2071,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["doc.text(`service",{"_index":2063,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["document.service",{"_index":1707,"title":{},"body":{"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"modules/ReservationModule.html":{}}}],["document.service.ts",{"_index":2029,"title":{},"body":{"injectables/ReservationDocumentService.html":{},"coverage.html":{}}}],["document.service.ts:10",{"_index":2032,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["document.service.ts:19",{"_index":2038,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["document.service.ts:46",{"_index":2034,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["document/reservation",{"_index":1706,"title":{},"body":{"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"modules/ReservationModule.html":{},"coverage.html":{}}}],["documentation",{"_index":2897,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentservice",{"_index":1780,"title":{},"body":{"injectables/PaiementService.html":{}}}],["doe",{"_index":851,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["doe'})@isnotempty()@isstring",{"_index":835,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["doe'})@validateif(o",{"_index":2590,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["doit",{"_index":750,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["donnée",{"_index":2842,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["dossiermedical",{"_index":1151,"title":{"classes/DossierMedical.html":{}},"body":{"classes/DossierMedical.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["dossiermedical.dto.ts",{"_index":549,"title":{},"body":{"classes/ConnectDossierMedicalDto.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{},"coverage.html":{}}}],["dossiermedical.dto.ts:11",{"_index":683,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:12",{"_index":550,"title":{},"body":{"classes/ConnectDossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:15",{"_index":682,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:17",{"_index":2527,"title":{},"body":{"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:20",{"_index":680,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:23",{"_index":2525,"title":{},"body":{"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:27",{"_index":681,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{}}}],["dossiermedical.dto.ts:30",{"_index":2526,"title":{},"body":{"classes/UpdateDossierMedicalDto.html":{}}}],["dossiermedical.entity",{"_index":2703,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dossiermedicaldto",{"_index":1165,"title":{"classes/DossierMedicalDto.html":{}},"body":{"classes/DossierMedicalDto.html":{},"coverage.html":{}}}],["dossiers",{"_index":2681,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dotenv",{"_index":1732,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["dotenv.config",{"_index":1734,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["dto",{"_index":894,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PaiementController.html":{},"injectables/PaiementService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{}}}],["dto.date",{"_index":2143,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dto.heuredebut",{"_index":2116,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dto.heurefin",{"_index":2117,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dto.icon",{"_index":1589,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["dto.idmedecin",{"_index":1483,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["dto.idmedecinsousservice",{"_index":2102,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dto.idmodepaiement",{"_index":1807,"title":{},"body":{"injectables/PaiementService.html":{}}}],["dto.idreservation",{"_index":1796,"title":{},"body":{"injectables/PaiementService.html":{}}}],["dto.idsousservice",{"_index":1478,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["dto.idstatutreservation",{"_index":2105,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dto.libelle",{"_index":1587,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{}}}],["dto.typeconsultation",{"_index":2132,"title":{},"body":{"injectables/ReservationService.html":{}}}],["dto/change",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["dto/connect",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"coverage.html":{}}}],["dto/create",{"_index":626,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PaiementController.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["dto/devise.dto.ts",{"_index":935,"title":{},"body":{"classes/DeviseDto.html":{},"coverage.html":{}}}],["dto/devise.dto.ts:10",{"_index":940,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:14",{"_index":937,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:18",{"_index":941,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:22",{"_index":942,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:26",{"_index":936,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:31",{"_index":938,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:36",{"_index":943,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.dto.ts:42",{"_index":939,"title":{},"body":{"classes/DeviseDto.html":{}}}],["dto/devise.entity.ts",{"_index":859,"title":{},"body":{"classes/Devise.html":{},"coverage.html":{}}}],["dto/devise.entity.ts:11",{"_index":867,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:15",{"_index":864,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:19",{"_index":868,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:23",{"_index":869,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:27",{"_index":863,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:33",{"_index":872,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:38",{"_index":865,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:43",{"_index":873,"title":{},"body":{"classes/Devise.html":{}}}],["dto/devise.entity.ts:49",{"_index":866,"title":{},"body":{"classes/Devise.html":{}}}],["dto/disponibilite.dto.ts",{"_index":1028,"title":{},"body":{"classes/DisponibiliteDto.html":{},"coverage.html":{}}}],["dto/disponibilite.dto.ts:10",{"_index":1033,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:14",{"_index":1034,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:18",{"_index":1031,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:22",{"_index":1032,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:27",{"_index":1029,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:32",{"_index":1035,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.dto.ts:38",{"_index":1030,"title":{},"body":{"classes/DisponibiliteDto.html":{}}}],["dto/disponibilite.entity.ts",{"_index":991,"title":{},"body":{"classes/Disponibilite.html":{},"coverage.html":{}}}],["dto/disponibilite.entity.ts:11",{"_index":997,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:16",{"_index":998,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:20",{"_index":999,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:24",{"_index":995,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:28",{"_index":996,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:33",{"_index":1000,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:38",{"_index":993,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:43",{"_index":1001,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/disponibilite.entity.ts:49",{"_index":994,"title":{},"body":{"classes/Disponibilite.html":{}}}],["dto/dossiermedical.dto.ts",{"_index":1166,"title":{},"body":{"classes/DossierMedicalDto.html":{},"coverage.html":{}}}],["dto/dossiermedical.dto.ts:10",{"_index":1172,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:14",{"_index":1171,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:18",{"_index":1170,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:23",{"_index":1168,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:28",{"_index":1167,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:33",{"_index":1173,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.dto.ts:39",{"_index":1169,"title":{},"body":{"classes/DossierMedicalDto.html":{}}}],["dto/dossiermedical.entity.ts",{"_index":1152,"title":{},"body":{"classes/DossierMedical.html":{},"coverage.html":{}}}],["dto/dossiermedical.entity.ts:11",{"_index":1160,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:16",{"_index":1161,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:20",{"_index":1159,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:24",{"_index":1158,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:29",{"_index":1156,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:34",{"_index":1162,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:39",{"_index":1155,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:44",{"_index":1163,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/dossiermedical.entity.ts:50",{"_index":1157,"title":{},"body":{"classes/DossierMedical.html":{}}}],["dto/log.dto.ts",{"_index":1334,"title":{},"body":{"classes/LogDto.html":{},"coverage.html":{}}}],["dto/log.dto.ts:10",{"_index":1339,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:14",{"_index":1335,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:18",{"_index":1340,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:23",{"_index":1337,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:28",{"_index":1336,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:33",{"_index":1341,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.dto.ts:39",{"_index":1338,"title":{},"body":{"classes/LogDto.html":{}}}],["dto/log.entity.ts",{"_index":1305,"title":{},"body":{"classes/Log.html":{},"coverage.html":{}}}],["dto/log.entity.ts:11",{"_index":1312,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:16",{"_index":1313,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:20",{"_index":1308,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:24",{"_index":1314,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:29",{"_index":1310,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:34",{"_index":1316,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:39",{"_index":1309,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:44",{"_index":1315,"title":{},"body":{"classes/Log.html":{}}}],["dto/log.entity.ts:50",{"_index":1311,"title":{},"body":{"classes/Log.html":{}}}],["dto/medecinsousservice.dto.ts",{"_index":1464,"title":{},"body":{"classes/MedecinSousServiceDto.html":{},"coverage.html":{}}}],["dto/medecinsousservice.dto.ts:10",{"_index":1467,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.dto.ts:15",{"_index":1465,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.dto.ts:20",{"_index":1468,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.dto.ts:26",{"_index":1466,"title":{},"body":{"classes/MedecinSousServiceDto.html":{}}}],["dto/medecinsousservice.entity.ts",{"_index":1405,"title":{},"body":{"classes/MedecinSousService.html":{},"coverage.html":{}}}],["dto/medecinsousservice.entity.ts:14",{"_index":1410,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:19",{"_index":1411,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:24",{"_index":1412,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:29",{"_index":1413,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:34",{"_index":1416,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:40",{"_index":1409,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:46",{"_index":1415,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:51",{"_index":1407,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:56",{"_index":1417,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/medecinsousservice.entity.ts:62",{"_index":1408,"title":{},"body":{"classes/MedecinSousService.html":{}}}],["dto/modepaiement.dto.ts",{"_index":1556,"title":{},"body":{"classes/ModePaiementDto.html":{},"coverage.html":{}}}],["dto/modepaiement.dto.ts:10",{"_index":1560,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:14",{"_index":1561,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:19",{"_index":1559,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:24",{"_index":1557,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:29",{"_index":1562,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.dto.ts:35",{"_index":1558,"title":{},"body":{"classes/ModePaiementDto.html":{}}}],["dto/modepaiement.entity.ts",{"_index":1511,"title":{},"body":{"classes/ModePaiement.html":{},"coverage.html":{}}}],["dto/modepaiement.entity.ts:11",{"_index":1516,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:15",{"_index":1517,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:20",{"_index":1515,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:26",{"_index":1518,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:31",{"_index":1513,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:36",{"_index":1519,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/modepaiement.entity.ts:42",{"_index":1514,"title":{},"body":{"classes/ModePaiement.html":{}}}],["dto/ordonnance.dto.ts",{"_index":1620,"title":{},"body":{"classes/OrdonnanceDto.html":{},"coverage.html":{}}}],["dto/ordonnance.dto.ts:10",{"_index":1624,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:14",{"_index":1621,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:19",{"_index":1622,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:24",{"_index":1625,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.dto.ts:30",{"_index":1623,"title":{},"body":{"classes/OrdonnanceDto.html":{}}}],["dto/ordonnance.entity.ts",{"_index":1609,"title":{},"body":{"classes/Ordonnance.html":{},"coverage.html":{}}}],["dto/ordonnance.entity.ts:11",{"_index":1613,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:16",{"_index":1615,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:21",{"_index":1614,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:25",{"_index":1610,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:30",{"_index":1617,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:35",{"_index":1616,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:40",{"_index":1611,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:45",{"_index":1618,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/ordonnance.entity.ts:51",{"_index":1612,"title":{},"body":{"classes/Ordonnance.html":{}}}],["dto/paiement.dto.ts",{"_index":1692,"title":{},"body":{"classes/PaiementDto.html":{},"coverage.html":{}}}],["dto/paiement.dto.ts:10",{"_index":1696,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:15",{"_index":1697,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:19",{"_index":1698,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:23",{"_index":1695,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:28",{"_index":1693,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:33",{"_index":1699,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.dto.ts:39",{"_index":1694,"title":{},"body":{"classes/PaiementDto.html":{}}}],["dto/paiement.entity.ts",{"_index":1626,"title":{},"body":{"classes/Paiement.html":{},"coverage.html":{}}}],["dto/paiement.entity.ts:12",{"_index":1630,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:17",{"_index":1632,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:22",{"_index":1634,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:27",{"_index":1631,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:31",{"_index":1635,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:35",{"_index":1629,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:40",{"_index":1636,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:45",{"_index":1633,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:50",{"_index":1627,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:55",{"_index":1637,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/paiement.entity.ts:61",{"_index":1628,"title":{},"body":{"classes/Paiement.html":{}}}],["dto/privilege.dto.ts",{"_index":1946,"title":{},"body":{"classes/PrivilegeDto.html":{},"coverage.html":{}}}],["dto/privilege.dto.ts:10",{"_index":1949,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:14",{"_index":1950,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:19",{"_index":1947,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:24",{"_index":1951,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.dto.ts:30",{"_index":1948,"title":{},"body":{"classes/PrivilegeDto.html":{}}}],["dto/privilege.entity.ts",{"_index":1907,"title":{},"body":{"classes/Privilege.html":{},"coverage.html":{}}}],["dto/privilege.entity.ts:11",{"_index":1911,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:15",{"_index":1912,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:21",{"_index":1914,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:26",{"_index":1909,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:31",{"_index":1913,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/privilege.entity.ts:37",{"_index":1910,"title":{},"body":{"classes/Privilege.html":{}}}],["dto/reservation.dto.ts",{"_index":2080,"title":{},"body":{"classes/ReservationDto.html":{},"coverage.html":{}}}],["dto/reservation.dto.ts:10",{"_index":2084,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:14",{"_index":2085,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:18",{"_index":2083,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:23",{"_index":2081,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:28",{"_index":2086,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.dto.ts:34",{"_index":2082,"title":{},"body":{"classes/ReservationDto.html":{}}}],["dto/reservation.entity.ts",{"_index":1984,"title":{},"body":{"classes/Reservation.html":{},"coverage.html":{}}}],["dto/reservation.entity.ts:14",{"_index":1988,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:19",{"_index":1991,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:24",{"_index":1989,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:29",{"_index":1990,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:33",{"_index":1995,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:37",{"_index":1987,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:42",{"_index":1997,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:47",{"_index":1992,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:52",{"_index":1994,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:58",{"_index":1993,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:63",{"_index":1985,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:68",{"_index":1996,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reservation.entity.ts:74",{"_index":1986,"title":{},"body":{"classes/Reservation.html":{}}}],["dto/reset",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/service.dto.ts",{"_index":2224,"title":{},"body":{"classes/ServiceDto.html":{},"coverage.html":{}}}],["dto/service.dto.ts:10",{"_index":2227,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:14",{"_index":2228,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:19",{"_index":2225,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:24",{"_index":2229,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.dto.ts:30",{"_index":2226,"title":{},"body":{"classes/ServiceDto.html":{}}}],["dto/service.entity.ts",{"_index":2196,"title":{},"body":{"classes/Service.html":{},"coverage.html":{}}}],["dto/service.entity.ts:11",{"_index":2200,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:15",{"_index":2201,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:21",{"_index":2202,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:26",{"_index":2198,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:31",{"_index":2203,"title":{},"body":{"classes/Service.html":{}}}],["dto/service.entity.ts:37",{"_index":2199,"title":{},"body":{"classes/Service.html":{}}}],["dto/sousservice.dto.ts",{"_index":2302,"title":{},"body":{"classes/SousServiceDto.html":{},"coverage.html":{}}}],["dto/sousservice.dto.ts:10",{"_index":2305,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:14",{"_index":2306,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:19",{"_index":2303,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:24",{"_index":2307,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.dto.ts:30",{"_index":2304,"title":{},"body":{"classes/SousServiceDto.html":{}}}],["dto/sousservice.entity.ts",{"_index":2265,"title":{},"body":{"classes/SousService.html":{},"coverage.html":{}}}],["dto/sousservice.entity.ts:13",{"_index":2269,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:17",{"_index":2271,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:22",{"_index":2270,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:27",{"_index":2273,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:33",{"_index":2272,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:39",{"_index":2274,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:44",{"_index":2267,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:49",{"_index":2275,"title":{},"body":{"classes/SousService.html":{}}}],["dto/sousservice.entity.ts:55",{"_index":2268,"title":{},"body":{"classes/SousService.html":{}}}],["dto/statutreservation.dto.ts",{"_index":2363,"title":{},"body":{"classes/StatutReservationDto.html":{},"coverage.html":{}}}],["dto/statutreservation.dto.ts:10",{"_index":2366,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:14",{"_index":2367,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:19",{"_index":2364,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:24",{"_index":2368,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.dto.ts:30",{"_index":2365,"title":{},"body":{"classes/StatutReservationDto.html":{}}}],["dto/statutreservation.entity.ts",{"_index":2338,"title":{},"body":{"classes/StatutReservation.html":{},"coverage.html":{}}}],["dto/statutreservation.entity.ts:11",{"_index":2341,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:15",{"_index":2342,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:21",{"_index":2343,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:26",{"_index":2339,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:31",{"_index":2344,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/statutreservation.entity.ts:37",{"_index":2340,"title":{},"body":{"classes/StatutReservation.html":{}}}],["dto/tarif.dto.ts",{"_index":2446,"title":{},"body":{"classes/TarifDto.html":{},"coverage.html":{}}}],["dto/tarif.dto.ts:10",{"_index":2450,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:15",{"_index":2451,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:19",{"_index":2447,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:24",{"_index":2448,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:29",{"_index":2452,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.dto.ts:35",{"_index":2449,"title":{},"body":{"classes/TarifDto.html":{}}}],["dto/tarif.entity.ts",{"_index":2388,"title":{},"body":{"classes/Tarif.html":{},"coverage.html":{}}}],["dto/tarif.entity.ts:12",{"_index":2393,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:17",{"_index":2395,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:22",{"_index":2394,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:27",{"_index":2396,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:31",{"_index":2389,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:36",{"_index":2397,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:41",{"_index":2392,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:46",{"_index":2390,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:51",{"_index":2398,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/tarif.entity.ts:57",{"_index":2391,"title":{},"body":{"classes/Tarif.html":{}}}],["dto/update",{"_index":916,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["dto/utilisateur.dto.ts",{"_index":2772,"title":{},"body":{"classes/UtilisateurDto.html":{},"coverage.html":{}}}],["dto/utilisateur.dto.ts:10",{"_index":2776,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:14",{"_index":2777,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:18",{"_index":2779,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:22",{"_index":2775,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:26",{"_index":2778,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:30",{"_index":2781,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:35",{"_index":2780,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:40",{"_index":2773,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:45",{"_index":2782,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.dto.ts:51",{"_index":2774,"title":{},"body":{"classes/UtilisateurDto.html":{}}}],["dto/utilisateur.entity.ts",{"_index":2680,"title":{},"body":{"classes/Utilisateur.html":{},"coverage.html":{}}}],["dto/utilisateur.entity.ts:103",{"_index":2691,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:16",{"_index":2688,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:20",{"_index":2692,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:24",{"_index":2696,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:28",{"_index":2687,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:32",{"_index":2695,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:36",{"_index":2700,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:41",{"_index":2698,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:46",{"_index":2689,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:51",{"_index":2697,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:57",{"_index":2699,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:63",{"_index":2686,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:69",{"_index":2690,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:75",{"_index":2693,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:81",{"_index":2694,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:86",{"_index":2684,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:91",{"_index":2701,"title":{},"body":{"classes/Utilisateur.html":{}}}],["dto/utilisateur.entity.ts:97",{"_index":2685,"title":{},"body":{"classes/Utilisateur.html":{}}}],["du",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePrivilegeDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"modules/ServiceModule.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"injectables/UploadService.html":{}}}],["début",{"_index":660,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["début'})@isnotempty()@matches(/^([01]\\d|2[0",{"_index":643,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["déconnexion",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["défaut",{"_index":623,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"injectables/DeviseService.html":{}}}],["déj",{"_index":199,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["désactiv",{"_index":2508,"title":{},"body":{"injectables/TarifService.html":{}}}],["désactiver",{"_index":886,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/TarifController.html":{}}}],["détect",{"_index":2170,"title":{},"body":{"injectables/ResponseService.html":{}}}],["d’un",{"_index":2419,"title":{},"body":{"controllers/TarifController.html":{}}}],["e2e",{"_index":2980,"title":{},"body":{"index.html":{}}}],["effectuer",{"_index":1584,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["efficient",{"_index":2959,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":2993,"title":{},"body":{"index.html":{}}}],["elle",{"_index":949,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/UtilisateurService.html":{}}}],["email",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["email'})@apiresponse({status",{"_index":2732,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["emitter",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["en",{"_index":1064,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/ReservationService.html":{}}}],["enableimplicitconversion",{"_index":2892,"title":{},"body":{"injectables/ValidationService.html":{}}}],["endpoint",{"_index":2754,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["ensure",{"_index":2991,"title":{},"body":{"index.html":{}}}],["ensuredirectory",{"_index":2637,"title":{},"body":{"injectables/UploadService.html":{}}}],["ensuredirectory(folder",{"_index":2642,"title":{},"body":{"injectables/UploadService.html":{}}}],["enterprise",{"_index":3048,"title":{},"body":{"index.html":{}}}],["entier",{"_index":1254,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["entre",{"_index":845,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["enum",{"_index":774,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"controllers/PaiementController.html":{},"classes/UpdateReservationDto-1.html":{}}}],["envoy",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["equals",{"_index":2126,"title":{},"body":{"injectables/ReservationService.html":{}}}],["err",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["erreur",{"_index":494,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ExceptionService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/ResponseService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{}}}],["error",{"_index":492,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ResponseService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{}}}],["error(\"résultat",{"_index":500,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["error('cl",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('method",{"_index":1210,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["error(`échec",{"_index":524,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["error(message",{"_index":2173,"title":{},"body":{"injectables/ResponseService.html":{}}}],["error.children",{"_index":1227,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["error.children.length",{"_index":1228,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["error.constraints",{"_index":1224,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["error.message",{"_index":523,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/UploadService.html":{}}}],["error_url",{"_index":1746,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["errors",{"_index":1198,"title":{},"body":{"injectables/ExceptionService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"injectables/ValidationService.html":{}}}],["errors.foreach((error",{"_index":1223,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["eslint",{"_index":1203,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["eslint/no",{"_index":1207,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["est",{"_index":193,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/DeviseService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["et",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUtilisateurDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["etatpaiement",{"_index":755,"title":{},"body":{"classes/CreateReservationDto.html":{},"injectables/PaiementService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{}}}],["etattransaction",{"_index":721,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PaiementService.html":{},"classes/UpdatePaiementDto.html":{}}}],["eur",{"_index":621,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["eventemitter",{"_index":1890,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["eventemitter.emit('prisma.log",{"_index":3099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter2",{"_index":1888,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["eventemittermodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["ex",{"_index":197,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"classes/CreateDeviseDto.html":{}}}],["example",{"_index":439,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/PaiementController.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"index.html":{}}}],["exception",{"_index":1390,"title":{},"body":{"injectables/LogService.html":{}}}],["exception/exception.service",{"_index":2874,"title":{},"body":{"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["exception/response/response.service",{"_index":2875,"title":{},"body":{"modules/ValidationModule.html":{}}}],["exceptionfactory",{"_index":2893,"title":{},"body":{"injectables/ValidationService.html":{}}}],["exceptionservice",{"_index":1174,"title":{"injectables/ExceptionService.html":{}},"body":{"injectables/ExceptionService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["executioncontext",{"_index":144,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["existant",{"_index":1801,"title":{},"body":{"injectables/PaiementService.html":{}}}],["existe",{"_index":964,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["existing",{"_index":1491,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{}}}],["existing.idmedecin",{"_index":1500,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["existingdevise",{"_index":959,"title":{},"body":{"injectables/DeviseService.html":{}}}],["existingdisponibilite",{"_index":1109,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["existingemail",{"_index":2817,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["existingphone",{"_index":2821,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["existingprivilege",{"_index":1967,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["existingprivilege.id",{"_index":1980,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["existingreservation",{"_index":2124,"title":{},"body":{"injectables/ReservationService.html":{}}}],["existingservice",{"_index":2247,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["existingtarif",{"_index":2477,"title":{},"body":{"injectables/TarifService.html":{}}}],["existinguser",{"_index":2837,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["existinguser.profilurl",{"_index":2843,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["experience",{"_index":3036,"title":{},"body":{"index.html":{}}}],["expir",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresat",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlacklistService.html":{}}}],["expiresin",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["exporte",{"_index":2880,"title":{},"body":{"modules/ValidationModule.html":{}}}],["exporter",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"modules/ReservationModule.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["express",{"_index":191,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":465,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["ext",{"_index":2662,"title":{},"body":{"injectables/UploadService.html":{}}}],["extends",{"_index":1267,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrismaService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"injectables/ValidationService.html":{}}}],["extractjwt",{"_index":1291,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1295,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken()(req",{"_index":1298,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["faible",{"_index":2599,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["failed",{"_index":1868,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/PrismaService.html":{}}}],["faire",{"_index":1653,"title":{},"body":{"controllers/PaiementController.html":{}}}],["false",{"_index":539,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DossierMedical.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/ModePaiement.html":{},"classes/Ordonnance.html":{},"classes/Paiement.html":{},"injectables/PaiementNabooService.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{},"classes/Service.html":{},"classes/SousService.html":{},"classes/StatutReservation.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"injectables/ValidationService.html":{}}}],["false})@apiproperty({type",{"_index":799,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["false})@isoptional",{"_index":708,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["false})@isoptional()@isdatestring",{"_index":2553,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["false})@isoptional()@isemail",{"_index":1248,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["false})@isoptional()@isenum(['physique",{"_index":2560,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["false})@isoptional()@isint",{"_index":2558,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["false})@isoptional()@isint({message",{"_index":1251,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["false})@isoptional()@isstring",{"_index":785,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["false})@isoptional()@isstring({message",{"_index":1256,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["false})@isoptional()@matches(/^([01]\\d|2[0",{"_index":662,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["fast",{"_index":3009,"title":{},"body":{"index.html":{}}}],["features",{"_index":3019,"title":{},"body":{"index.html":{}}}],["few",{"_index":3011,"title":{},"body":{"index.html":{}}}],["fichier",{"_index":513,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["fichiers",{"_index":678,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":2672,"title":{},"body":{"injectables/UploadService.html":{}}}],["file.buffer?.length",{"_index":512,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["fileid",{"_index":463,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["fileinterceptor",{"_index":1538,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["filename",{"_index":2668,"title":{},"body":{"injectables/UploadService.html":{}}}],["filepath",{"_index":1235,"title":{},"body":{"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["files",{"_index":470,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["files.foreach((file",{"_index":511,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["files.map((file",{"_index":519,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["files?.length",{"_index":510,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["filestorageservice",{"_index":478,"title":{"interfaces/FileStorageService.html":{}},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["fileuploadresult",{"_index":479,"title":{"interfaces/FileUploadResult.html":{}},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/ReservationDocumentService.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["filtrer",{"_index":1247,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["fin",{"_index":665,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateReservationDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateReservationDto-1.html":{}}}],["fin'})@isnotempty()@matches(/^([01]\\d|2[0",{"_index":650,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["findall",{"_index":880,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findall(@query('idsousservice",{"_index":2431,"title":{},"body":{"controllers/TarifController.html":{}}}],["findall(@request",{"_index":1330,"title":{},"body":{"controllers/LogController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{}}}],["findall(currentuser",{"_index":1959,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{}}}],["findall(idsousservice",{"_index":2412,"title":{},"body":{"controllers/TarifController.html":{}}}],["findall(req",{"_index":1320,"title":{},"body":{"controllers/LogController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{}}}],["findall(user",{"_index":1369,"title":{},"body":{"injectables/LogService.html":{}}}],["findallbysousservice",{"_index":2458,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallbysousservice(idsousservice",{"_index":2467,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallbysousservicefull",{"_index":2459,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallbysousservicefull(idsousservice",{"_index":2469,"title":{},"body":{"injectables/TarifService.html":{}}}],["findallclients",{"_index":2709,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findallexceptclients",{"_index":2710,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findalltarifsofsousservice",{"_index":2402,"title":{},"body":{"controllers/TarifController.html":{}}}],["findalltarifsofsousservice(@param('id",{"_index":2435,"title":{},"body":{"controllers/TarifController.html":{}}}],["findalltarifsofsousservice(id",{"_index":2415,"title":{},"body":{"controllers/TarifController.html":{}}}],["findallwithoutadminsandclients",{"_index":2795,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findbyemail",{"_index":2711,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findbyemail(@param('email",{"_index":2763,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["findbyemail(email",{"_index":2730,"title":{},"body":{"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findbyid",{"_index":881,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["findbyid(@param('id",{"_index":923,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/TarifController.html":{}}}],["findbyid(id",{"_index":904,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["findbymedecin",{"_index":1005,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["findbymedecin(@param('idmedecin",{"_index":1025,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["findbymedecin(idmedecin",{"_index":1011,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["findbyserviceid",{"_index":2279,"title":{},"body":{"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["findbyserviceid(@param('idservice",{"_index":2296,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["findbyserviceid(idservice",{"_index":2283,"title":{},"body":{"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["finddisponibilitesbyid",{"_index":1041,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["finddisponibilitesbyid(id",{"_index":1054,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["finddisponibilitesbymedecin",{"_index":1042,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["finddisponibilitesbymedecin(idmedecin",{"_index":1058,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["findone",{"_index":1423,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findone(@param('id",{"_index":1458,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["findone(id",{"_index":1436,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["findprivilegedto",{"_index":1241,"title":{"classes/FindPrivilegeDto.html":{}},"body":{"classes/FindPrivilegeDto.html":{},"coverage.html":{}}}],["findutilisateurbyemail",{"_index":2796,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findutilisateurbyemail(email",{"_index":2807,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["findutilisateurdto",{"_index":1244,"title":{"classes/FindUtilisateurDto.html":{}},"body":{"classes/FindUtilisateurDto.html":{},"coverage.html":{}}}],["float",{"_index":726,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreateTarifDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdateTarifDto.html":{}}}],["focus",{"_index":3018,"title":{},"body":{"index.html":{}}}],["folder",{"_index":466,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/ReservationDocumentService.html":{},"injectables/UploadService.html":{}}}],["follow",{"_index":3052,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":2160,"title":{},"body":{"injectables/ResponseService.html":{}}}],["forbidden(message",{"_index":2177,"title":{},"body":{"injectables/ResponseService.html":{}}}],["forbiddenexception",{"_index":1077,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["forbiddenexception(this.response.forbidden('accès",{"_index":1804,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["forbiddenexception(this.response.forbidden('annulation",{"_index":1839,"title":{},"body":{"injectables/PaiementService.html":{}}}],["forbiddenexception(this.responseservice.forbidden(\"seuls",{"_index":1088,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["forbiddenexception(this.responseservice.forbidden(\"vous",{"_index":1078,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["forbidnonwhitelisted",{"_index":2889,"title":{},"body":{"injectables/ValidationService.html":{}}}],["format",{"_index":542,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["format)'})@isdatestring",{"_index":763,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["formaterrors",{"_index":1181,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["formaterrors(errors",{"_index":1199,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["formatheure",{"_index":1043,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["formatheure(date",{"_index":1061,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["formatter",{"_index":1063,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["fr",{"_index":2112,"title":{},"body":{"injectables/ReservationService.html":{}}}],["framework",{"_index":2957,"title":{},"body":{"index.html":{}}}],["free_money",{"_index":1735,"title":{},"body":{"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["fs",{"_index":2653,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs.mkdir(dirpath",{"_index":2660,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs.unlink(fullpath",{"_index":2678,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs.writefile(filepath",{"_index":2671,"title":{},"body":{"injectables/UploadService.html":{}}}],["fs/promises",{"_index":2654,"title":{},"body":{"injectables/UploadService.html":{}}}],["full",{"_index":3047,"title":{},"body":{"index.html":{}}}],["full_name",{"_index":1681,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{}}}],["fullpath",{"_index":2677,"title":{},"body":{"injectables/UploadService.html":{}}}],["function",{"_index":2921,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":2951,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":3014,"title":{},"body":{"index.html":{}}}],["generateanduploadpdf",{"_index":2030,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["generateanduploadpdf(reservation",{"_index":2033,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["generateanduploadqrcode",{"_index":2031,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["generateanduploadqrcode(reservationid",{"_index":2036,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["generatefilename",{"_index":2638,"title":{},"body":{"injectables/UploadService.html":{}}}],["generatefilename(originalname",{"_index":2644,"title":{},"body":{"injectables/UploadService.html":{}}}],["generercreneauxdisponibles",{"_index":1044,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["generercreneauxdisponibles(disponibilite",{"_index":1066,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["get(':id",{"_index":922,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["get(':id')@apibearerauth('access",{"_index":1437,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["get(':id')@apioperation({summary",{"_index":905,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["get(':id')@useguards(jwtauthguard)@apibearerauth('access",{"_index":2735,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get(':id')@useguards(jwtauthguard)@apioperation({summary",{"_index":2012,"title":{},"body":{"controllers/ReservationController.html":{}}}],["get(':orderid",{"_index":1671,"title":{},"body":{"controllers/PaiementController.html":{}}}],["get(':orderid')@apioperation({summary",{"_index":1662,"title":{},"body":{"controllers/PaiementController.html":{}}}],["get('by",{"_index":2284,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["get('clients",{"_index":2721,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('email/:email",{"_index":2762,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('email/:email')@apioperation({summary",{"_index":2731,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('medecin/:idmedecin",{"_index":1024,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["get('medecin/:idmedecin')@apioperation({summary",{"_index":1012,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["get('non",{"_index":2723,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get('sous",{"_index":2416,"title":{},"body":{"controllers/TarifController.html":{}}}],["get()@apibearerauth('access",{"_index":1432,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["get()@apiconsumes('application/json",{"_index":2281,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["get()@apioperation({summary",{"_index":900,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth('access",{"_index":2719,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["get()@useguards(jwtauthguard)@apioperation({summary",{"_index":2009,"title":{},"body":{"controllers/ReservationController.html":{}}}],["getheaders",{"_index":1714,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnumerosemaine",{"_index":1045,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["getonetransaction",{"_index":1715,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["getonetransaction(orderid",{"_index":1727,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["getting",{"_index":2953,"title":{"index.html":{}},"body":{}}],["gettransaction",{"_index":1643,"title":{},"body":{"controllers/PaiementController.html":{}}}],["gettransaction(@param('orderid",{"_index":1672,"title":{},"body":{"controllers/PaiementController.html":{}}}],["gettransaction(orderid",{"_index":1661,"title":{},"body":{"controllers/PaiementController.html":{}}}],["global",{"_index":1881,"title":{},"body":{"modules/PrismaModule.html":{},"modules/UploadModule.html":{},"controllers/UtilisateurController.html":{},"modules/ValidationModule.html":{}}}],["graph",{"_index":3040,"title":{},"body":{"index.html":{}}}],["grow",{"_index":3062,"title":{},"body":{"index.html":{}}}],["gte",{"_index":2127,"title":{},"body":{"injectables/ReservationService.html":{}}}],["guard",{"_index":2767,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["génération",{"_index":2051,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["générer",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/DisponibiliteService.html":{}}}],["handleerror",{"_index":1776,"title":{},"body":{"injectables/PaiementService.html":{}}}],["handleerror(orderid",{"_index":1783,"title":{},"body":{"injectables/PaiementService.html":{}}}],["handlenaboowebhook",{"_index":1777,"title":{},"body":{"injectables/PaiementService.html":{}}}],["handlenaboowebhook(body",{"_index":1785,"title":{},"body":{"injectables/PaiementService.html":{}}}],["handleprismalogevent",{"_index":1344,"title":{},"body":{"injectables/LogListener.html":{}}}],["handleprismalogevent(payload",{"_index":1347,"title":{},"body":{"injectables/LogListener.html":{}}}],["handlerequest",{"_index":1270,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1275,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["handlesuccess",{"_index":1778,"title":{},"body":{"injectables/PaiementService.html":{}}}],["handlesuccess(orderid",{"_index":1788,"title":{},"body":{"injectables/PaiementService.html":{}}}],["hands",{"_index":3035,"title":{},"body":{"index.html":{}}}],["handy",{"_index":3024,"title":{},"body":{"index.html":{}}}],["hash",{"_index":2664,"title":{},"body":{"injectables/UploadService.html":{}}}],["hashedpassword",{"_index":2824,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["hash}${ext",{"_index":2666,"title":{},"body":{"injectables/UploadService.html":{}}}],["headers",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/PaiementNabooService.html":{}}}],["hello",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":3038,"title":{},"body":{"index.html":{}}}],["here",{"_index":3070,"title":{},"body":{"index.html":{}}}],["heure",{"_index":642,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateReservationDto-1.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto-1.html":{}}}],["heuredebut",{"_index":635,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["heurefin",{"_index":636,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["hh:mm",{"_index":647,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["hh:mm)'})@isstring",{"_index":765,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["historique",{"_index":679,"title":{},"body":{"classes/CreateDossierMedicalDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/UpdateDossierMedicalDto.html":{}}}],["horaires",{"_index":1144,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["horairesdisponibles",{"_index":1137,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["hotel",{"_index":471,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["httpexception",{"_index":1190,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpexception(response",{"_index":1215,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpresponseservice",{"_index":1184,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["https://api.naboopay.com/api/v1/cashout/${params.method.tolowercase",{"_index":1767,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["https://api.naboopay.com/api/v1/transaction/create",{"_index":1751,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["https://api.naboopay.com/api/v1/transaction/delete",{"_index":1764,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["https://api.naboopay.com/api/v1/transaction/get",{"_index":1759,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["https://exemple.com/icon.png",{"_index":798,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["https://nestjs.com",{"_index":3076,"title":{},"body":{"index.html":{}}}],["https://tonsite.com/paiement/error",{"_index":1747,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["https://tonsite.com/paiement/success",{"_index":1745,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["https://votreapi.com'}/reservations/${reservation.id",{"_index":1821,"title":{},"body":{"injectables/PaiementService.html":{}}}],["httpstatus",{"_index":1201,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.bad_request",{"_index":1216,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.forbidden",{"_index":1218,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.internal_server_error",{"_index":1222,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["httpstatus.not_found",{"_index":1220,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["ici",{"_index":2092,"title":{},"body":{"modules/ReservationModule.html":{},"modules/UploadModule.html":{}}}],["icon",{"_index":700,"title":{},"body":{"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{}}}],["icons",{"_index":1592,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["iconurl",{"_index":784,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["iconurl?:string",{"_index":790,"title":{},"body":{"classes/CreateServiceDto-1.html":{}}}],["id",{"_index":449,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateReservationDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["id'})@apiparam({name",{"_index":2352,"title":{},"body":{"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["id'})@apiresponse({status",{"_index":1439,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["iddevise",{"_index":814,"title":{},"body":{"classes/CreateTarifDto-1.html":{},"classes/Tarif.html":{},"injectables/TarifService.html":{}}}],["identifier",{"_index":2898,"title":{},"body":{"coverage.html":{}}}],["idmedecin",{"_index":694,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"injectables/MedecinSousServiceService.html":{},"classes/Ordonnance.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["idmedecinsousservice",{"_index":637,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/Disponibilite.html":{},"injectables/DisponibiliteService.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto-1.html":{}}}],["idmodepaiement",{"_index":730,"title":{},"body":{"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/Paiement.html":{},"injectables/PaiementService.html":{}}}],["idpatient",{"_index":1153,"title":{},"body":{"classes/DossierMedical.html":{},"classes/Ordonnance.html":{}}}],["idprivilege",{"_index":446,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateurService.html":{}}}],["idreservation",{"_index":567,"title":{},"body":{"classes/ConnectPaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/Paiement.html":{},"injectables/PaiementService.html":{}}}],["idservice",{"_index":796,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["idsousservice",{"_index":695,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/MedecinSousService.html":{},"injectables/MedecinSousServiceService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["idstatutreservation",{"_index":761,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"injectables/PaiementService.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto-1.html":{}}}],["idutilisateur",{"_index":1307,"title":{},"body":{"classes/Log.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":211,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{}}}],["image",{"_index":529,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["images",{"_index":526,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["implemented",{"_index":1211,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["implements",{"_index":158,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/CloudinaryService.html":{},"injectables/PrismaService.html":{},"injectables/UploadService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["importer",{"_index":2789,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["imports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LogModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UtilisateurModule.html":{}}}],["imports:[reservationmodule",{"_index":1708,"title":{},"body":{"modules/PaiementModule.html":{}}}],["impossible",{"_index":2679,"title":{},"body":{"injectables/UploadService.html":{}}}],["inactif",{"_index":2507,"title":{},"body":{"injectables/TarifService.html":{}}}],["inactifs",{"_index":2418,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["include",{"_index":1086,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["incorrect",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{}}}],["information",{"_index":2998,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":3021,"title":{},"body":{"index.html":{}}}],["initial",{"_index":2108,"title":{},"body":{"injectables/ReservationService.html":{}}}],["initiée",{"_index":1834,"title":{},"body":{"injectables/PaiementService.html":{}}}],["inject",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["inject('uploadservice",{"_index":1579,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["injectable",{"_index":132,"title":{"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"overview.html":{}}}],["injection",{"_index":2246,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["inscription",{"_index":2716,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["install",{"_index":3013,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":2970,"title":{},"body":{"index.html":{}}}],["int32",{"_index":543,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["integer",{"_index":541,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["interact",{"_index":3041,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":142,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["intercept(context",{"_index":143,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["interdit",{"_index":2179,"title":{},"body":{"injectables/ResponseService.html":{}}}],["interface",{"_index":1230,"title":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"interfaces/IPaiementResult.html":{},"interfaces/Response.html":{}},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"interfaces/IPaiementResult.html":{},"interfaces/Response.html":{},"coverage.html":{}}}],["interfaces",{"_index":1231,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"interfaces/IPaiementResult.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["interfaces/upload.interface",{"_index":480,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["internalerror",{"_index":2161,"title":{},"body":{"injectables/ResponseService.html":{}}}],["internalerror(message",{"_index":2180,"title":{},"body":{"injectables/ResponseService.html":{}}}],["interne",{"_index":2175,"title":{},"body":{"injectables/ResponseService.html":{}}}],["introuvable",{"_index":1600,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["invalide",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/PaiementService.html":{},"injectables/ResponseService.html":{}}}],["ip",{"_index":171,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"classes/CreateLogDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/UpdateLogDto.html":{},"miscellaneous/variables.html":{}}}],["ipaiementresult",{"_index":1261,"title":{"interfaces/IPaiementResult.html":{}},"body":{"interfaces/IPaiementResult.html":{},"injectables/PaiementNabooService.html":{},"coverage.html":{}}}],["is_escrow",{"_index":1748,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["is_merchant",{"_index":1749,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["isarray",{"_index":871,"title":{},"body":{"classes/Devise.html":{},"classes/MedecinSousService.html":{},"classes/ModePaiement.html":{},"classes/Privilege.html":{},"classes/Service.html":{},"classes/SousService.html":{},"classes/StatutReservation.html":{},"classes/Utilisateur.html":{}}}],["isblacklisted",{"_index":1299,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["isboolean",{"_index":616,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["isboolean()@isoptional",{"_index":608,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["isdatestring",{"_index":777,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["isemail",{"_index":596,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isenum",{"_index":778,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["isenum(['physique",{"_index":780,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["isglobal",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":667,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isint()@isnotempty",{"_index":696,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{}}}],["isint()@isoptional",{"_index":2532,"title":{},"body":{"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["isnotempty",{"_index":436,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/ResetPasswordDto.html":{}}}],["isnumber",{"_index":452,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreateTarifDto-1.html":{}}}],["isnumber()@isnotempty",{"_index":816,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["isnumber()@ispositive",{"_index":733,"title":{},"body":{"classes/CreatePaiementDto-1.html":{}}}],["isnumber()@ispositive()@isnotempty",{"_index":819,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["iso",{"_index":762,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["isoptional",{"_index":617,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@isemail",{"_index":2585,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@isint",{"_index":2588,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@isstring",{"_index":731,"title":{},"body":{"classes/CreatePaiementDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@matches(/^\\+?\\d{9,15",{"_index":2607,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["isoptional()@minlength(8",{"_index":2592,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["ispasswordvalid",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["ispositive",{"_index":735,"title":{},"body":{"classes/CreatePaiementDto-1.html":{},"classes/CreateTarifDto-1.html":{}}}],["isstring",{"_index":597,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["isstring()@isnotempty",{"_index":613,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["isstring()@isnotempty()@length(2",{"_index":610,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["istokenblacklisted",{"_index":410,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["istokenblacklisted(token",{"_index":417,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["item",{"_index":2385,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["jamais",{"_index":165,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["jeudi",{"_index":1097,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["job",{"_index":3055,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":3057,"title":{},"body":{"index.html":{}}}],["john",{"_index":852,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["john'})@isnotempty()@isstring",{"_index":837,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["john'})@validateif(o",{"_index":2600,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["john.doe@example.com",{"_index":853,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/ResetPasswordDto.html":{}}}],["john.doe@example.com'})@isnotempty()@isemail",{"_index":832,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/ResetPasswordDto.html":{}}}],["john@example.com",{"_index":2613,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["john@example.com'})@validateif(o",{"_index":2584,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["johndoe@example.com",{"_index":1246,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["join",{"_index":3068,"title":{},"body":{"index.html":{}}}],["jour",{"_index":656,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateServiceDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["jours",{"_index":1093,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursemaine",{"_index":638,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{},"classes/UpdateDisponibiliteDto-1.html":{}}}],["joursemainenormalized",{"_index":1101,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursvalid",{"_index":1094,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursvalid.includes(joursemainenormalized",{"_index":1103,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["joursvalid.join",{"_index":1107,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["json",{"_index":1387,"title":{},"body":{"injectables/LogService.html":{}}}],["json.stringify(error",{"_index":497,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["jsonwebtoken",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{},"dependencies.html":{}}}],["jwt'})@apiresponse({status",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["jwt.strategy",{"_index":319,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt.verify(token",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtauthguard",{"_index":198,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/DisponibiliteController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{},"overview.html":{}}}],["jwtfromrequest",{"_index":1294,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"modules/UtilisateurModule.html":{}}}],["jwtstrategy",{"_index":309,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":3073,"title":{},"body":{"index.html":{}}}],["key",{"_index":2988,"title":{},"body":{"index.html":{}}}],["l'admin",{"_index":1965,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["l'application",{"_index":2879,"title":{},"body":{"modules/ValidationModule.html":{}}}],["l'authentification",{"_index":196,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/PrivilegeController.html":{}}}],["l'email",{"_index":1249,"title":{},"body":{"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["l'enregistrement",{"_index":2676,"title":{},"body":{"injectables/UploadService.html":{}}}],["l'erreur",{"_index":2792,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["l'heure",{"_index":2141,"title":{},"body":{"injectables/ReservationService.html":{}}}],["l'icône",{"_index":797,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["l'id",{"_index":1252,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["l'index",{"_index":514,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["l'upload",{"_index":496,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["l'utilisateur",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LogService.html":{},"injectables/ReservationService.html":{},"miscellaneous/variables.html":{}}}],["l'utiliser",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{}}}],["l\\'email",{"_index":1258,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["l\\'id",{"_index":1260,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["la",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreateReservationDto-1.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto-1.html":{}}}],["le",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CloudinaryService.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["learn",{"_index":3027,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["length",{"_index":618,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["length(2",{"_index":619,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["les",{"_index":887,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{}}}],["libell",{"_index":711,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["libelle",{"_index":559,"title":{},"body":{"classes/ConnectModePaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/FindPrivilegeDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["libre",{"_index":2751,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["libre)'})@apiresponse({status",{"_index":2717,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["license",{"_index":3079,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":3060,"title":{},"body":{"index.html":{}}}],["lieu",{"_index":1114,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["line",{"_index":1205,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["linkedin",{"_index":3054,"title":{},"body":{"index.html":{}}}],["lisible",{"_index":1065,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["list",{"_index":2382,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["liste",{"_index":1321,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["listener",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{}}}],["listener.ts",{"_index":1343,"title":{},"body":{"injectables/LogListener.html":{},"coverage.html":{}}}],["listener.ts:11",{"_index":1350,"title":{},"body":{"injectables/LogListener.html":{}}}],["listener.ts:7",{"_index":1346,"title":{},"body":{"injectables/LogListener.html":{}}}],["listener/log",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"coverage.html":{}}}],["lister",{"_index":1433,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["literal",{"_index":1348,"title":{},"body":{"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["local",{"_index":2634,"title":{},"body":{"modules/UploadModule.html":{}}}],["log",{"_index":90,"title":{"classes/Log.html":{}},"body":{"modules/AppModule.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/Utilisateur.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log.controller",{"_index":1360,"title":{},"body":{"modules/LogModule.html":{}}}],["log.dto.ts",{"_index":552,"title":{},"body":{"classes/ConnectLogDto.html":{},"classes/CreateLogDto.html":{},"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["log.dto.ts:11",{"_index":686,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:12",{"_index":553,"title":{},"body":{"classes/ConnectLogDto.html":{},"classes/UpdateLogDto.html":{}}}],["log.dto.ts:15",{"_index":688,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:17",{"_index":2530,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["log.dto.ts:22",{"_index":687,"title":{},"body":{"classes/CreateLogDto.html":{}}}],["log.dto.ts:24",{"_index":2529,"title":{},"body":{"classes/UpdateLogDto.html":{}}}],["log.entity",{"_index":2704,"title":{},"body":{"classes/Utilisateur.html":{}}}],["log.service",{"_index":1326,"title":{},"body":{"controllers/LogController.html":{},"modules/LogModule.html":{}}}],["log/log.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["log/log.service",{"_index":1352,"title":{},"body":{"injectables/LogListener.html":{}}}],["logcontroller",{"_index":1317,"title":{"controllers/LogController.html":{}},"body":{"controllers/LogController.html":{},"modules/LogModule.html":{},"coverage.html":{}}}],["logdto",{"_index":1333,"title":{"classes/LogDto.html":{}},"body":{"classes/LogDto.html":{},"coverage.html":{}}}],["logger",{"_index":456,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["logger(cloudinaryservice.name",{"_index":475,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["logger(uploadservice.name",{"_index":2651,"title":{},"body":{"injectables/UploadService.html":{}}}],["loggingmiddleware",{"_index":1894,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(connectutilisateurdto",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["logique",{"_index":1395,"title":{},"body":{"injectables/LogService.html":{}}}],["loglistener",{"_index":89,"title":{"injectables/LogListener.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"coverage.html":{},"overview.html":{}}}],["logmodule",{"_index":42,"title":{"modules/LogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{},"modules.html":{},"overview.html":{}}}],["logout",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@headers('authorization",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(authheader",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(token",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":1319,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"classes/Utilisateur.html":{}}}],["logservice",{"_index":1325,"title":{"injectables/LogService.html":{}},"body":{"controllers/LogController.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"coverage.html":{},"overview.html":{}}}],["long",{"_index":2114,"title":{},"body":{"injectables/ReservationService.html":{}}}],["looking",{"_index":2999,"title":{},"body":{"index.html":{}}}],["loop",{"_index":3050,"title":{},"body":{"index.html":{}}}],["lors",{"_index":495,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["lte",{"_index":2128,"title":{},"body":{"injectables/ReservationService.html":{}}}],["lui",{"_index":1486,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["lundi",{"_index":655,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["l’ancienne",{"_index":2844,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["mais",{"_index":2768,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["makes",{"_index":3007,"title":{},"body":{"index.html":{}}}],["managing",{"_index":3020,"title":{},"body":{"index.html":{}}}],["manquante",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["manuellement",{"_index":2442,"title":{},"body":{"controllers/TarifController.html":{}}}],["manuellement'})@apiparam({name",{"_index":2408,"title":{},"body":{"controllers/TarifController.html":{}}}],["mardi",{"_index":1095,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["matches",{"_index":668,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["matches(/^(?=.*[a",{"_index":2618,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["matches(/^([01]\\d|2[0",{"_index":671,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["matches(/^\\+?\\d{9,15",{"_index":855,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.floor(params.montant",{"_index":1741,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["mau",{"_index":3003,"title":{},"body":{"index.html":{}}}],["medecin",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/Ordonnance.html":{},"injectables/ReservationService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["medecin.privilege.libelle",{"_index":1488,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["medecin/admin",{"_index":1052,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["medecins",{"_index":2266,"title":{},"body":{"classes/SousService.html":{}}}],["medecinsousservice",{"_index":992,"title":{"classes/MedecinSousService.html":{}},"body":{"classes/Disponibilite.html":{},"classes/MedecinSousService.html":{},"injectables/PaiementService.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"classes/SousService.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["medecinsousservice.disponibilites.find",{"_index":2118,"title":{},"body":{"injectables/ReservationService.html":{}}}],["medecinsousservice.dto.ts",{"_index":555,"title":{},"body":{"classes/ConnectMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"coverage.html":{}}}],["medecinsousservice.dto.ts:12",{"_index":556,"title":{},"body":{"classes/ConnectMedecinSousServiceDto.html":{}}}],["medecinsousservice.dto.ts:14",{"_index":690,"title":{},"body":{"classes/CreateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{}}}],["medecinsousservice.entity",{"_index":1002,"title":{},"body":{"classes/Disponibilite.html":{},"classes/Reservation.html":{},"classes/SousService.html":{},"classes/Utilisateur.html":{}}}],["medecinsousservicecontroller",{"_index":1421,"title":{"controllers/MedecinSousServiceController.html":{}},"body":{"controllers/MedecinSousServiceController.html":{},"modules/MedecinSousserviceModule.html":{},"coverage.html":{}}}],["medecinsousservicedto",{"_index":1463,"title":{"classes/MedecinSousServiceDto.html":{}},"body":{"classes/MedecinSousServiceDto.html":{},"coverage.html":{}}}],["medecinsousservicemodule",{"_index":43,"title":{"modules/MedecinSousserviceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules.html":{},"overview.html":{}}}],["medecinsousserviceservice",{"_index":1451,"title":{"injectables/MedecinSousServiceService.html":{}},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"coverage.html":{},"overview.html":{}}}],["mercredi",{"_index":1096,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["message",{"_index":646,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["messages",{"_index":1212,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["messages.push(...this.formaterrors(error.children",{"_index":1229,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["messages.push(message",{"_index":1226,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["metadata",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1687,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["method_of_payment",{"_index":1736,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["mettre",{"_index":910,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["middleware",{"_index":1379,"title":{},"body":{"injectables/LogService.html":{}}}],["minlength",{"_index":437,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["minlength(6",{"_index":442,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateUtilisateurDto-1.html":{}}}],["minlength(8",{"_index":2617,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["mis",{"_index":1449,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["miscellaneous",{"_index":2950,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":986,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ReservationService.html":{},"classes/UpdateServiceDto-1.html":{}}}],["mit",{"_index":3059,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":2537,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{}}}],["mode",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{},"index.html":{}}}],["models",{"_index":1902,"title":{},"body":{"injectables/PrismaService.html":{}}}],["modepaiement",{"_index":1510,"title":{"classes/ModePaiement.html":{}},"body":{"classes/ModePaiement.html":{},"classes/Paiement.html":{},"injectables/PaiementService.html":{},"coverage.html":{}}}],["modepaiement.dto.ts",{"_index":558,"title":{},"body":{"classes/ConnectModePaiementDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/UpdateModePaiementDto.html":{},"coverage.html":{}}}],["modepaiement.dto.ts:11",{"_index":703,"title":{},"body":{"classes/CreateModePaiementDto.html":{}}}],["modepaiement.dto.ts:12",{"_index":2534,"title":{},"body":{"classes/UpdateModePaiementDto.html":{}}}],["modepaiement.dto.ts:13",{"_index":560,"title":{},"body":{"classes/ConnectModePaiementDto.html":{}}}],["modepaiement.dto.ts:17",{"_index":702,"title":{},"body":{"classes/CreateModePaiementDto.html":{}}}],["modepaiement.dto.ts:18",{"_index":561,"title":{},"body":{"classes/ConnectModePaiementDto.html":{},"classes/UpdateModePaiementDto.html":{}}}],["modepaiement.dto.ts:24",{"_index":701,"title":{},"body":{"classes/CreateModePaiementDto.html":{}}}],["modepaiement.dto.ts:25",{"_index":2533,"title":{},"body":{"classes/UpdateModePaiementDto.html":{}}}],["modepaiement.entity",{"_index":1638,"title":{},"body":{"classes/Paiement.html":{}}}],["modepaiement.libelle",{"_index":1811,"title":{},"body":{"injectables/PaiementService.html":{}}}],["modepaiementcontroller",{"_index":1521,"title":{"controllers/ModePaiementController.html":{}},"body":{"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"coverage.html":{}}}],["modepaiementdto",{"_index":1555,"title":{"classes/ModePaiementDto.html":{}},"body":{"classes/ModePaiementDto.html":{},"coverage.html":{}}}],["modepaiementmodule",{"_index":44,"title":{"modules/ModePaiementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModePaiementModule.html":{},"modules.html":{},"overview.html":{}}}],["modepaiementservice",{"_index":1540,"title":{"injectables/ModePaiementService.html":{}},"body":{"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"coverage.html":{},"overview.html":{}}}],["modes",{"_index":1596,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["modifiable",{"_index":2139,"title":{},"body":{"injectables/ReservationService.html":{}}}],["modifier",{"_index":1448,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{}}}],["modifiez",{"_index":1112,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["moins",{"_index":2593,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["money",{"_index":716,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{}}}],["money'})@isnotempty()@isstring",{"_index":714,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["montant",{"_index":722,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"interfaces/IPaiementResult.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdateTarifDto.html":{}}}],["more",{"_index":2997,"title":{},"body":{"index.html":{}}}],["mot",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["mss.id",{"_index":1142,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["mtn",{"_index":2536,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{}}}],["myśliwiec",{"_index":3074,"title":{},"body":{"index.html":{}}}],["médecin",{"_index":652,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{}}}],["médecin/sous",{"_index":768,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["médecins",{"_index":1089,"title":{},"body":{"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{}}}],["méthode",{"_index":1377,"title":{},"body":{"injectables/LogService.html":{}}}],["même",{"_index":1487,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"controllers/TarifController.html":{}}}],["n'a",{"_index":515,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["n'est",{"_index":1250,"title":{},"body":{"classes/FindUtilisateurDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["n'existe",{"_index":1480,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["n/a",{"_index":2065,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["n\\'est",{"_index":1259,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["naboo",{"_index":1649,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["naboo'})@apibody({type",{"_index":1659,"title":{},"body":{"controllers/PaiementController.html":{}}}],["naboo'})@apiparam({name",{"_index":1647,"title":{},"body":{"controllers/PaiementController.html":{}}}],["naboo.dto",{"_index":1664,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementService.html":{}}}],["naboo.dto.ts",{"_index":737,"title":{},"body":{"classes/CreatePaiementNabooDto.html":{},"coverage.html":{}}}],["naboo.dto.ts:11",{"_index":739,"title":{},"body":{"classes/CreatePaiementNabooDto.html":{}}}],["naboo.dto.ts:7",{"_index":741,"title":{},"body":{"classes/CreatePaiementNabooDto.html":{}}}],["naboo.service",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{}}}],["naboo.service.ts",{"_index":1710,"title":{},"body":{"injectables/PaiementNabooService.html":{},"coverage.html":{}}}],["naboo.service.ts:10",{"_index":1730,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["naboo.service.ts:12",{"_index":1720,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["naboo.service.ts:50",{"_index":1728,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["naboo.service.ts:62",{"_index":1722,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["naboo.service.ts:77",{"_index":1717,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["naboo.service.ts:99",{"_index":1723,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["naboo/paiement",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"coverage.html":{}}}],["nabooservice",{"_index":1668,"title":{},"body":{"controllers/PaiementController.html":{}}}],["name",{"_index":149,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["ne",{"_index":167,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"classes/CreatePrivilegeDto-1.html":{}}}],["need",{"_index":3045,"title":{},"body":{"index.html":{}}}],["nest",{"_index":2964,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":3078,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":154,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["nestjs",{"_index":2986,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogListener.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":316,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2512,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":318,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/OptionalJwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1539,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":190,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["new",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":428,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["newpassword123",{"_index":2615,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["newpassword123!'})@validateif(o",{"_index":2591,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["next",{"_index":145,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["next(params",{"_index":3095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next.handle",{"_index":174,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["nextfunction",{"_index":186,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["node.js",{"_index":2956,"title":{},"body":{"index.html":{}}}],["nom",{"_index":821,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["nombre",{"_index":1253,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["non",{"_index":207,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["notfound",{"_index":2162,"title":{},"body":{"injectables/ResponseService.html":{}}}],["notfound(message",{"_index":2182,"title":{},"body":{"injectables/ResponseService.html":{}}}],["notfoundexception",{"_index":957,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["notfoundexception('log",{"_index":1402,"title":{},"body":{"injectables/LogService.html":{}}}],["notfoundexception('transaction",{"_index":1762,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["notfoundexception('utilisateur",{"_index":2838,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["notfoundexception(this.response.notfound('aucun",{"_index":1806,"title":{},"body":{"injectables/PaiementService.html":{}}}],["notfoundexception(this.response.notfound('mode",{"_index":1808,"title":{},"body":{"injectables/PaiementService.html":{}}}],["notfoundexception(this.response.notfound('médecin",{"_index":2103,"title":{},"body":{"injectables/ReservationService.html":{}}}],["notfoundexception(this.response.notfound('paiement",{"_index":1860,"title":{},"body":{"injectables/PaiementService.html":{}}}],["notfoundexception(this.response.notfound('réservation",{"_index":1798,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["notfoundexception(this.response.notfound('statut",{"_index":1844,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["notfoundexception(this.response.notfound('transaction",{"_index":1837,"title":{},"body":{"injectables/PaiementService.html":{}}}],["notfoundexception(this.response.notfound('utilisateur",{"_index":2100,"title":{},"body":{"injectables/ReservationService.html":{}}}],["notfoundexception(this.responseservice.notfound(`devise",{"_index":978,"title":{},"body":{"injectables/DeviseService.html":{}}}],["notfoundexception(this.responseservice.notfound(`disponibilit",{"_index":1129,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["notfoundexception(this.responseservice.notfound(`service",{"_index":2323,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["notfoundexception(this.responseservice.notfound(`sous",{"_index":2329,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["nouveau",{"_index":2348,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["nouveaumotdepasse456",{"_index":441,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["nouveaumotdepasse456'})@isnotempty()@minlength(6",{"_index":431,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["nouvel",{"_index":448,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"controllers/UtilisateurController.html":{}}}],["nouvelle",{"_index":966,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{}}}],["npm",{"_index":2969,"title":{},"body":{"index.html":{}}}],["null",{"_index":629,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["nullable",{"_index":631,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["number",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"interfaces/Response.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["numéro",{"_index":840,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["nécessaire",{"_index":1388,"title":{},"body":{"injectables/LogService.html":{},"modules/ReservationModule.html":{},"controllers/UtilisateurController.html":{}}}],["nécessitent",{"_index":1938,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["o.email",{"_index":2614,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.idprivilege",{"_index":2622,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.nom",{"_index":2612,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.password",{"_index":2616,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.prenom",{"_index":2611,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.profil",{"_index":2621,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["o.telephone",{"_index":2620,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["object",{"_index":1680,"title":{},"body":{"controllers/PaiementController.html":{}}}],["object.keys(this",{"_index":1903,"title":{},"body":{"injectables/PrismaService.html":{}}}],["object.values(error.constraints).foreach((message",{"_index":1225,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["object.values(updateutilisateurdto).some((val",{"_index":2839,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["observable",{"_index":153,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["obtenir",{"_index":1438,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["offer",{"_index":3056,"title":{},"body":{"index.html":{}}}],["official",{"_index":3004,"title":{},"body":{"index.html":{}}}],["oldpassword",{"_index":429,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["om",{"_index":1655,"title":{},"body":{"controllers/PaiementController.html":{}}}],["one",{"_index":1760,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["onevent",{"_index":1351,"title":{},"body":{"injectables/LogListener.html":{}}}],["onevent('prisma.log",{"_index":1349,"title":{},"body":{"injectables/LogListener.html":{}}}],["onmoduledestroy",{"_index":1885,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":1886,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":3061,"title":{},"body":{"index.html":{}}}],["optional",{"_index":151,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["optionaljwtauthguard",{"_index":1603,"title":{"injectables/OptionalJwtAuthGuard.html":{}},"body":{"injectables/OptionalJwtAuthGuard.html":{},"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["optionnels",{"_index":2741,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["options",{"_index":2886,"title":{},"body":{"injectables/ValidationService.html":{}}}],["opération",{"_index":2186,"title":{},"body":{"injectables/ResponseService.html":{}}}],["orange",{"_index":713,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["orange_money",{"_index":1688,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["order",{"_index":1648,"title":{},"body":{"controllers/PaiementController.html":{}}}],["order_id",{"_index":1765,"title":{},"body":{"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["orderby",{"_index":1125,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{}}}],["orderid",{"_index":1263,"title":{},"body":{"interfaces/IPaiementResult.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["ordonnance",{"_index":1608,"title":{"classes/Ordonnance.html":{}},"body":{"classes/Ordonnance.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["ordonnance.dto.ts",{"_index":563,"title":{},"body":{"classes/ConnectOrdonnanceDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"coverage.html":{}}}],["ordonnance.dto.ts:11",{"_index":718,"title":{},"body":{"classes/CreateOrdonnanceDto.html":{}}}],["ordonnance.dto.ts:12",{"_index":564,"title":{},"body":{"classes/ConnectOrdonnanceDto.html":{},"classes/UpdateOrdonnanceDto.html":{}}}],["ordonnance.dto.ts:18",{"_index":719,"title":{},"body":{"classes/CreateOrdonnanceDto.html":{}}}],["ordonnance.dto.ts:19",{"_index":2540,"title":{},"body":{"classes/UpdateOrdonnanceDto.html":{}}}],["ordonnance.entity",{"_index":2705,"title":{},"body":{"classes/Utilisateur.html":{}}}],["ordonnancedto",{"_index":1619,"title":{"classes/OrdonnanceDto.html":{}},"body":{"classes/OrdonnanceDto.html":{},"coverage.html":{}}}],["ordonnancesmedecin",{"_index":2682,"title":{},"body":{"classes/Utilisateur.html":{}}}],["ordonnancespatient",{"_index":2683,"title":{},"body":{"classes/Utilisateur.html":{}}}],["originalname",{"_index":2646,"title":{},"body":{"injectables/UploadService.html":{}}}],["ou",{"_index":203,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateDisponibiliteDto.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PaiementController.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["out",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":3083,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2926,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paid",{"_index":1867,"title":{},"body":{"injectables/PaiementService.html":{}}}],["paiement",{"_index":712,"title":{"classes/Paiement.html":{}},"body":{"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"coverage.html":{}}}],["paiement'})@isint",{"_index":738,"title":{},"body":{"classes/CreatePaiementNabooDto.html":{}}}],["paiement.controller",{"_index":1567,"title":{},"body":{"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{}}}],["paiement.controller.ts",{"_index":1522,"title":{},"body":{"controllers/ModePaiementController.html":{},"coverage.html":{}}}],["paiement.controller.ts:24",{"_index":1526,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:29",{"_index":1528,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:34",{"_index":1530,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:41",{"_index":1535,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.controller.ts:46",{"_index":1532,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["paiement.dto",{"_index":1542,"title":{},"body":{"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"classes/UpdatePaiementDto-1.html":{}}}],["paiement.dto..ts",{"_index":706,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement.dto..ts:12",{"_index":709,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["paiement.dto..ts:8",{"_index":715,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{}}}],["paiement.dto.ts",{"_index":566,"title":{},"body":{"classes/ConnectPaiementDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"coverage.html":{}}}],["paiement.dto.ts:12",{"_index":727,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{}}}],["paiement.dto.ts:13",{"_index":568,"title":{},"body":{"classes/ConnectPaiementDto.html":{},"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:16",{"_index":728,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{}}}],["paiement.dto.ts:18",{"_index":2544,"title":{},"body":{"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:19",{"_index":569,"title":{},"body":{"classes/ConnectPaiementDto.html":{}}}],["paiement.dto.ts:20",{"_index":725,"title":{},"body":{"classes/CreatePaiementDto.html":{}}}],["paiement.dto.ts:23",{"_index":2543,"title":{},"body":{"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:27",{"_index":724,"title":{},"body":{"classes/CreatePaiementDto.html":{}}}],["paiement.dto.ts:30",{"_index":2542,"title":{},"body":{"classes/UpdatePaiementDto.html":{}}}],["paiement.dto.ts:5",{"_index":732,"title":{},"body":{"classes/CreatePaiementDto-1.html":{}}}],["paiement.dto.ts:8",{"_index":2538,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{}}}],["paiement.dto.ts:9",{"_index":734,"title":{},"body":{"classes/CreatePaiementDto-1.html":{}}}],["paiement.entity",{"_index":1520,"title":{},"body":{"classes/ModePaiement.html":{},"classes/Reservation.html":{}}}],["paiement.id",{"_index":1847,"title":{},"body":{"injectables/PaiementService.html":{}}}],["paiement.idreservation",{"_index":1848,"title":{},"body":{"injectables/PaiementService.html":{}}}],["paiement.interface",{"_index":1733,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["paiement.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["paiement.module.ts",{"_index":1566,"title":{},"body":{"modules/ModePaiementModule.html":{}}}],["paiement.reservation.idutilisateur",{"_index":1838,"title":{},"body":{"injectables/PaiementService.html":{}}}],["paiement.service",{"_index":1541,"title":{},"body":{"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{}}}],["paiement.service.ts",{"_index":1568,"title":{},"body":{"injectables/ModePaiementService.html":{},"coverage.html":{}}}],["paiement.service.ts:10",{"_index":1569,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:17",{"_index":1576,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:28",{"_index":1570,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:51",{"_index":1571,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:56",{"_index":1572,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:62",{"_index":1574,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement.service.ts:80",{"_index":1573,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["paiement/dto/create",{"_index":705,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement/dto/update",{"_index":2535,"title":{},"body":{"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["paiement/mode",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"coverage.html":{}}}],["paiement/paiement",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["paiement/paiement.controller",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["paiement/paiement.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["paiement/paiement.service",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["paiementcontroller",{"_index":73,"title":{"controllers/PaiementController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"coverage.html":{}}}],["paiementdto",{"_index":1691,"title":{"classes/PaiementDto.html":{}},"body":{"classes/PaiementDto.html":{},"coverage.html":{}}}],["paiementmodule",{"_index":45,"title":{"modules/PaiementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaiementModule.html":{},"modules.html":{},"overview.html":{}}}],["paiementnabooservice",{"_index":57,"title":{"injectables/PaiementNabooService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"coverage.html":{},"overview.html":{}}}],["paiements",{"_index":1512,"title":{},"body":{"classes/ModePaiement.html":{}}}],["paiementservice",{"_index":58,"title":{"injectables/PaiementService.html":{}},"body":{"modules/AppModule.html":{},"controllers/PaiementController.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"coverage.html":{},"overview.html":{}}}],["paiementurl",{"_index":1264,"title":{},"body":{"interfaces/IPaiementResult.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["par",{"_index":622,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{}}}],["param",{"_index":913,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["param('id",{"_index":2759,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["parameters",{"_index":148,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["params",{"_index":1718,"title":{},"body":{"injectables/PaiementNabooService.html":{},"miscellaneous/variables.html":{}}}],["params.action",{"_index":3100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.amount",{"_index":1771,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["params.args",{"_index":3103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.description",{"_index":1743,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["params.full_name",{"_index":1769,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["params.method",{"_index":1737,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["params.model",{"_index":3097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params.phone_number",{"_index":1770,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["parent",{"_index":800,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{}}}],["parmi",{"_index":1106,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["parsetime",{"_index":1046,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["parsetime(time",{"_index":1074,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["part",{"_index":3046,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":2511,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{}}}],["partialtype(createdevisedto",{"_index":2510,"title":{},"body":{"classes/UpdateDeviseDto.html":{}}}],["partialtype(createdisponibilitedto",{"_index":2520,"title":{},"body":{"classes/UpdateDisponibiliteDto.html":{}}}],["partialtype(createpaiementdto",{"_index":2546,"title":{},"body":{"classes/UpdatePaiementDto-1.html":{}}}],["partialtype(createprivilegedto",{"_index":2550,"title":{},"body":{"classes/UpdatePrivilegeDto-1.html":{}}}],["partialtype(createtarifdto",{"_index":2574,"title":{},"body":{"classes/UpdateTarifDto-1.html":{}}}],["pas",{"_index":175,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/CloudinaryService.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["passe",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["passport",{"_index":1293,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":317,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1290,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1285,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":1297,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["password')@apioperation({summary",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["password')@useguards(jwtauthguard)@apioperation({summary",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["password.dto.ts",{"_index":426,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["password.dto.ts:12",{"_index":432,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":434,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:8",{"_index":2152,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password123",{"_index":599,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{}}}],["password123'})@isnotempty()@isstring",{"_index":594,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{}}}],["password123'})@isnotempty()@minlength(6",{"_index":836,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["patch",{"_index":912,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["patch(':id",{"_index":925,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["patch(':id')@apibearerauth('access",{"_index":1447,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["patch(':id')@apiconsumes('application/json')@apioperation({summary",{"_index":2357,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":909,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{}}}],["patch(':id')@useguards(jwtauthguard)@apioperation({summary",{"_index":2016,"title":{},"body":{"controllers/ReservationController.html":{}}}],["patch(':id')@useguards(jwtauthguard)@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":2739,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["patch(':id')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":2211,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["patch(':id/activate",{"_index":928,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["patch(':id/activate')@apioperation({summary",{"_index":884,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/TarifController.html":{}}}],["patch(':id/deactivate",{"_index":2441,"title":{},"body":{"controllers/TarifController.html":{}}}],["patch(':id/deactivate')@apioperation({summary",{"_index":2407,"title":{},"body":{"controllers/TarifController.html":{}}}],["path",{"_index":2154,"title":{},"body":{"interfaces/Response.html":{},"injectables/UploadService.html":{}}}],["path.extname(originalname",{"_index":2663,"title":{},"body":{"injectables/UploadService.html":{}}}],["path.join(dirpath",{"_index":2670,"title":{},"body":{"injectables/UploadService.html":{}}}],["path.join(folder",{"_index":2674,"title":{},"body":{"injectables/UploadService.html":{}}}],["path.join(this.basedir",{"_index":2659,"title":{},"body":{"injectables/UploadService.html":{}}}],["patient",{"_index":1154,"title":{},"body":{"classes/DossierMedical.html":{},"classes/Ordonnance.html":{}}}],["pause",{"_index":661,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["pausedebut",{"_index":639,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["pausefin",{"_index":640,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{}}}],["payer",{"_index":1779,"title":{},"body":{"injectables/PaiementService.html":{}}}],["payer(dto",{"_index":1790,"title":{},"body":{"injectables/PaiementService.html":{}}}],["payload",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"injectables/PaiementNabooService.html":{}}}],["payload.action",{"_index":1382,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.details",{"_index":1386,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.idutilisateur",{"_index":1381,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.ip",{"_index":1383,"title":{},"body":{"injectables/LogService.html":{}}}],["payload.sub",{"_index":1304,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdf",{"_index":1833,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{}}}],["pdfbuffer",{"_index":2075,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["pdfkit",{"_index":2041,"title":{},"body":{"injectables/ReservationDocumentService.html":{},"dependencies.html":{}}}],["pdfresult",{"_index":1822,"title":{},"body":{"injectables/PaiementService.html":{}}}],["pdfresult.url",{"_index":1829,"title":{},"body":{"injectables/PaiementService.html":{}}}],["pdfurl",{"_index":1828,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["pending",{"_index":1830,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["peut",{"_index":747,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"injectables/MedecinSousServiceService.html":{}}}],["peuvent",{"_index":1091,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["phone_number",{"_index":1683,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{}}}],["physique",{"_index":771,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["platform",{"_index":3002,"title":{},"body":{"index.html":{}}}],["please",{"_index":3030,"title":{},"body":{"index.html":{}}}],["possible",{"_index":2994,"title":{},"body":{"index.html":{}}}],["post",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["post('cashout",{"_index":1677,"title":{},"body":{"controllers/PaiementController.html":{}}}],["post('cashout')@apioperation({summary",{"_index":1652,"title":{},"body":{"controllers/PaiementController.html":{}}}],["post('change",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@apioperation({summary",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@useguards(jwtauthguard)@apioperation({summary",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apibearerauth('access",{"_index":1425,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["post()@apiconsumes('application/json')@apioperation({summary",{"_index":2347,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["post()@apioperation({summary",{"_index":891,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/TarifController.html":{}}}],["post()@useguards(jwtauthguard)@apioperation({summary",{"_index":1006,"title":{},"body":{"controllers/DisponibiliteController.html":{},"controllers/ReservationController.html":{}}}],["post()@useguards(optionaljwtauthguard)@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":2713,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["post()@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1524,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["pour",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{},"classes/CreateDeviseDto.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{}}}],["pouvez",{"_index":1384,"title":{},"body":{"injectables/LogService.html":{}}}],["prefix",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["prenom",{"_index":822,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["prisma",{"_index":413,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{},"dependencies.html":{}}}],["prisma.devise.create",{"_index":969,"title":{},"body":{"injectables/DeviseService.html":{}}}],["prisma.devise.update",{"_index":988,"title":{},"body":{"injectables/DeviseService.html":{}}}],["prisma.devise.updatemany",{"_index":968,"title":{},"body":{"injectables/DeviseService.html":{}}}],["prisma.middleware",{"_index":1895,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma.middlewareparams",{"_index":3094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":1882,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.tarif.create",{"_index":2482,"title":{},"body":{"injectables/TarifService.html":{}}}],["prisma.tarif.update",{"_index":2497,"title":{},"body":{"injectables/TarifService.html":{}}}],["prisma.tarif.updatemany",{"_index":2481,"title":{},"body":{"injectables/TarifService.html":{}}}],["prisma/client",{"_index":1893,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/client/runtime/library",{"_index":2746,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["prisma/prisma.middleware",{"_index":157,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{}}}],["prisma/prisma.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{}}}],["prisma/prisma.service",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{}}}],["prismaclient",{"_index":1884,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":46,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LogModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":59,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/PrivilegeService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["privilege",{"_index":366,"title":{"classes/Privilege.html":{},"classes/Privilege-1.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["privilege.controller",{"_index":1955,"title":{},"body":{"modules/PrivilegeModule.html":{}}}],["privilege.dto",{"_index":1933,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/UpdatePrivilegeDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["privilege.dto.ts",{"_index":445,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/FindPrivilegeDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["privilege.dto.ts:11",{"_index":744,"title":{},"body":{"classes/CreatePrivilegeDto.html":{}}}],["privilege.dto.ts:12",{"_index":2548,"title":{},"body":{"classes/UpdatePrivilegeDto.html":{}}}],["privilege.dto.ts:13",{"_index":571,"title":{},"body":{"classes/ConnectPrivilegeDto.html":{}}}],["privilege.dto.ts:18",{"_index":572,"title":{},"body":{"classes/ConnectPrivilegeDto.html":{},"classes/CreatePrivilegeDto.html":{}}}],["privilege.dto.ts:19",{"_index":2547,"title":{},"body":{"classes/UpdatePrivilegeDto.html":{}}}],["privilege.dto.ts:2",{"_index":1243,"title":{},"body":{"classes/FindPrivilegeDto.html":{}}}],["privilege.dto.ts:8",{"_index":451,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{}}}],["privilege.entity",{"_index":2702,"title":{},"body":{"classes/Utilisateur.html":{}}}],["privilege.libelle",{"_index":2866,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilege.service",{"_index":1932,"title":{},"body":{"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{}}}],["privilege/privilege.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["privilege?.libelle",{"_index":2829,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilegeclient",{"_index":2812,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilegeclient.id",{"_index":2814,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["privilegecontroller",{"_index":1916,"title":{"controllers/PrivilegeController.html":{}},"body":{"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"coverage.html":{}}}],["privilegedto",{"_index":1945,"title":{"classes/PrivilegeDto.html":{}},"body":{"classes/PrivilegeDto.html":{},"coverage.html":{}}}],["privilegemodule",{"_index":47,"title":{"modules/PrivilegeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrivilegeModule.html":{},"modules.html":{},"overview.html":{}}}],["privileges",{"_index":1918,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{}}}],["privilegeservice",{"_index":1931,"title":{"injectables/PrivilegeService.html":{}},"body":{"controllers/PrivilegeController.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"coverage.html":{},"overview.html":{}}}],["privilège",{"_index":453,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/FindUtilisateurDto.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["privilège'})@isnotempty()@isnumber",{"_index":450,"title":{},"body":{"classes/ChangePrivilegeDto.html":{}}}],["privilèges",{"_index":1924,"title":{},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["process.env.api_base_url",{"_index":1820,"title":{},"body":{"injectables/PaiementService.html":{}}}],["process.env.cloudinary_api_key",{"_index":485,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["process.env.cloudinary_api_secret",{"_index":487,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["process.env.cloudinary_cloud_name",{"_index":483,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["process.env.naboo_api_key",{"_index":1729,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["process.env.storage_service",{"_index":2633,"title":{},"body":{"modules/UploadModule.html":{}}}],["process.env.upload_dir",{"_index":2656,"title":{},"body":{"injectables/UploadService.html":{}}}],["process.env.webhook_secret",{"_index":1792,"title":{},"body":{"injectables/PaiementService.html":{}}}],["process.exit(1",{"_index":1905,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":2976,"title":{},"body":{"index.html":{}}}],["products",{"_index":1738,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["profil",{"_index":823,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["profilurl",{"_index":831,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["profilurl?:string",{"_index":857,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["progressive",{"_index":2955,"title":{},"body":{"index.html":{}}}],["project",{"_index":2967,"title":{},"body":{"index.html":{}}}],["promise",{"_index":419,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/PaiementNabooService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["promise((resolve",{"_index":488,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["promise.all",{"_index":518,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["promise.all(disponibilites.map(async",{"_index":1147,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["properties",{"_index":427,"title":{"properties.html":{}},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"properties.html":{}}}],["provide",{"_index":2631,"title":{},"body":{"modules/UploadModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["prénom",{"_index":1257,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["public",{"_index":2745,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["puissent",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["qr",{"_index":2048,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["qrbuffer",{"_index":2042,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["qrcode",{"_index":1832,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"dependencies.html":{}}}],["qrcode.tobuffer(reservationurl",{"_index":2043,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["qrcodeurl",{"_index":1826,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["qrresult",{"_index":1818,"title":{},"body":{"injectables/PaiementService.html":{}}}],["qrresult.url",{"_index":1827,"title":{},"body":{"injectables/PaiementService.html":{}}}],["quantity",{"_index":1742,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["que",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LogService.html":{}}}],["query",{"_index":2424,"title":{},"body":{"controllers/TarifController.html":{}}}],["questions",{"_index":3028,"title":{},"body":{"index.html":{}}}],["r.heuredebut",{"_index":1135,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["r.heurefin",{"_index":1136,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["radiologie",{"_index":789,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{}}}],["radiologie'})@isnotempty",{"_index":787,"title":{},"body":{"classes/CreateServiceDto-1.html":{}}}],["raw",{"_index":2077,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["read",{"_index":3069,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/BlacklistService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["ready",{"_index":2984,"title":{},"body":{"index.html":{}}}],["real",{"_index":3042,"title":{},"body":{"index.html":{}}}],["reconnecter",{"_index":1303,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["recursive",{"_index":2661,"title":{},"body":{"injectables/UploadService.html":{}}}],["referencetransaction",{"_index":723,"title":{},"body":{"classes/CreatePaiementDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PaiementService.html":{},"classes/UpdatePaiementDto.html":{}}}],["reflect",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":489,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["reject(error",{"_index":498,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["reject(new",{"_index":499,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["relativepath",{"_index":2673,"title":{},"body":{"injectables/UploadService.html":{}}}],["remove",{"_index":1424,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["remove(@param('id",{"_index":1461,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["remove(id",{"_index":1441,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["rend",{"_index":2876,"title":{},"body":{"modules/ValidationModule.html":{}}}],["renvoie",{"_index":1389,"title":{},"body":{"injectables/LogService.html":{}}}],["repository",{"_index":2966,"title":{},"body":{"index.html":{}}}],["req",{"_index":188,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["req.ip",{"_index":209,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["req.user",{"_index":192,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["req.user?.id",{"_index":201,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["request",{"_index":160,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["request.ip",{"_index":172,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["request.user?.id",{"_index":164,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["required",{"_index":538,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"classes/Disponibilite.html":{},"classes/DossierMedical.html":{},"classes/FindUtilisateurDto.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/ModePaiement.html":{},"classes/Ordonnance.html":{},"classes/Paiement.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{},"classes/Service.html":{},"classes/SousService.html":{},"classes/StatutReservation.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{}}}],["requiring",{"_index":3010,"title":{},"body":{"index.html":{}}}],["requis",{"_index":1936,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["requête",{"_index":2166,"title":{},"body":{"injectables/ResponseService.html":{}}}],["res",{"_index":184,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["reservation",{"_index":1414,"title":{"classes/Reservation.html":{}},"body":{"classes/MedecinSousService.html":{},"classes/Paiement.html":{},"injectables/PaiementService.html":{},"classes/Reservation.html":{},"injectables/ReservationDocumentService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/Utilisateur.html":{},"coverage.html":{}}}],["reservation.controller",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/ReservationModule.html":{},"modules/StatutReservationModule.html":{}}}],["reservation.controller.ts",{"_index":2345,"title":{},"body":{"controllers/StatutReservationController.html":{},"coverage.html":{}}}],["reservation.controller.ts:18",{"_index":2349,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:24",{"_index":2351,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:31",{"_index":2353,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:39",{"_index":2358,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.controller.ts:46",{"_index":2355,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["reservation.dto",{"_index":2019,"title":{},"body":{"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{}}}],["reservation.dto.ts",{"_index":574,"title":{},"body":{"classes/ConnectReservationDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["reservation.dto.ts:11",{"_index":759,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:12",{"_index":575,"title":{},"body":{"classes/ConnectReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{}}}],["reservation.dto.ts:15",{"_index":758,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:16",{"_index":776,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["reservation.dto.ts:17",{"_index":2551,"title":{},"body":{"classes/UpdateReservationDto.html":{}}}],["reservation.dto.ts:19",{"_index":2561,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["reservation.dto.ts:20",{"_index":764,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["reservation.dto.ts:22",{"_index":757,"title":{},"body":{"classes/CreateReservationDto.html":{}}}],["reservation.dto.ts:24",{"_index":766,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{}}}],["reservation.dto.ts:28",{"_index":767,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["reservation.dto.ts:29",{"_index":2556,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["reservation.dto.ts:34",{"_index":2557,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["reservation.dto.ts:39",{"_index":2555,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["reservation.dto.ts:8",{"_index":770,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{}}}],["reservation.dto.ts:9",{"_index":2559,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["reservation.entity",{"_index":1420,"title":{},"body":{"classes/MedecinSousService.html":{},"classes/Paiement.html":{},"classes/StatutReservation.html":{},"classes/Utilisateur.html":{}}}],["reservation.heuredebut",{"_index":2069,"title":{},"body":{"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{}}}],["reservation.heurefin",{"_index":2070,"title":{},"body":{"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{}}}],["reservation.id",{"_index":1812,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{}}}],["reservation.idutilisateur",{"_index":1802,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["reservation.medecinsousservice?.sousservice?.nom",{"_index":2064,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reservation.medecinsousservice?.sousservice?.tarifs[0",{"_index":1805,"title":{},"body":{"injectables/PaiementService.html":{}}}],["reservation.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["reservation.module.ts",{"_index":2371,"title":{},"body":{"modules/StatutReservationModule.html":{}}}],["reservation.paiement",{"_index":1799,"title":{},"body":{"injectables/PaiementService.html":{}}}],["reservation.paiement?.devise",{"_index":2073,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reservation.paiement?.montant",{"_index":2072,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reservation.service",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/ReservationController.html":{},"modules/ReservationModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{}}}],["reservation.service.ts",{"_index":2372,"title":{},"body":{"injectables/StatutReservationService.html":{},"coverage.html":{}}}],["reservation.service.ts:14",{"_index":2379,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:25",{"_index":2374,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:39",{"_index":2375,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:44",{"_index":2376,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:49",{"_index":2378,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:57",{"_index":2377,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.service.ts:8",{"_index":2373,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["reservation.statutreservation.libelle",{"_index":2137,"title":{},"body":{"injectables/ReservationService.html":{}}}],["reservation/dto/create",{"_index":807,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"coverage.html":{}}}],["reservation/dto/update",{"_index":2568,"title":{},"body":{"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["reservation/reservation",{"_index":1705,"title":{},"body":{"modules/PaiementModule.html":{},"injectables/PaiementService.html":{}}}],["reservation/reservation.module",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/PaiementModule.html":{}}}],["reservation/statut",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"coverage.html":{}}}],["reservationcontroller",{"_index":1999,"title":{"controllers/ReservationController.html":{}},"body":{"controllers/ReservationController.html":{},"modules/ReservationModule.html":{},"coverage.html":{}}}],["reservationdocumentservice",{"_index":1704,"title":{"injectables/ReservationDocumentService.html":{}},"body":{"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"modules/ReservationModule.html":{},"coverage.html":{},"overview.html":{}}}],["reservationdto",{"_index":2079,"title":{"classes/ReservationDto.html":{}},"body":{"classes/ReservationDto.html":{},"coverage.html":{}}}],["reservationid",{"_index":2039,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reservationmodule",{"_index":122,"title":{"modules/ReservationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaiementModule.html":{},"modules/ReservationModule.html":{},"modules.html":{},"overview.html":{}}}],["reservations",{"_index":1130,"title":{},"body":{"injectables/DisponibiliteService.html":{},"classes/MedecinSousService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"classes/StatutReservation.html":{},"classes/Utilisateur.html":{}}}],["reservations/pdfs",{"_index":2035,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reservations/qrcodes",{"_index":2040,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reservationservice",{"_index":2018,"title":{"injectables/ReservationService.html":{}},"body":{"controllers/ReservationController.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"coverage.html":{},"overview.html":{}}}],["reservationsset",{"_index":1067,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["reservationurl",{"_index":2037,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["reset",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(resetpassworddto",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassworddto",{"_index":260,"title":{"classes/ResetPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["resolve",{"_index":506,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["resolve(buffer.concat(buffers",{"_index":2076,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["resource_type",{"_index":2046,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["resources",{"_index":3022,"title":{},"body":{"index.html":{}}}],["response",{"_index":185,"title":{"interfaces/Response.html":{}},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"coverage.html":{}}}],["response.interface",{"_index":2189,"title":{},"body":{"injectables/ResponseService.html":{}}}],["response/response.service",{"_index":1202,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["responseservice",{"_index":310,"title":{"injectables/ResponseService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"coverage.html":{},"overview.html":{}}}],["ressource",{"_index":1283,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/ResponseService.html":{}}}],["result",{"_index":422,"title":{},"body":{"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"miscellaneous/variables.html":{}}}],["result.montant",{"_index":1814,"title":{},"body":{"injectables/PaiementService.html":{}}}],["result.orderid",{"_index":1815,"title":{},"body":{"injectables/PaiementService.html":{}}}],["result.paiementurl",{"_index":1816,"title":{},"body":{"injectables/PaiementService.html":{}}}],["result.public_id",{"_index":505,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["result.secure_url",{"_index":508,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["result.statut",{"_index":1817,"title":{},"body":{"injectables/PaiementService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":1605,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/CloudinaryService.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ResponseService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["rien",{"_index":169,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["routes",{"_index":1937,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["run",{"_index":2971,"title":{},"body":{"index.html":{}}}],["runs",{"_index":2992,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":155,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"dependencies.html":{}}}],["récupère",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["récupér",{"_index":1404,"title":{},"body":{"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["récupérer",{"_index":901,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["récupérée",{"_index":981,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["récupérées",{"_index":977,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{}}}],["récupérés",{"_index":2336,"title":{},"body":{"injectables/SousServiceService.html":{},"injectables/TarifService.html":{}}}],["réinitialisation",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["réinitialiser",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["réserv",{"_index":2130,"title":{},"body":{"injectables/ReservationService.html":{}}}],["réservation",{"_index":742,"title":{},"body":{"classes/CreatePaiementNabooDto.html":{},"classes/CreateReservationDto-1.html":{},"injectables/PaiementService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"classes/UpdateReservationDto-1.html":{}}}],["réservation'})@apibody({type",{"_index":2007,"title":{},"body":{"controllers/ReservationController.html":{}}}],["réservation'})@apiparam({name",{"_index":2005,"title":{},"body":{"controllers/ReservationController.html":{}}}],["réservation'})@isint",{"_index":740,"title":{},"body":{"classes/CreatePaiementNabooDto.html":{},"classes/CreateReservationDto-1.html":{}}}],["réservations",{"_index":2010,"title":{},"body":{"controllers/ReservationController.html":{},"injectables/ReservationService.html":{}}}],["réussi",{"_index":1874,"title":{},"body":{"injectables/PaiementService.html":{}}}],["réussie",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ResponseService.html":{}}}],["rôles",{"_index":1081,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["s'il",{"_index":1606,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{}}}],["samedi",{"_index":1099,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["sans",{"_index":956,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/UtilisateurService.html":{}}}],["sant",{"_index":1740,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["sauf",{"_index":2725,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["scalable",{"_index":2960,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1679,"title":{},"body":{"controllers/PaiementController.html":{}}}],["secret",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1296,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrétaire",{"_index":669,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["secrétaire'})@isnotempty()@isint",{"_index":653,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{}}}],["select",{"_index":1133,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["selon",{"_index":1374,"title":{},"body":{"injectables/LogService.html":{}}}],["semaine",{"_index":1072,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["server",{"_index":2961,"title":{},"body":{"index.html":{}}}],["serveur",{"_index":2176,"title":{},"body":{"injectables/ResponseService.html":{}}}],["service",{"_index":779,"title":{"classes/Service.html":{}},"body":{"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["service'})@apiparam({name",{"_index":2403,"title":{},"body":{"controllers/TarifController.html":{}}}],["service'})@apiresponse({status",{"_index":1428,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["service'})@isint",{"_index":769,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{}}}],["service.controller",{"_index":2235,"title":{},"body":{"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{}}}],["service.controller.ts",{"_index":2278,"title":{},"body":{"controllers/SousServiceController.html":{},"coverage.html":{}}}],["service.controller.ts:20",{"_index":2280,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:25",{"_index":2287,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:30",{"_index":2286,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:37",{"_index":2290,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:42",{"_index":2288,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.controller.ts:48",{"_index":2282,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service.dto",{"_index":1476,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{}}}],["service.dto.ts",{"_index":577,"title":{},"body":{"classes/ConnectServiceDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["service.dto.ts:11",{"_index":782,"title":{},"body":{"classes/CreateServiceDto.html":{}}}],["service.dto.ts:12",{"_index":786,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:13",{"_index":578,"title":{},"body":{"classes/ConnectServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["service.dto.ts:18",{"_index":579,"title":{},"body":{"classes/ConnectServiceDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{}}}],["service.dto.ts:19",{"_index":2562,"title":{},"body":{"classes/UpdateServiceDto.html":{}}}],["service.dto.ts:7",{"_index":788,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{}}}],["service.entity",{"_index":2276,"title":{},"body":{"classes/SousService.html":{}}}],["service.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["service.module.ts",{"_index":2312,"title":{},"body":{"modules/SousServiceModule.html":{}}}],["service.service",{"_index":2213,"title":{},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{}}}],["service.service.ts",{"_index":2313,"title":{},"body":{"injectables/SousServiceService.html":{},"coverage.html":{}}}],["service.service.ts:16",{"_index":2322,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:29",{"_index":2316,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:53",{"_index":2319,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:59",{"_index":2321,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:69",{"_index":2320,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:73",{"_index":2318,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:86",{"_index":2317,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.service.ts:9",{"_index":2314,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["service.ts",{"_index":693,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["service.ts:10",{"_index":698,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["service.ts:6",{"_index":697,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}}}],["service/:id/full",{"_index":2434,"title":{},"body":{"controllers/TarifController.html":{}}}],["service/:id/full')@apioperation({summary",{"_index":2417,"title":{},"body":{"controllers/TarifController.html":{}}}],["service/:idservice",{"_index":2285,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["service/dto/create",{"_index":795,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"coverage.html":{}}}],["service/dto/update",{"_index":2565,"title":{},"body":{"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["service/service.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["service/service.service",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["service/sous",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"coverage.html":{}}}],["servicecontroller",{"_index":2204,"title":{"controllers/ServiceController.html":{}},"body":{"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"coverage.html":{}}}],["servicedto",{"_index":2223,"title":{"classes/ServiceDto.html":{}},"body":{"classes/ServiceDto.html":{},"coverage.html":{}}}],["servicemodule",{"_index":48,"title":{"modules/ServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["services",{"_index":1454,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"modules/ValidationModule.html":{}}}],["services'})@apiresponse({status",{"_index":1434,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["serviceservice",{"_index":60,"title":{"injectables/ServiceService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ServiceController.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["serviceservice,uploadservice",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":1068,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["set(reservations.map(r",{"_index":1134,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["setup",{"_index":2968,"title":{},"body":{"index.html":{}}}],["seulement",{"_index":1051,"title":{},"body":{"injectables/DisponibiliteService.html":{},"controllers/LogController.html":{}}}],["si",{"_index":195,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":2962,"title":{},"body":{"index.html":{}}}],["signature",{"_index":1786,"title":{},"body":{"injectables/PaiementService.html":{}}}],["signoptions",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":3012,"title":{},"body":{"index.html":{}}}],["sinon",{"_index":170,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/LogService.html":{},"injectables/OptionalJwtAuthGuard.html":{}}}],["soft",{"_index":899,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["son",{"_index":1400,"title":{},"body":{"injectables/LogService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"modules/PaiementModule.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"classes/Privilege-1.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"modules/PrivilegeModule.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"index.html":{}}}],["sous",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ReservationService.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["sousservice",{"_index":1406,"title":{"classes/SousService.html":{}},"body":{"classes/MedecinSousService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"classes/SousService.html":{},"injectables/SousServiceService.html":{},"classes/Tarif.html":{},"injectables/TarifService.html":{},"coverage.html":{}}}],["sousservice.controller",{"_index":1509,"title":{},"body":{"modules/MedecinSousserviceModule.html":{}}}],["sousservice.controller.ts",{"_index":1422,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"coverage.html":{}}}],["sousservice.controller.ts:20",{"_index":1431,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:29",{"_index":1435,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:38",{"_index":1440,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:47",{"_index":1450,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.controller.ts:56",{"_index":1445,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["sousservice.dto.ts",{"_index":581,"title":{},"body":{"classes/ConnectSousServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"coverage.html":{}}}],["sousservice.dto.ts:11",{"_index":793,"title":{},"body":{"classes/CreateSousServiceDto.html":{}}}],["sousservice.dto.ts:12",{"_index":582,"title":{},"body":{"classes/ConnectSousServiceDto.html":{},"classes/UpdateSousServiceDto.html":{}}}],["sousservice.dto.ts:18",{"_index":792,"title":{},"body":{"classes/CreateSousServiceDto.html":{}}}],["sousservice.dto.ts:19",{"_index":2564,"title":{},"body":{"classes/UpdateSousServiceDto.html":{}}}],["sousservice.entity",{"_index":1418,"title":{},"body":{"classes/MedecinSousService.html":{},"classes/Service.html":{},"classes/Tarif.html":{}}}],["sousservice.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["sousservice.module.ts",{"_index":1508,"title":{},"body":{"modules/MedecinSousserviceModule.html":{}}}],["sousservice.service",{"_index":1452,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"modules/MedecinSousserviceModule.html":{}}}],["sousservice.service.ts",{"_index":1469,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"coverage.html":{}}}],["sousservice.service.ts:10",{"_index":1470,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:107",{"_index":1475,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:147",{"_index":1474,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:17",{"_index":1471,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:81",{"_index":1472,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice.service.ts:91",{"_index":1473,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["sousservice/dto/create",{"_index":692,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["sousservice/dto/update",{"_index":2531,"title":{},"body":{"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["sousservice/medecin",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"coverage.html":{}}}],["sousservicecontroller",{"_index":2277,"title":{"controllers/SousServiceController.html":{}},"body":{"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"coverage.html":{}}}],["sousservicedto",{"_index":2301,"title":{"classes/SousServiceDto.html":{}},"body":{"classes/SousServiceDto.html":{},"coverage.html":{}}}],["sousservicemodule",{"_index":49,"title":{"modules/SousServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SousServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["sousservices",{"_index":2197,"title":{},"body":{"classes/Service.html":{},"injectables/SousServiceService.html":{}}}],["sousserviceservice",{"_index":2291,"title":{"injectables/SousServiceService.html":{}},"body":{"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["sponsors",{"_index":3064,"title":{},"body":{"index.html":{}}}],["spécifi",{"_index":1490,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["spécifique",{"_index":1060,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/UtilisateurService.html":{}}}],["src/.../main.ts",{"_index":2952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../prisma.middleware.ts",{"_index":3092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../upload.interface.ts",{"_index":3093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["src/async",{"_index":139,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:48",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/blacklist/blacklist.service.ts",{"_index":408,"title":{},"body":{"injectables/BlacklistService.html":{},"coverage.html":{}}}],["src/auth/blacklist/blacklist.service.ts:17",{"_index":418,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["src/auth/blacklist/blacklist.service.ts:5",{"_index":412,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["src/auth/blacklist/blacklist.service.ts:8",{"_index":416,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["src/auth/dto/change",{"_index":425,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/connect",{"_index":590,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"coverage.html":{}}}],["src/auth/dto/reset",{"_index":2151,"title":{},"body":{"classes/ResetPasswordDto.html":{},"coverage.html":{}}}],["src/auth/jwt",{"_index":1265,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":1284,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:22",{"_index":1289,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:9",{"_index":1287,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/optional",{"_index":1604,"title":{},"body":{"injectables/OptionalJwtAuthGuard.html":{},"coverage.html":{}}}],["src/common/middleware/async",{"_index":180,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"coverage.html":{}}}],["src/devise/devise.controller.ts",{"_index":875,"title":{},"body":{"controllers/DeviseController.html":{},"coverage.html":{}}}],["src/devise/devise.controller.ts:17",{"_index":893,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:26",{"_index":903,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:35",{"_index":906,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:44",{"_index":911,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:53",{"_index":889,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.controller.ts:62",{"_index":898,"title":{},"body":{"controllers/DeviseController.html":{}}}],["src/devise/devise.service.ts",{"_index":944,"title":{},"body":{"injectables/DeviseService.html":{},"coverage.html":{}}}],["src/devise/devise.service.ts:110",{"_index":951,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:17",{"_index":948,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:52",{"_index":952,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:60",{"_index":954,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:73",{"_index":955,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:8",{"_index":945,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/devise.service.ts:87",{"_index":946,"title":{},"body":{"injectables/DeviseService.html":{}}}],["src/devise/dto/create",{"_index":604,"title":{},"body":{"classes/CreateDeviseDto.html":{},"coverage.html":{}}}],["src/devise/dto/update",{"_index":2509,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"coverage.html":{}}}],["src/disponibilite/disponibilite.controller.ts",{"_index":1003,"title":{},"body":{"controllers/DisponibiliteController.html":{},"coverage.html":{}}}],["src/disponibilite/disponibilite.controller.ts:16",{"_index":1007,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.controller.ts:22",{"_index":1009,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.controller.ts:29",{"_index":1010,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.controller.ts:34",{"_index":1014,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["src/disponibilite/disponibilite.module.ts",{"_index":1038,"title":{},"body":{"modules/DisponibiliteModule.html":{}}}],["src/disponibilite/disponibilite.service.ts",{"_index":1040,"title":{},"body":{"injectables/DisponibiliteService.html":{},"coverage.html":{}}}],["src/disponibilite/disponibilite.service.ts:111",{"_index":1069,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:133",{"_index":1070,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:143",{"_index":1075,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:153",{"_index":1062,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:159",{"_index":1059,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:17",{"_index":1050,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:75",{"_index":1053,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:8",{"_index":1047,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/disponibilite.service.ts:87",{"_index":1055,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["src/disponibilite/dto/create",{"_index":634,"title":{},"body":{"classes/CreateDisponibiliteDto.html":{},"coverage.html":{}}}],["src/disponibilite/dto/update",{"_index":2519,"title":{},"body":{"classes/UpdateDisponibiliteDto.html":{},"coverage.html":{}}}],["src/generated/nestjs",{"_index":534,"title":{},"body":{"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"coverage.html":{}}}],["src/log",{"_index":1342,"title":{},"body":{"injectables/LogListener.html":{},"coverage.html":{}}}],["src/log/log.controller.ts",{"_index":1318,"title":{},"body":{"controllers/LogController.html":{},"coverage.html":{}}}],["src/log/log.controller.ts:15",{"_index":1323,"title":{},"body":{"controllers/LogController.html":{}}}],["src/log/log.controller.ts:21",{"_index":1324,"title":{},"body":{"controllers/LogController.html":{}}}],["src/log/log.module.ts",{"_index":1359,"title":{},"body":{"modules/LogModule.html":{}}}],["src/log/log.service.ts",{"_index":1363,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{}}}],["src/log/log.service.ts:13",{"_index":1368,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:25",{"_index":1373,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:35",{"_index":1370,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:45",{"_index":1371,"title":{},"body":{"injectables/LogService.html":{}}}],["src/log/log.service.ts:6",{"_index":1366,"title":{},"body":{"injectables/LogService.html":{}}}],["src/main.ts",{"_index":2920,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/medecin",{"_index":691,"title":{},"body":{"classes/CreateMedecinSousServiceDto-1.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"modules/MedecinSousserviceModule.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["src/mode",{"_index":704,"title":{},"body":{"classes/CreateModePaiementDto-1.html":{},"controllers/ModePaiementController.html":{},"modules/ModePaiementModule.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["src/paiement/dto/create",{"_index":729,"title":{},"body":{"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"coverage.html":{}}}],["src/paiement/dto/update",{"_index":2545,"title":{},"body":{"classes/UpdatePaiementDto-1.html":{},"coverage.html":{}}}],["src/paiement/paiement",{"_index":1709,"title":{},"body":{"injectables/PaiementNabooService.html":{},"coverage.html":{}}}],["src/paiement/paiement.controller.ts",{"_index":1639,"title":{},"body":{"controllers/PaiementController.html":{},"coverage.html":{}}}],["src/paiement/paiement.controller.ts:25",{"_index":1660,"title":{},"body":{"controllers/PaiementController.html":{}}}],["src/paiement/paiement.controller.ts:32",{"_index":1663,"title":{},"body":{"controllers/PaiementController.html":{}}}],["src/paiement/paiement.controller.ts:39",{"_index":1650,"title":{},"body":{"controllers/PaiementController.html":{}}}],["src/paiement/paiement.controller.ts:60",{"_index":1657,"title":{},"body":{"controllers/PaiementController.html":{}}}],["src/paiement/paiement.interface.ts",{"_index":1262,"title":{},"body":{"interfaces/IPaiementResult.html":{},"coverage.html":{}}}],["src/paiement/paiement.module.ts",{"_index":1703,"title":{},"body":{"modules/PaiementModule.html":{}}}],["src/paiement/paiement.service.ts",{"_index":1774,"title":{},"body":{"injectables/PaiementService.html":{},"coverage.html":{}}}],["src/paiement/paiement.service.ts:108",{"_index":1782,"title":{},"body":{"injectables/PaiementService.html":{}}}],["src/paiement/paiement.service.ts:13",{"_index":1781,"title":{},"body":{"injectables/PaiementService.html":{}}}],["src/paiement/paiement.service.ts:150",{"_index":1787,"title":{},"body":{"injectables/PaiementService.html":{}}}],["src/paiement/paiement.service.ts:211",{"_index":1789,"title":{},"body":{"injectables/PaiementService.html":{}}}],["src/paiement/paiement.service.ts:22",{"_index":1791,"title":{},"body":{"injectables/PaiementService.html":{}}}],["src/paiement/paiement.service.ts:221",{"_index":1784,"title":{},"body":{"injectables/PaiementService.html":{}}}],["src/prisma/prisma.middleware.ts",{"_index":2922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/prisma.module.ts",{"_index":1880,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1883,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:13",{"_index":1892,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:24",{"_index":1891,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":1889,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/privilege/dto/create",{"_index":745,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"coverage.html":{}}}],["src/privilege/dto/find",{"_index":1242,"title":{},"body":{"classes/FindPrivilegeDto.html":{},"coverage.html":{}}}],["src/privilege/dto/update",{"_index":2549,"title":{},"body":{"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["src/privilege/entities/privilege.entity.ts",{"_index":1915,"title":{},"body":{"classes/Privilege-1.html":{},"coverage.html":{}}}],["src/privilege/privilege.controller.ts",{"_index":1917,"title":{},"body":{"controllers/PrivilegeController.html":{},"coverage.html":{}}}],["src/privilege/privilege.controller.ts:19",{"_index":1923,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:25",{"_index":1926,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:31",{"_index":1927,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:37",{"_index":1930,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.controller.ts:43",{"_index":1928,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["src/privilege/privilege.module.ts",{"_index":1954,"title":{},"body":{"modules/PrivilegeModule.html":{}}}],["src/privilege/privilege.service.ts",{"_index":1956,"title":{},"body":{"injectables/PrivilegeService.html":{},"coverage.html":{}}}],["src/privilege/privilege.service.ts:115",{"_index":1962,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:15",{"_index":1964,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:30",{"_index":1958,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:53",{"_index":1960,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:63",{"_index":1961,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:79",{"_index":1963,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/privilege/privilege.service.ts:8",{"_index":1957,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["src/reservation/dto/create",{"_index":760,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"coverage.html":{}}}],["src/reservation/dto/update",{"_index":2552,"title":{},"body":{"classes/UpdateReservationDto-1.html":{},"coverage.html":{}}}],["src/reservation/reservation",{"_index":2028,"title":{},"body":{"injectables/ReservationDocumentService.html":{},"coverage.html":{}}}],["src/reservation/reservation.controller.ts",{"_index":2000,"title":{},"body":{"controllers/ReservationController.html":{},"coverage.html":{}}}],["src/reservation/reservation.controller.ts:19",{"_index":2008,"title":{},"body":{"controllers/ReservationController.html":{}}}],["src/reservation/reservation.controller.ts:26",{"_index":2011,"title":{},"body":{"controllers/ReservationController.html":{}}}],["src/reservation/reservation.controller.ts:34",{"_index":2014,"title":{},"body":{"controllers/ReservationController.html":{}}}],["src/reservation/reservation.controller.ts:43",{"_index":2017,"title":{},"body":{"controllers/ReservationController.html":{}}}],["src/reservation/reservation.controller.ts:51",{"_index":2006,"title":{},"body":{"controllers/ReservationController.html":{}}}],["src/reservation/reservation.module.ts",{"_index":2090,"title":{},"body":{"modules/ReservationModule.html":{}}}],["src/reservation/reservation.service.ts",{"_index":2093,"title":{},"body":{"injectables/ReservationService.html":{},"coverage.html":{}}}],["src/reservation/reservation.service.ts:106",{"_index":2097,"title":{},"body":{"injectables/ReservationService.html":{}}}],["src/reservation/reservation.service.ts:124",{"_index":2098,"title":{},"body":{"injectables/ReservationService.html":{}}}],["src/reservation/reservation.service.ts:148",{"_index":2099,"title":{},"body":{"injectables/ReservationService.html":{}}}],["src/reservation/reservation.service.ts:15",{"_index":2096,"title":{},"body":{"injectables/ReservationService.html":{}}}],["src/reservation/reservation.service.ts:237",{"_index":2095,"title":{},"body":{"injectables/ReservationService.html":{}}}],["src/reservation/reservation.service.ts:9",{"_index":2094,"title":{},"body":{"injectables/ReservationService.html":{}}}],["src/service/dto/create",{"_index":783,"title":{},"body":{"classes/CreateServiceDto-1.html":{},"coverage.html":{}}}],["src/service/dto/update",{"_index":2563,"title":{},"body":{"classes/UpdateServiceDto-1.html":{},"coverage.html":{}}}],["src/service/service.controller.ts",{"_index":2205,"title":{},"body":{"controllers/ServiceController.html":{},"coverage.html":{}}}],["src/service/service.controller.ts:22",{"_index":2206,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:27",{"_index":2207,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:32",{"_index":2208,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:39",{"_index":2212,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.controller.ts:44",{"_index":2209,"title":{},"body":{"controllers/ServiceController.html":{}}}],["src/service/service.module.ts",{"_index":2234,"title":{},"body":{"modules/ServiceModule.html":{}}}],["src/service/service.service.ts",{"_index":2237,"title":{},"body":{"injectables/ServiceService.html":{},"coverage.html":{}}}],["src/service/service.service.ts:16",{"_index":2245,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:29",{"_index":2240,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:49",{"_index":2241,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:54",{"_index":2242,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:60",{"_index":2244,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:70",{"_index":2243,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/service/service.service.ts:9",{"_index":2238,"title":{},"body":{"injectables/ServiceService.html":{}}}],["src/sous",{"_index":794,"title":{},"body":{"classes/CreateSousServiceDto-1.html":{},"controllers/SousServiceController.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["src/statut",{"_index":806,"title":{},"body":{"classes/CreateStatutReservationDto-1.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["src/tarif/dto/create",{"_index":813,"title":{},"body":{"classes/CreateTarifDto-1.html":{},"coverage.html":{}}}],["src/tarif/dto/update",{"_index":2573,"title":{},"body":{"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["src/tarif/tarif.controller.ts",{"_index":2400,"title":{},"body":{"controllers/TarifController.html":{},"coverage.html":{}}}],["src/tarif/tarif.controller.ts:14",{"_index":2405,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:21",{"_index":2414,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:31",{"_index":2420,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:38",{"_index":2421,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:45",{"_index":2423,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:52",{"_index":2404,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:59",{"_index":2411,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.controller.ts:65",{"_index":2409,"title":{},"body":{"controllers/TarifController.html":{}}}],["src/tarif/tarif.module.ts",{"_index":2455,"title":{},"body":{"modules/TarifModule.html":{}}}],["src/tarif/tarif.service.ts",{"_index":2457,"title":{},"body":{"injectables/TarifService.html":{},"coverage.html":{}}}],["src/tarif/tarif.service.ts:119",{"_index":2470,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:14",{"_index":2463,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:145",{"_index":2471,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:165",{"_index":2472,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:204",{"_index":2461,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:241",{"_index":2465,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:261",{"_index":2464,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:79",{"_index":2466,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:8",{"_index":2460,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/tarif/tarif.service.ts:93",{"_index":2468,"title":{},"body":{"injectables/TarifService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts",{"_index":455,"title":{},"body":{"injectables/CloudinaryService.html":{},"coverage.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:11",{"_index":460,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:21",{"_index":474,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:50",{"_index":467,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/cloudinary/cloudinary.service.ts:73",{"_index":462,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["src/upload/interfaces/upload.interface.ts",{"_index":1232,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/upload/interfaces/upload.interface.ts:14",{"_index":1236,"title":{},"body":{"interfaces/FileStorageService.html":{}}}],["src/upload/interfaces/upload.interface.ts:19",{"_index":1234,"title":{},"body":{"interfaces/FileStorageService.html":{}}}],["src/upload/interfaces/upload.interface.ts:9",{"_index":1238,"title":{},"body":{"interfaces/FileStorageService.html":{}}}],["src/upload/upload.module.ts",{"_index":2627,"title":{},"body":{"modules/UploadModule.html":{}}}],["src/upload/upload.service.ts",{"_index":2635,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/upload/upload.service.ts:12",{"_index":2648,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:15",{"_index":2652,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:16",{"_index":2640,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:22",{"_index":2643,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:28",{"_index":2645,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:34",{"_index":2650,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:58",{"_index":2649,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/upload/upload.service.ts:73",{"_index":2641,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/utilisateur/dto/change",{"_index":444,"title":{},"body":{"classes/ChangePrivilegeDto.html":{},"coverage.html":{}}}],["src/utilisateur/dto/create",{"_index":830,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"coverage.html":{}}}],["src/utilisateur/dto/find",{"_index":1245,"title":{},"body":{"classes/FindUtilisateurDto.html":{},"coverage.html":{}}}],["src/utilisateur/dto/update",{"_index":2582,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{},"coverage.html":{}}}],["src/utilisateur/entities/utilisateur.entity.ts",{"_index":2706,"title":{},"body":{"classes/Utilisateur-1.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.controller.ts",{"_index":2708,"title":{},"body":{"controllers/UtilisateurController.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.controller.ts:105",{"_index":2734,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:42",{"_index":2718,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:54",{"_index":2720,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:62",{"_index":2729,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:68",{"_index":2722,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:77",{"_index":2736,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:87",{"_index":2742,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.controller.ts:98",{"_index":2738,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["src/utilisateur/utilisateur.module.ts",{"_index":2787,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["src/utilisateur/utilisateur.service.ts",{"_index":2793,"title":{},"body":{"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["src/utilisateur/utilisateur.service.ts:100",{"_index":2802,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:109",{"_index":2806,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:124",{"_index":2810,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:168",{"_index":2809,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:17",{"_index":2797,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:179",{"_index":2799,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:204",{"_index":2805,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:207",{"_index":2804,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:228",{"_index":2803,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:24",{"_index":2801,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/utilisateur/utilisateur.service.ts:241",{"_index":2808,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["src/validation/exception/exception.service.ts",{"_index":1175,"title":{},"body":{"injectables/ExceptionService.html":{},"coverage.html":{}}}],["src/validation/exception/exception.service.ts:11",{"_index":1183,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:14",{"_index":1197,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:23",{"_index":1189,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:28",{"_index":1194,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:33",{"_index":1192,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:38",{"_index":1200,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/exception.service.ts:9",{"_index":1186,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["src/validation/exception/response/response.interface.ts",{"_index":2153,"title":{},"body":{"interfaces/Response.html":{},"coverage.html":{}}}],["src/validation/exception/response/response.service.ts",{"_index":2157,"title":{},"body":{"injectables/ResponseService.html":{},"coverage.html":{}}}],["src/validation/exception/response/response.service.ts:15",{"_index":2172,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:24",{"_index":2165,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:33",{"_index":2178,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:41",{"_index":2183,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:49",{"_index":2181,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:57",{"_index":2168,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:6",{"_index":2185,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:67",{"_index":2174,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/exception/response/response.service.ts:74",{"_index":2188,"title":{},"body":{"injectables/ResponseService.html":{}}}],["src/validation/validation.module.ts",{"_index":2872,"title":{},"body":{"modules/ValidationModule.html":{}}}],["src/validation/validation.service.ts",{"_index":2881,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{}}}],["src/validation/validation.service.ts:7",{"_index":2884,"title":{},"body":{"injectables/ValidationService.html":{}}}],["start",{"_index":2973,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2975,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":2977,"title":{},"body":{"index.html":{}}}],["started",{"_index":2954,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2965,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2899,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"controllers/UtilisateurController.html":{}}}],["statuscode",{"_index":2155,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseService.html":{}}}],["statut",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"interfaces/IPaiementResult.html":{},"injectables/PaiementNabooService.html":{},"injectables/ReservationService.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["statut.libelle",{"_index":2106,"title":{},"body":{"injectables/ReservationService.html":{}}}],["statutreservation",{"_index":1797,"title":{"classes/StatutReservation.html":{}},"body":{"injectables/PaiementService.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"classes/StatutReservation.html":{},"coverage.html":{}}}],["statutreservation.dto.ts",{"_index":584,"title":{},"body":{"classes/ConnectStatutReservationDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto.html":{},"coverage.html":{}}}],["statutreservation.dto.ts:11",{"_index":805,"title":{},"body":{"classes/CreateStatutReservationDto.html":{}}}],["statutreservation.dto.ts:12",{"_index":2567,"title":{},"body":{"classes/UpdateStatutReservationDto.html":{}}}],["statutreservation.dto.ts:13",{"_index":585,"title":{},"body":{"classes/ConnectStatutReservationDto.html":{}}}],["statutreservation.dto.ts:18",{"_index":586,"title":{},"body":{"classes/ConnectStatutReservationDto.html":{},"classes/CreateStatutReservationDto.html":{}}}],["statutreservation.dto.ts:19",{"_index":2566,"title":{},"body":{"classes/UpdateStatutReservationDto.html":{}}}],["statutreservation.entity",{"_index":1998,"title":{},"body":{"classes/Reservation.html":{}}}],["statutreservationcontroller",{"_index":72,"title":{"controllers/StatutReservationController.html":{}},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"coverage.html":{}}}],["statutreservationdto",{"_index":2362,"title":{"classes/StatutReservationDto.html":{}},"body":{"classes/StatutReservationDto.html":{},"coverage.html":{}}}],["statutreservationmodule",{"_index":50,"title":{"modules/StatutReservationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatutReservationModule.html":{},"modules.html":{},"overview.html":{}}}],["statutreservationservice",{"_index":61,"title":{"injectables/StatutReservationService.html":{}},"body":{"modules/AppModule.html":{},"controllers/StatutReservationController.html":{},"modules/StatutReservationModule.html":{},"injectables/StatutReservationService.html":{},"coverage.html":{},"overview.html":{}}}],["statuts",{"_index":2346,"title":{},"body":{"controllers/StatutReservationController.html":{}}}],["stay",{"_index":3049,"title":{},"body":{"index.html":{}}}],["steps",{"_index":2989,"title":{},"body":{"index.html":{}}}],["stocke",{"_index":177,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}],["store",{"_index":162,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"miscellaneous/variables.html":{}}}],["store.ip",{"_index":3101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.userid",{"_index":173,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"miscellaneous/variables.html":{}}}],["store?.userid",{"_index":3098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["straightforward",{"_index":3008,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":1292,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":1873,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ResponseService.html":{}}}],["success(data",{"_index":2184,"title":{},"body":{"injectables/ResponseService.html":{}}}],["success_url",{"_index":1744,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["succès",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"injectables/ResponseService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["succès'})@apiresponse({status",{"_index":1921,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["summary",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DeviseController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"controllers/UtilisateurController.html":{}}}],["super",{"_index":1278,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["super(options",{"_index":2895,"title":{},"body":{"injectables/ValidationService.html":{}}}],["super.canactivate(context",{"_index":1279,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":3029,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suppression",{"_index":532,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PaiementNabooService.html":{}}}],["supprim",{"_index":1444,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["supprimer",{"_index":897,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/UploadService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["supprimée",{"_index":530,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{}}}],["surtout",{"_index":2623,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["svg",{"_index":3081,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1935,"title":{},"body":{"controllers/PrivilegeController.html":{},"classes/UpdateUtilisateurDto-1.html":{},"dependencies.html":{}}}],["symbole",{"_index":606,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto-1.html":{}}}],["sécurisée",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["sérialiser",{"_index":1385,"title":{},"body":{"injectables/LogService.html":{}}}],["t",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"injectables/UtilisateurService.html":{}}}],["table",{"_index":2925,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2924,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2990,"title":{},"body":{"index.html":{}}}],["target",{"_index":2890,"title":{},"body":{"injectables/ValidationService.html":{}}}],["tarif",{"_index":870,"title":{"classes/Tarif.html":{}},"body":{"classes/Devise.html":{},"injectables/PaiementService.html":{},"classes/SousService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"coverage.html":{}}}],["tarif'})@apiparam({name",{"_index":2410,"title":{},"body":{"controllers/TarifController.html":{}}}],["tarif.actif",{"_index":2505,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarif.controller",{"_index":2456,"title":{},"body":{"modules/TarifModule.html":{}}}],["tarif.dto",{"_index":2426,"title":{},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateTarifDto-1.html":{}}}],["tarif.dto.ts",{"_index":588,"title":{},"body":{"classes/ConnectTarifDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["tarif.dto.ts:11",{"_index":817,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["tarif.dto.ts:12",{"_index":589,"title":{},"body":{"classes/ConnectTarifDto.html":{},"classes/CreateTarifDto.html":{}}}],["tarif.dto.ts:13",{"_index":2572,"title":{},"body":{"classes/UpdateTarifDto.html":{}}}],["tarif.dto.ts:16",{"_index":811,"title":{},"body":{"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{}}}],["tarif.dto.ts:18",{"_index":2570,"title":{},"body":{"classes/UpdateTarifDto.html":{}}}],["tarif.dto.ts:20",{"_index":815,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["tarif.dto.ts:23",{"_index":812,"title":{},"body":{"classes/CreateTarifDto.html":{}}}],["tarif.dto.ts:25",{"_index":2571,"title":{},"body":{"classes/UpdateTarifDto.html":{}}}],["tarif.dto.ts:7",{"_index":818,"title":{},"body":{"classes/CreateTarifDto-1.html":{}}}],["tarif.entity",{"_index":874,"title":{},"body":{"classes/Devise.html":{},"classes/SousService.html":{}}}],["tarif.iddevise",{"_index":2500,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarif.idsousservice",{"_index":2499,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarif.montant",{"_index":1810,"title":{},"body":{"injectables/PaiementService.html":{}}}],["tarif.service",{"_index":2425,"title":{},"body":{"controllers/TarifController.html":{},"modules/TarifModule.html":{}}}],["tarif/tarif.controller",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["tarif/tarif.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["tarif/tarif.service",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["tarifcontroller",{"_index":71,"title":{"controllers/TarifController.html":{}},"body":{"modules/AppModule.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"coverage.html":{}}}],["tarifdto",{"_index":2445,"title":{"classes/TarifDto.html":{}},"body":{"classes/TarifDto.html":{},"coverage.html":{}}}],["tarifexisting",{"_index":2490,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarifexisting.iddevise",{"_index":2495,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarifexisting.idsousservice",{"_index":2493,"title":{},"body":{"injectables/TarifService.html":{}}}],["tarifmodule",{"_index":51,"title":{"modules/TarifModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TarifModule.html":{},"modules.html":{},"overview.html":{}}}],["tarifs",{"_index":861,"title":{},"body":{"classes/Devise.html":{},"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"classes/SousService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{}}}],["tarifs'})@apiquery({name",{"_index":2413,"title":{},"body":{"controllers/TarifController.html":{}}}],["tarifservice",{"_index":62,"title":{"injectables/TarifService.html":{}},"body":{"modules/AppModule.html":{},"controllers/TarifController.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"coverage.html":{},"overview.html":{}}}],["tat",{"_index":2554,"title":{},"body":{"classes/UpdateReservationDto-1.html":{}}}],["telephone",{"_index":600,"title":{},"body":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{}}}],["test",{"_index":1875,"title":{},"body":{"injectables/PaiementService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":2982,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2981,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2978,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":3063,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":1897,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":1906,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$use(loggingmiddleware(this.eventemitter",{"_index":1896,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.apikey",{"_index":1773,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.changepassword(req.user.id",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(connectutilisateurdto.email",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(token",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(resetpassworddto",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.basedir",{"_index":2655,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.blacklistservice.blacklisttoken(token",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.blacklistservice.istokenblacklisted(token",{"_index":1300,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.configservice.get('jwt_secret",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.deviseservice.activate(+id",{"_index":930,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.create(dto",{"_index":920,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.delete(+id",{"_index":933,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.findall",{"_index":921,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.findbyid(+id",{"_index":924,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.deviseservice.update(+id",{"_index":927,"title":{},"body":{"controllers/DeviseController.html":{}}}],["this.disponibiliteservice.create(dto",{"_index":1021,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.disponibiliteservice.findall",{"_index":1022,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.disponibiliteservice.finddisponibilitesbyid(+id",{"_index":1023,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.disponibiliteservice.finddisponibilitesbymedecin(+idmedecin",{"_index":1026,"title":{},"body":{"controllers/DisponibiliteController.html":{}}}],["this.documentservice.generateanduploadpdf(reservation",{"_index":1823,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.documentservice.generateanduploadqrcode",{"_index":1819,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.ensuredirectory(folder",{"_index":2667,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.exceptionservice.createvalidationexception(errors",{"_index":2894,"title":{},"body":{"injectables/ValidationService.html":{}}}],["this.findbyid(id",{"_index":982,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.findone(id",{"_index":2864,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.formaterrors(errors",{"_index":1213,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.generatefilename(file.originalname",{"_index":2669,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.generercreneauxdisponibles(dispo",{"_index":1150,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.generercreneauxdisponibles(disponibilite",{"_index":1138,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.getheaders",{"_index":1752,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["this.getnumerosemaine",{"_index":1122,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.httpresponseservice.badrequest",{"_index":1214,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.httpresponseservice.forbidden(message",{"_index":1217,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.httpresponseservice.internalerror(message",{"_index":1221,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.httpresponseservice.notfound(message",{"_index":1219,"title":{},"body":{"injectables/ExceptionService.html":{}}}],["this.jwtservice.sign(payload",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error",{"_index":493,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logger.error(`échec",{"_index":521,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logger.log",{"_index":528,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logger.log(`image",{"_index":503,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["this.logger.warn",{"_index":531,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.logservice.createlog(payload",{"_index":1354,"title":{},"body":{"injectables/LogListener.html":{}}}],["this.logservice.findall(req.user",{"_index":1331,"title":{},"body":{"controllers/LogController.html":{}}}],["this.logservice.findbyid(+id",{"_index":1332,"title":{},"body":{"controllers/LogController.html":{}}}],["this.modepaiementservice.create(dto",{"_index":1550,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.findall",{"_index":1551,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.findone(+id",{"_index":1552,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.remove(+id",{"_index":1554,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.modepaiementservice.update(+id",{"_index":1553,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["this.naboo.createtransaction",{"_index":1809,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.naboo.deletetransaction(orderid",{"_index":1845,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.nabooservice.cashout(body",{"_index":1690,"title":{},"body":{"controllers/PaiementController.html":{}}}],["this.nabooservice.deletetransaction(orderid",{"_index":1676,"title":{},"body":{"controllers/PaiementController.html":{}}}],["this.nabooservice.getonetransaction(orderid",{"_index":1673,"title":{},"body":{"controllers/PaiementController.html":{}}}],["this.paiementservice.payer(dto",{"_index":1670,"title":{},"body":{"controllers/PaiementController.html":{}}}],["this.parsetime(disponibilite.heuredebut",{"_index":1140,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.parsetime(disponibilite.heurefin",{"_index":1141,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.$transaction(async",{"_index":965,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/TarifService.html":{}}}],["this.prisma.blacklistedtoken.create",{"_index":420,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["this.prisma.blacklistedtoken.findunique",{"_index":423,"title":{},"body":{"injectables/BlacklistService.html":{}}}],["this.prisma.devise.findmany",{"_index":975,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.prisma.devise.findunique",{"_index":960,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/TarifService.html":{}}}],["this.prisma.devise.update",{"_index":984,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.prisma.disponibilite.create",{"_index":1117,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.disponibilite.findfirst",{"_index":1110,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.disponibilite.findmany",{"_index":1124,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.disponibilite.findunique",{"_index":1128,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.prisma.log.create",{"_index":1380,"title":{},"body":{"injectables/LogService.html":{}}}],["this.prisma.log.findfirst",{"_index":1401,"title":{},"body":{"injectables/LogService.html":{}}}],["this.prisma.log.findmany",{"_index":1397,"title":{},"body":{"injectables/LogService.html":{}}}],["this.prisma.medecinsousservice.create",{"_index":1496,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.medecinsousservice.findfirst",{"_index":1492,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.medecinsousservice.findmany",{"_index":1498,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.medecinsousservice.findunique",{"_index":2101,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.prisma.medecinsousservice.update",{"_index":1504,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.prisma.modepaiement.create",{"_index":1594,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.findfirst",{"_index":1586,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.findmany",{"_index":1597,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.modepaiement.findunique",{"_index":1599,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{}}}],["this.prisma.modepaiement.update",{"_index":1602,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.prisma.paiement.create",{"_index":1813,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.prisma.paiement.delete",{"_index":1846,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.prisma.paiement.findfirst",{"_index":1836,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.prisma.paiement.update",{"_index":1861,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.prisma.privilege.create",{"_index":1973,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.prisma.privilege.findfirst",{"_index":1977,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.privilege.findmany",{"_index":1975,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.prisma.privilege.findunique",{"_index":1968,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.privilege.update",{"_index":1982,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.prisma.reservation.create",{"_index":2131,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.prisma.reservation.findfirst",{"_index":2125,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.prisma.reservation.findmany",{"_index":1131,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{}}}],["this.prisma.reservation.findunique",{"_index":1795,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["this.prisma.reservation.update",{"_index":1825,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["this.prisma.service.create",{"_index":2254,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findfirst",{"_index":2248,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findmany",{"_index":2256,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.service.findunique",{"_index":2258,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{}}}],["this.prisma.service.update",{"_index":2263,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.prisma.sousservice.create",{"_index":2327,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.sousservice.findfirst",{"_index":2324,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.sousservice.findmany",{"_index":2335,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.sousservice.findunique",{"_index":1477,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/TarifService.html":{}}}],["this.prisma.sousservice.update",{"_index":2333,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.prisma.statutreservation.create",{"_index":2381,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.findfirst",{"_index":1842,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{},"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.findmany",{"_index":2383,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.findunique",{"_index":2104,"title":{},"body":{"injectables/ReservationService.html":{},"injectables/StatutReservationService.html":{}}}],["this.prisma.statutreservation.update",{"_index":2387,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.prisma.tarif.findfirst",{"_index":2478,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.tarif.findmany",{"_index":2485,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.tarif.findunique",{"_index":2487,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.tarif.update",{"_index":2504,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.prisma.utilisateur.create",{"_index":2831,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.findfirst",{"_index":1582,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.findmany",{"_index":2833,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.findunique",{"_index":1084,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["this.prisma.utilisateur.update",{"_index":2862,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.privilegeservice.create(createprivilegedto",{"_index":1940,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.findall(req.user",{"_index":1941,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.findone(+id",{"_index":1942,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.remove(+id",{"_index":1944,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.privilegeservice.update(+id",{"_index":1943,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["this.reservationservice.cancel(+id",{"_index":2027,"title":{},"body":{"controllers/ReservationController.html":{}}}],["this.reservationservice.create(dto",{"_index":2022,"title":{},"body":{"controllers/ReservationController.html":{}}}],["this.reservationservice.findall(req.user",{"_index":2023,"title":{},"body":{"controllers/ReservationController.html":{}}}],["this.reservationservice.findone(+id",{"_index":2024,"title":{},"body":{"controllers/ReservationController.html":{}}}],["this.reservationservice.update(+id",{"_index":2025,"title":{},"body":{"controllers/ReservationController.html":{}}}],["this.response.created",{"_index":1831,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.response.created(reservation",{"_index":2133,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.response.success",{"_index":1872,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.response.success(null",{"_index":1869,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.response.success(reservation",{"_index":2136,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.response.success(reservations",{"_index":2135,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.response.success(result",{"_index":1850,"title":{},"body":{"injectables/PaiementService.html":{}}}],["this.response.success(updatedreservation",{"_index":2150,"title":{},"body":{"injectables/ReservationService.html":{}}}],["this.responseservice.badrequest",{"_index":1970,"title":{},"body":{"injectables/PrivilegeService.html":{},"injectables/TarifService.html":{}}}],["this.responseservice.badrequest(['ce",{"_index":2823,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.badrequest(['cet",{"_index":2819,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.badrequest([`devise",{"_index":2476,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.badrequest([`le",{"_index":2506,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.badrequest([`sous",{"_index":2474,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.created(created",{"_index":1497,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{}}}],["this.responseservice.created(devise",{"_index":972,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.created(disponibilite",{"_index":1123,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.responseservice.created(privilege",{"_index":1974,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.created(service",{"_index":2255,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.created(sousservice",{"_index":2328,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.created(tarif",{"_index":2483,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.created(utilisateur",{"_index":2832,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.error(error.message",{"_index":2484,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.forbidden(\"l'utilisateur",{"_index":1489,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden(\"seul",{"_index":1501,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden(\"seuls",{"_index":1583,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.forbidden(\"utilisateur",{"_index":1481,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden('ce",{"_index":1493,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden('seul",{"_index":1484,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.forbidden('vous",{"_index":1280,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.responseservice.notfound(`aucun",{"_index":2867,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.notfound(`l'utilisateur",{"_index":2835,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.notfound(`le",{"_index":1479,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.notfound(`tarif",{"_index":2488,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DisponibiliteService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(activateddevise",{"_index":989,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(activatedtarif",{"_index":2502,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(data",{"_index":1499,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["this.responseservice.success(devise",{"_index":980,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(devises",{"_index":976,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(disponibilites",{"_index":1127,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["this.responseservice.success(item",{"_index":2386,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.responseservice.success(list",{"_index":2384,"title":{},"body":{"injectables/StatutReservationService.html":{}}}],["this.responseservice.success(log",{"_index":1403,"title":{},"body":{"injectables/LogService.html":{}}}],["this.responseservice.success(logs",{"_index":1399,"title":{},"body":{"injectables/LogService.html":{}}}],["this.responseservice.success(mode",{"_index":1601,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.responseservice.success(modes",{"_index":1598,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["this.responseservice.success(null",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(privilege",{"_index":1978,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.success(privileges",{"_index":1976,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.success(service",{"_index":2260,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.success(services",{"_index":2257,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.success(sousservice",{"_index":2330,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.success(sousservices",{"_index":2337,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.success(tarif",{"_index":2489,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(tarifs",{"_index":2486,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(updated",{"_index":1505,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{}}}],["this.responseservice.success(updateddevise",{"_index":985,"title":{},"body":{"injectables/DeviseService.html":{}}}],["this.responseservice.success(updatedprivilege",{"_index":1983,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["this.responseservice.success(updatedservice",{"_index":2264,"title":{},"body":{"injectables/ServiceService.html":{}}}],["this.responseservice.success(updatedsousservice",{"_index":2334,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["this.responseservice.success(updatedtarif",{"_index":2498,"title":{},"body":{"injectables/TarifService.html":{}}}],["this.responseservice.success(updatedutilisateur",{"_index":2863,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(user",{"_index":2868,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(utilisateur",{"_index":2836,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.success(utilisateurs",{"_index":2834,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.responseservice.unauthorized",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.responseservice.unauthorized('token",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.service.create(dto",{"_index":1456,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.findall",{"_index":1457,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.findone(+id",{"_index":1459,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.remove(+id",{"_index":1462,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.service.update(+id",{"_index":1460,"title":{},"body":{"controllers/MedecinSousServiceController.html":{},"controllers/StatutReservationController.html":{}}}],["this.serviceservice.create(createservicedto",{"_index":2217,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.findall",{"_index":2218,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.findone(+id",{"_index":2219,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.remove(+id",{"_index":2222,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.serviceservice.update(+id",{"_index":2221,"title":{},"body":{"controllers/ServiceController.html":{}}}],["this.sousserviceservice.create(createsousservicedto",{"_index":2294,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.findall",{"_index":2300,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.findbyserviceid((+idservice",{"_index":2297,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.findone(+id",{"_index":2295,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.remove(+id",{"_index":2299,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.sousserviceservice.update(+id",{"_index":2298,"title":{},"body":{"controllers/SousServiceController.html":{}}}],["this.tarifservice.activate(+id",{"_index":2439,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.create(dto",{"_index":2430,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.deactivate(+id",{"_index":2444,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.delete(+id",{"_index":2440,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findall",{"_index":2433,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findallbysousservice(+idsousservice",{"_index":2432,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findallbysousservicefull(+id",{"_index":2436,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.findbyid(+id",{"_index":2437,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.tarifservice.update(+id",{"_index":2438,"title":{},"body":{"controllers/TarifController.html":{}}}],["this.uploadservice.deletefile(profilurl",{"_index":2845,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["this.uploadservice.uploadsingle(file",{"_index":1591,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["this.uploadsingle(file",{"_index":520,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/UploadService.html":{}}}],["this.utilisateurservice.create(createutilisateurdto",{"_index":2752,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findall",{"_index":2753,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findallclients",{"_index":2757,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findallwithoutadminsandclients",{"_index":2756,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findbyemail(email",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateurservice.findone(+id",{"_index":2758,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.findutilisateurbyemail(email",{"_index":2764,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.remove(+id",{"_index":2761,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.utilisateurservice.update(+id",{"_index":2760,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["this.validateutilisateur(email",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifyadmin(currentuser",{"_index":1585,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["this.verifyadmin(user",{"_index":1396,"title":{},"body":{"injectables/LogService.html":{}}}],["this.webhooksecret",{"_index":1855,"title":{},"body":{"injectables/PaiementService.html":{}}}],["throw",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{}}}],["time",{"_index":630,"title":{},"body":{"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"index.html":{}}}],["timestamp",{"_index":2156,"title":{},"body":{"interfaces/Response.html":{},"injectables/ResponseService.html":{}}}],["token",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["token')@apioperation({summary",{"_index":2715,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["token')@useguards(jwtauthguard)@apioperation({summary",{"_index":1426,"title":{},"body":{"controllers/MedecinSousServiceController.html":{}}}],["token'})@apiresponse({status",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["tolowercase",{"_index":2115,"title":{},"body":{"injectables/ReservationService.html":{}}}],["ton",{"_index":2769,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["touch",{"_index":3071,"title":{},"body":{"index.html":{}}}],["tous",{"_index":1322,"title":{},"body":{"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{}}}],["toute",{"_index":2878,"title":{},"body":{"modules/ValidationModule.html":{}}}],["toutes",{"_index":902,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{}}}],["trait",{"_index":1871,"title":{},"body":{"injectables/PaiementService.html":{}}}],["transaction",{"_index":1646,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["transaction?order_id=${orderid",{"_index":1761,"title":{},"body":{"injectables/PaiementNabooService.html":{}}}],["transaction_status",{"_index":1852,"title":{},"body":{"injectables/PaiementService.html":{}}}],["transform",{"_index":2888,"title":{},"body":{"injectables/ValidationService.html":{}}}],["transformer",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2891,"title":{},"body":{"injectables/ValidationService.html":{}}}],["tre",{"_index":748,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LogService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{}}}],["trop",{"_index":2598,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["trouv",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["trouvé'})@apiresponse({status",{"_index":2733,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["trouvée",{"_index":979,"title":{},"body":{"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/ResponseService.html":{},"injectables/TarifService.html":{}}}],["true",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreateReservationDto.html":{},"classes/CreateServiceDto.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/Devise.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{}}}],["try",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CloudinaryService.html":{},"injectables/PaiementNabooService.html":{},"injectables/PrismaService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/TarifService.html":{},"injectables/UploadService.html":{}}}],["ts",{"_index":210,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{}}}],["tu",{"_index":2765,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["twitter",{"_index":3077,"title":{},"body":{"index.html":{}}}],["type",{"_index":150,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"injectables/CloudinaryService.html":{},"classes/ConnectDeviseDto.html":{},"classes/ConnectDisponibiliteDto.html":{},"classes/ConnectDossierMedicalDto.html":{},"classes/ConnectLogDto.html":{},"classes/ConnectMedecinSousServiceDto.html":{},"classes/ConnectModePaiementDto.html":{},"classes/ConnectOrdonnanceDto.html":{},"classes/ConnectPaiementDto.html":{},"classes/ConnectPrivilegeDto.html":{},"classes/ConnectReservationDto.html":{},"classes/ConnectServiceDto.html":{},"classes/ConnectSousServiceDto.html":{},"classes/ConnectStatutReservationDto.html":{},"classes/ConnectTarifDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDeviseDto-1.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateDisponibiliteDto-1.html":{},"classes/CreateDossierMedicalDto.html":{},"classes/CreateLogDto.html":{},"classes/CreateMedecinSousServiceDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreateOrdonnanceDto.html":{},"classes/CreatePaiementDto.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/Devise.html":{},"controllers/DeviseController.html":{},"classes/DeviseDto.html":{},"injectables/DeviseService.html":{},"classes/Disponibilite.html":{},"controllers/DisponibiliteController.html":{},"classes/DisponibiliteDto.html":{},"injectables/DisponibiliteService.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"injectables/ExceptionService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"classes/FindPrivilegeDto.html":{},"classes/FindUtilisateurDto.html":{},"interfaces/IPaiementResult.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Log.html":{},"controllers/LogController.html":{},"classes/LogDto.html":{},"injectables/LogListener.html":{},"injectables/LogService.html":{},"classes/MedecinSousService.html":{},"controllers/MedecinSousServiceController.html":{},"classes/MedecinSousServiceDto.html":{},"injectables/MedecinSousServiceService.html":{},"classes/ModePaiement.html":{},"controllers/ModePaiementController.html":{},"classes/ModePaiementDto.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"controllers/PaiementController.html":{},"classes/PaiementDto.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/PrismaService.html":{},"classes/Privilege.html":{},"controllers/PrivilegeController.html":{},"classes/PrivilegeDto.html":{},"injectables/PrivilegeService.html":{},"classes/Reservation.html":{},"controllers/ReservationController.html":{},"injectables/ReservationDocumentService.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/Response.html":{},"injectables/ResponseService.html":{},"classes/Service.html":{},"controllers/ServiceController.html":{},"classes/ServiceDto.html":{},"injectables/ServiceService.html":{},"classes/SousService.html":{},"controllers/SousServiceController.html":{},"classes/SousServiceDto.html":{},"injectables/SousServiceService.html":{},"classes/StatutReservation.html":{},"controllers/StatutReservationController.html":{},"classes/StatutReservationDto.html":{},"injectables/StatutReservationService.html":{},"classes/Tarif.html":{},"controllers/TarifController.html":{},"classes/TarifDto.html":{},"injectables/TarifService.html":{},"classes/UpdateDeviseDto-1.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"classes/UpdateDossierMedicalDto.html":{},"classes/UpdateLogDto.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateOrdonnanceDto.html":{},"classes/UpdatePaiementDto.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UploadService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateurController.html":{},"classes/UtilisateurDto.html":{},"injectables/UtilisateurService.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeconsultation",{"_index":756,"title":{},"body":{"classes/CreateReservationDto.html":{},"classes/CreateReservationDto-1.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{}}}],["types",{"_index":2513,"title":{},"body":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"classes/UpdateTarifDto-1.html":{},"dependencies.html":{}}}],["typescript",{"_index":1206,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["téléphone",{"_index":841,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["ui",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/FindUtilisateurDto.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":2163,"title":{},"body":{"injectables/ResponseService.html":{}}}],["unauthorized(message",{"_index":2187,"title":{},"body":{"injectables/ResponseService.html":{}}}],["unauthorizedexception",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["unauthorizedexception(\"non",{"_index":1580,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["unauthorizedexception(\"vous",{"_index":1966,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["unauthorizedexception('mot",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('seuls",{"_index":1393,"title":{},"body":{"injectables/LogService.html":{}}}],["unauthorizedexception('token",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('utilisateur",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('vous",{"_index":1391,"title":{},"body":{"injectables/LogService.html":{}}}],["undefined",{"_index":625,"title":{},"body":{"classes/CreateDeviseDto.html":{},"injectables/ModePaiementService.html":{},"controllers/PaiementController.html":{},"classes/UpdateReservationDto-1.html":{},"injectables/UtilisateurService.html":{}}}],["undefined})@isenum(['physique",{"_index":775,"title":{},"body":{"classes/CreateReservationDto-1.html":{}}}],["une",{"_index":204,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"classes/CreatePrivilegeDto-1.html":{},"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/FindUtilisateurDto.html":{},"injectables/LogService.html":{},"controllers/PaiementController.html":{},"controllers/ReservationController.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["unique",{"_index":1971,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["uniquement",{"_index":1925,"title":{},"body":{"controllers/PrivilegeController.html":{},"controllers/UtilisateurController.html":{},"miscellaneous/variables.html":{}}}],["uniquement)'})@apiresponse({status",{"_index":1920,"title":{},"body":{"controllers/PrivilegeController.html":{}}}],["unit",{"_index":2979,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BlacklistService.html":{},"injectables/DeviseService.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtStrategy.html":{},"controllers/LogController.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ReservationService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["unlicensed",{"_index":3090,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":1208,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["update",{"_index":882,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["update(@param('id",{"_index":926,"title":{},"body":{"controllers/DeviseController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/TarifController.html":{}}}],["update(id",{"_index":907,"title":{},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"controllers/TarifController.html":{},"injectables/TarifService.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["update(json.stringify(body",{"_index":1856,"title":{},"body":{"injectables/PaiementService.html":{}}}],["updated",{"_index":1503,"title":{},"body":{"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/StatutReservationService.html":{},"injectables/TarifService.html":{}}}],["updatedat",{"_index":862,"title":{},"body":{"classes/Devise.html":{},"classes/DeviseDto.html":{},"classes/Disponibilite.html":{},"classes/DisponibiliteDto.html":{},"classes/DossierMedical.html":{},"classes/DossierMedicalDto.html":{},"classes/Log.html":{},"classes/LogDto.html":{},"classes/MedecinSousService.html":{},"classes/MedecinSousServiceDto.html":{},"classes/ModePaiement.html":{},"classes/ModePaiementDto.html":{},"classes/Ordonnance.html":{},"classes/OrdonnanceDto.html":{},"classes/Paiement.html":{},"classes/PaiementDto.html":{},"classes/Privilege.html":{},"classes/PrivilegeDto.html":{},"classes/Reservation.html":{},"classes/ReservationDto.html":{},"classes/Service.html":{},"classes/ServiceDto.html":{},"classes/SousService.html":{},"classes/SousServiceDto.html":{},"classes/StatutReservation.html":{},"classes/StatutReservationDto.html":{},"classes/Tarif.html":{},"classes/TarifDto.html":{},"classes/Utilisateur.html":{},"classes/UtilisateurDto.html":{}}}],["updateddevise",{"_index":983,"title":{},"body":{"injectables/DeviseService.html":{}}}],["updatedevisedto",{"_index":908,"title":{"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{}},"body":{"controllers/DeviseController.html":{},"injectables/DeviseService.html":{},"classes/UpdateDeviseDto.html":{},"classes/UpdateDeviseDto-1.html":{},"coverage.html":{}}}],["updatedisponibilitedto",{"_index":1017,"title":{"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{}},"body":{"controllers/DisponibiliteController.html":{},"injectables/DisponibiliteService.html":{},"classes/UpdateDisponibiliteDto.html":{},"classes/UpdateDisponibiliteDto-1.html":{},"coverage.html":{}}}],["updatedossiermedicaldto",{"_index":2524,"title":{"classes/UpdateDossierMedicalDto.html":{}},"body":{"classes/UpdateDossierMedicalDto.html":{},"coverage.html":{}}}],["updatedprivilege",{"_index":1981,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["updatedreservation",{"_index":1824,"title":{},"body":{"injectables/PaiementService.html":{},"injectables/ReservationService.html":{}}}],["updatedservice",{"_index":2262,"title":{},"body":{"injectables/ServiceService.html":{}}}],["updatedsousservice",{"_index":2332,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["updatedtarif",{"_index":2496,"title":{},"body":{"injectables/TarifService.html":{}}}],["updatedutilisateur",{"_index":2861,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updatelogdto",{"_index":2528,"title":{"classes/UpdateLogDto.html":{}},"body":{"classes/UpdateLogDto.html":{},"coverage.html":{}}}],["updatemedecinsousservicedto",{"_index":1446,"title":{"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{}},"body":{"controllers/MedecinSousServiceController.html":{},"injectables/MedecinSousServiceService.html":{},"classes/UpdateMedecinSousServiceDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"coverage.html":{}}}],["updatemodepaiementdto",{"_index":1533,"title":{"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{}},"body":{"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"classes/UpdateModePaiementDto.html":{},"classes/UpdateModePaiementDto-1.html":{},"coverage.html":{}}}],["updateordonnancedto",{"_index":2539,"title":{"classes/UpdateOrdonnanceDto.html":{}},"body":{"classes/UpdateOrdonnanceDto.html":{},"coverage.html":{}}}],["updatepaiementdto",{"_index":2541,"title":{"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{}},"body":{"classes/UpdatePaiementDto.html":{},"classes/UpdatePaiementDto-1.html":{},"coverage.html":{}}}],["updateprivilegedto",{"_index":1929,"title":{"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{}},"body":{"controllers/PrivilegeController.html":{},"injectables/PrivilegeService.html":{},"classes/UpdatePrivilegeDto.html":{},"classes/UpdatePrivilegeDto-1.html":{},"coverage.html":{}}}],["updateprivilegedto.libelle",{"_index":1979,"title":{},"body":{"injectables/PrivilegeService.html":{}}}],["updatereservationdto",{"_index":2015,"title":{"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{}},"body":{"controllers/ReservationController.html":{},"injectables/ReservationService.html":{},"classes/UpdateReservationDto.html":{},"classes/UpdateReservationDto-1.html":{},"coverage.html":{}}}],["updates",{"_index":3051,"title":{},"body":{"index.html":{}}}],["updateservicedto",{"_index":2210,"title":{"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{}},"body":{"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"classes/UpdateServiceDto.html":{},"classes/UpdateServiceDto-1.html":{},"coverage.html":{}}}],["updateservicedto.iconurl",{"_index":2261,"title":{},"body":{"injectables/ServiceService.html":{}}}],["updatesousservicedto",{"_index":2289,"title":{"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{}},"body":{"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"classes/UpdateSousServiceDto.html":{},"classes/UpdateSousServiceDto-1.html":{},"coverage.html":{}}}],["updatesousservicedto.iconurl",{"_index":2331,"title":{},"body":{"injectables/SousServiceService.html":{}}}],["updatestatutreservationdto",{"_index":2356,"title":{"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{}},"body":{"controllers/StatutReservationController.html":{},"injectables/StatutReservationService.html":{},"classes/UpdateStatutReservationDto.html":{},"classes/UpdateStatutReservationDto-1.html":{},"coverage.html":{}}}],["updatetarifdto",{"_index":2422,"title":{"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{}},"body":{"controllers/TarifController.html":{},"injectables/TarifService.html":{},"classes/UpdateTarifDto.html":{},"classes/UpdateTarifDto-1.html":{},"coverage.html":{}}}],["updatetarifdto.actif",{"_index":2491,"title":{},"body":{"injectables/TarifService.html":{}}}],["updatetarifdto.iddevise",{"_index":2494,"title":{},"body":{"injectables/TarifService.html":{}}}],["updatetarifdto.idsousservice",{"_index":2492,"title":{},"body":{"injectables/TarifService.html":{}}}],["updateutilisateurdto",{"_index":2575,"title":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["updateutilisateurdto.email",{"_index":2850,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.idprivilege",{"_index":2857,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.nom",{"_index":2846,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.password",{"_index":2852,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.prenom",{"_index":2848,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.profil",{"_index":2859,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["updateutilisateurdto.telephone",{"_index":2855,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["upload",{"_index":1240,"title":{},"body":{"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/ReservationDocumentService.html":{},"miscellaneous/variables.html":{}}}],["upload.service",{"_index":2629,"title":{},"body":{"modules/UploadModule.html":{}}}],["upload/cloudinary/cloudinary.service",{"_index":2091,"title":{},"body":{"modules/ReservationModule.html":{}}}],["upload/interfaces/upload.interface",{"_index":1578,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["upload/upload.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/ModePaiementModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/UtilisateurModule.html":{}}}],["upload/upload.service",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["uploaded",{"_index":1590,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["uploaded.url",{"_index":1593,"title":{},"body":{"injectables/ModePaiementService.html":{}}}],["uploadedfile",{"_index":1536,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["uploadfile",{"_index":2639,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(image",{"_index":2647,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadmodule",{"_index":52,"title":{"modules/UploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModePaiementModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadmultiple",{"_index":458,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["uploadmultiple(files",{"_index":464,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["uploadresult",{"_index":2252,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["uploadresult.url",{"_index":2253,"title":{},"body":{"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/UtilisateurService.html":{}}}],["uploads",{"_index":2657,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploads/${relativepath",{"_index":2675,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservice",{"_index":63,"title":{"injectables/UploadService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ModePaiementService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"modules/UploadModule.html":{},"injectables/UploadService.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["uploadsingle",{"_index":459,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/UploadService.html":{}}}],["uploadsingle(file",{"_index":473,"title":{},"body":{"injectables/CloudinaryService.html":{},"interfaces/FileStorageService.html":{},"injectables/UploadService.html":{}}}],["uploadstream",{"_index":490,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["uploadstream.end(file.buffer",{"_index":509,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["uploadstream.end(pdfbuffer",{"_index":2078,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["uploadstream.end(qrbuffer",{"_index":2049,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["uploadée",{"_index":504,"title":{},"body":{"injectables/CloudinaryService.html":{}}}],["url",{"_index":507,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateSousServiceDto-1.html":{},"interfaces/FileStorageService.html":{},"interfaces/FileUploadResult.html":{},"injectables/PaiementNabooService.html":{},"injectables/ReservationDocumentService.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"injectables/UploadService.html":{}}}],["usd",{"_index":620,"title":{},"body":{"classes/CreateDeviseDto.html":{}}}],["use",{"_index":182,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["use(req",{"_index":183,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{}}}],["useclass",{"_index":2632,"title":{},"body":{"modules/UploadModule.html":{}}}],["usefactory",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["useguards(jwtauthguard",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"controllers/DisponibiliteController.html":{},"controllers/LogController.html":{},"controllers/MedecinSousServiceController.html":{},"controllers/ModePaiementController.html":{},"controllers/PaiementController.html":{},"controllers/PrivilegeController.html":{},"controllers/ReservationController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/StatutReservationController.html":{},"controllers/UtilisateurController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":1531,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":1527,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":1529,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(jwtauthguard)@patch(':id')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1534,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useguards(optionaljwtauthguard",{"_index":2749,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["useinterceptors",{"_index":1537,"title":{},"body":{"controllers/ModePaiementController.html":{},"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{},"controllers/UtilisateurController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":2220,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["useinterceptors(fileinterceptor('icon",{"_index":1547,"title":{},"body":{"controllers/ModePaiementController.html":{}}}],["useinterceptors(fileinterceptor('iconurl",{"_index":2216,"title":{},"body":{"controllers/ServiceController.html":{},"controllers/SousServiceController.html":{}}}],["useinterceptors(fileinterceptor('profilurl",{"_index":2750,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["user",{"_index":1083,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"injectables/OptionalJwtAuthGuard.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"injectables/UtilisateurService.html":{}}}],["user.privilege.libelle",{"_index":1482,"title":{},"body":{"injectables/MedecinSousServiceService.html":{}}}],["user.privilege?.libelle",{"_index":1392,"title":{},"body":{"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["userid",{"_index":163,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{},"injectables/AsyncContextMiddleware.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":3043,"title":{},"body":{"index.html":{}}}],["utilis",{"_index":2820,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["utilisateur",{"_index":239,"title":{"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DossierMedical.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/Ordonnance.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{},"injectables/ReservationService.html":{},"classes/Utilisateur.html":{},"classes/Utilisateur-1.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{}}}],["utilisateur.controller",{"_index":2788,"title":{},"body":{"modules/UtilisateurModule.html":{}}}],["utilisateur.dto",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateur.dto.ts",{"_index":591,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"coverage.html":{}}}],["utilisateur.dto.ts:11",{"_index":826,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:12",{"_index":2578,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:13",{"_index":595,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["utilisateur.dto.ts:15",{"_index":827,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:17",{"_index":2579,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:18",{"_index":601,"title":{},"body":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["utilisateur.dto.ts:19",{"_index":825,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:22",{"_index":2577,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:23",{"_index":602,"title":{},"body":{"classes/ConnectUtilisateurDto-1.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:27",{"_index":829,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:28",{"_index":1255,"title":{},"body":{"classes/FindUtilisateurDto.html":{}}}],["utilisateur.dto.ts:29",{"_index":2586,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:31",{"_index":849,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:32",{"_index":2581,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:33",{"_index":828,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:35",{"_index":834,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:38",{"_index":2580,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:39",{"_index":838,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:40",{"_index":824,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:45",{"_index":2576,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:46",{"_index":2608,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:52",{"_index":2602,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:58",{"_index":2589,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:62",{"_index":2605,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["utilisateur.dto.ts:8",{"_index":593,"title":{},"body":{"classes/ConnectUtilisateurDto.html":{},"classes/CreateUtilisateurDto-1.html":{},"classes/FindUtilisateurDto.html":{}}}],["utilisateur.email",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.entity",{"_index":1164,"title":{},"body":{"classes/DossierMedical.html":{},"classes/Log.html":{},"classes/MedecinSousService.html":{},"classes/Ordonnance.html":{},"classes/Privilege.html":{},"classes/Reservation.html":{}}}],["utilisateur.id",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.idprivilege",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.password",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateur.service",{"_index":2743,"title":{},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{}}}],["utilisateur/utilisateur.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["utilisateur/utilisateur.service",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["utilisateurcontroller",{"_index":2707,"title":{"controllers/UtilisateurController.html":{}},"body":{"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"coverage.html":{}}}],["utilisateurdto",{"_index":2771,"title":{"classes/UtilisateurDto.html":{}},"body":{"classes/UtilisateurDto.html":{},"coverage.html":{}}}],["utilisateurid",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["utilisateurmodule",{"_index":53,"title":{"modules/UtilisateurModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UtilisateurModule.html":{},"modules.html":{},"overview.html":{}}}],["utilisateurs",{"_index":1908,"title":{},"body":{"classes/Privilege.html":{},"controllers/UtilisateurController.html":{},"injectables/UtilisateurService.html":{}}}],["utilisateurservice",{"_index":311,"title":{"injectables/UtilisateurService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UtilisateurController.html":{},"modules/UtilisateurModule.html":{},"injectables/UtilisateurService.html":{},"coverage.html":{},"overview.html":{}}}],["utilises",{"_index":2766,"title":{},"body":{"controllers/UtilisateurController.html":{}}}],["utilisée",{"_index":1378,"title":{},"body":{"injectables/LogService.html":{}}}],["v2",{"_index":476,"title":{},"body":{"injectables/CloudinaryService.html":{},"injectables/ReservationDocumentService.html":{}}}],["val",{"_index":2840,"title":{},"body":{"injectables/UtilisateurService.html":{}}}],["valeur",{"_index":206,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"classes/CreateDeviseDto.html":{}}}],["validate",{"_index":1286,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(req",{"_index":1288,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":2609,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["validateif(o",{"_index":2610,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["validateutilisateur",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateutilisateur(email",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":1092,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/ExceptionService.html":{},"injectables/PrivilegeService.html":{},"injectables/UtilisateurService.html":{}}}],["validation.service",{"_index":2873,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation/exception/response/response.service",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DeviseService.html":{},"modules/DisponibiliteModule.html":{},"injectables/DisponibiliteService.html":{},"injectables/JwtAuthGuard.html":{},"modules/LogModule.html":{},"injectables/LogService.html":{},"injectables/MedecinSousServiceService.html":{},"injectables/ModePaiementService.html":{},"modules/PaiementModule.html":{},"injectables/PaiementService.html":{},"injectables/PrivilegeService.html":{},"modules/ReservationModule.html":{},"injectables/ReservationService.html":{},"modules/ServiceModule.html":{},"injectables/ServiceService.html":{},"modules/SousServiceModule.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{},"modules/TarifModule.html":{},"injectables/TarifService.html":{},"injectables/UtilisateurService.html":{}}}],["validation/validation.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["validation/validation.service",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["validationerror",{"_index":1196,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/ValidationService.html":{}}}],["validationmodule",{"_index":54,"title":{"modules/ValidationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2882,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validationpipeoptions",{"_index":2885,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validationservice",{"_index":64,"title":{"injectables/ValidationService.html":{}},"body":{"modules/AppModule.html":{},"modules/ValidationModule.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"overview.html":{}}}],["validator",{"_index":438,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ChangePrivilegeDto.html":{},"classes/ConnectUtilisateurDto.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateDisponibiliteDto.html":{},"classes/CreateMedecinSousServiceDto-1.html":{},"classes/CreateModePaiementDto-1.html":{},"classes/CreatePaiementDto-1.html":{},"classes/CreatePaiementNabooDto.html":{},"classes/CreatePrivilegeDto-1.html":{},"classes/CreateReservationDto-1.html":{},"classes/CreateServiceDto-1.html":{},"classes/CreateSousServiceDto-1.html":{},"classes/CreateStatutReservationDto-1.html":{},"classes/CreateTarifDto-1.html":{},"classes/CreateUtilisateurDto-1.html":{},"injectables/ExceptionService.html":{},"classes/FindUtilisateurDto.html":{},"classes/ResetPasswordDto.html":{},"classes/UpdateMedecinSousServiceDto-1.html":{},"classes/UpdateModePaiementDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"classes/UpdateServiceDto-1.html":{},"classes/UpdateSousServiceDto-1.html":{},"classes/UpdateStatutReservationDto-1.html":{},"classes/UpdateUtilisateurDto-1.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["valide",{"_index":517,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/FindUtilisateurDto.html":{},"classes/UpdateUtilisateurDto-1.html":{}}}],["value",{"_index":469,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreateDeviseDto.html":{},"classes/CreateTarifDto-1.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{},"injectables/ReservationDocumentService.html":{},"injectables/ResponseService.html":{},"injectables/UploadService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2923,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":3091,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":1209,"title":{},"body":{"injectables/ExceptionService.html":{},"injectables/UploadService.html":{}}}],["vendredi",{"_index":1098,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["ventuellement",{"_index":843,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{}}}],["verifyadmin",{"_index":1365,"title":{},"body":{"injectables/LogService.html":{},"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["verifyadmin(currentuser",{"_index":1575,"title":{},"body":{"injectables/ModePaiementService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{},"injectables/SousServiceService.html":{},"injectables/StatutReservationService.html":{}}}],["verifyadmin(user",{"_index":1372,"title":{},"body":{"injectables/LogService.html":{}}}],["vers",{"_index":1654,"title":{},"body":{"controllers/PaiementController.html":{}}}],["version",{"_index":3088,"title":{},"body":{"properties.html":{}}}],["veuillez",{"_index":1301,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PaiementService.html":{}}}],["vide",{"_index":502,"title":{},"body":{"injectables/CloudinaryService.html":{},"classes/CreatePrivilegeDto-1.html":{}}}],["vide'})@isstring({message",{"_index":749,"title":{},"body":{"classes/CreatePrivilegeDto-1.html":{}}}],["video",{"_index":772,"title":{},"body":{"classes/CreateReservationDto-1.html":{},"classes/UpdateReservationDto-1.html":{},"index.html":{}}}],["visit",{"_index":3026,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":3039,"title":{},"body":{"index.html":{}}}],["viter",{"_index":624,"title":{},"body":{"classes/CreateDeviseDto.html":{},"classes/UpdateUtilisateurDto-1.html":{},"modules/UtilisateurModule.html":{}}}],["void",{"_index":189,"title":{},"body":{"injectables/AsyncContextMiddleware.html":{},"injectables/ExceptionService.html":{},"injectables/LogService.html":{},"injectables/UploadService.html":{}}}],["votre",{"_index":1375,"title":{},"body":{"injectables/LogService.html":{}}}],["vous",{"_index":1302,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LogService.html":{}}}],["vérification",{"_index":856,"title":{},"body":{"classes/CreateUtilisateurDto-1.html":{},"injectables/DisponibiliteService.html":{},"injectables/LogService.html":{},"injectables/PrivilegeService.html":{},"injectables/ServiceService.html":{}}}],["vérifier",{"_index":1108,"title":{},"body":{"injectables/DisponibiliteService.html":{},"injectables/ReservationService.html":{}}}],["watch",{"_index":2974,"title":{},"body":{"index.html":{}}}],["wave",{"_index":1678,"title":{},"body":{"controllers/PaiementController.html":{},"injectables/PaiementNabooService.html":{},"injectables/PaiementService.html":{}}}],["wave'})@apibody({schema",{"_index":1656,"title":{},"body":{"controllers/PaiementController.html":{}}}],["webhook",{"_index":1870,"title":{},"body":{"injectables/PaiementService.html":{}}}],["webhooksecret",{"_index":1775,"title":{},"body":{"injectables/PaiementService.html":{}}}],["website",{"_index":3075,"title":{},"body":{"index.html":{}}}],["weekday",{"_index":2113,"title":{},"body":{"injectables/ReservationService.html":{}}}],["whitelist",{"_index":2887,"title":{},"body":{"injectables/ValidationService.html":{}}}],["width",{"_index":2044,"title":{},"body":{"injectables/ReservationDocumentService.html":{}}}],["withcreneaux",{"_index":1146,"title":{},"body":{"injectables/DisponibiliteService.html":{}}}],["working",{"_index":3025,"title":{},"body":{"index.html":{}}}],["world",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":3053,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1237,"title":{},"body":{"interfaces/FileStorageService.html":{},"controllers/ModePaiementController.html":{},"injectables/ModePaiementService.html":{},"controllers/ServiceController.html":{},"injectables/ServiceService.html":{},"controllers/SousServiceController.html":{},"injectables/SousServiceService.html":{},"controllers/TarifController.html":{},"injectables/UtilisateurService.html":{}}}],["you'd",{"_index":3067,"title":{},"body":{"index.html":{}}}],["you're",{"_index":2983,"title":{},"body":{"index.html":{}}}],["z])(?=.*[a",{"_index":2596,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&]).{8",{"_index":2597,"title":{},"body":{"classes/UpdateUtilisateurDto-1.html":{}}}],["zigfreak02",{"_index":1682,"title":{},"body":{"controllers/PaiementController.html":{}}}],["zoom",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DisponibiliteModule.html":{},"modules/LogModule.html":{},"modules/MedecinSousserviceModule.html":{},"modules/ModePaiementModule.html":{},"modules/PaiementModule.html":{},"modules/PrismaModule.html":{},"modules/PrivilegeModule.html":{},"modules/ReservationModule.html":{},"modules/ServiceModule.html":{},"modules/SousServiceModule.html":{},"modules/StatutReservationModule.html":{},"modules/TarifModule.html":{},"modules/UploadModule.html":{},"modules/UtilisateurModule.html":{},"modules/ValidationModule.html":{},"overview.html":{}}}],["zéro",{"_index":166,"title":{},"body":{"injectables/AsyncContextInterceptor.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nDisponibiliteModule\n\nDisponibiliteModule\n\nAppModule -->\n\nDisponibiliteModule->AppModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nAppModule -->\n\nLogModule->AppModule\n\n\n\n\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule\n\nAppModule -->\n\nMedecinSousserviceModule->AppModule\n\n\n\n\n\nModePaiementModule\n\nModePaiementModule\n\nAppModule -->\n\nModePaiementModule->AppModule\n\n\n\n\n\nPaiementModule\n\nPaiementModule\n\nAppModule -->\n\nPaiementModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrivilegeModule\n\nPrivilegeModule\n\nAppModule -->\n\nPrivilegeModule->AppModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nSousServiceModule\n\nSousServiceModule\n\nAppModule -->\n\nSousServiceModule->AppModule\n\n\n\n\n\nStatutReservationModule\n\nStatutReservationModule\n\nAppModule -->\n\nStatutReservationModule->AppModule\n\n\n\n\n\nTarifModule\n\nTarifModule\n\nAppModule -->\n\nTarifModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nAppModule -->\n\nValidationModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDeviseService\n\nDeviseService\n\nAppModule -->\n\nDeviseService->AppModule\n\n\n\n\n\nDisponibiliteService\n\nDisponibiliteService\n\nAppModule -->\n\nDisponibiliteService->AppModule\n\n\n\n\n\nPaiementNabooService\n\nPaiementNabooService\n\nAppModule -->\n\nPaiementNabooService->AppModule\n\n\n\n\n\nPaiementService\n\nPaiementService\n\nAppModule -->\n\nPaiementService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nAppModule -->\n\nServiceService->AppModule\n\n\n\n\n\nStatutReservationService\n\nStatutReservationService\n\nAppModule -->\n\nStatutReservationService->AppModule\n\n\n\n\n\nTarifService\n\nTarifService\n\nAppModule -->\n\nTarifService->AppModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nAppModule -->\n\nUploadService->AppModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nAppModule -->\n\nValidationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            DeviseService\n                        \n                        \n                            DisponibiliteService\n                        \n                        \n                            PaiementNabooService\n                        \n                        \n                            PaiementService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ServiceService\n                        \n                        \n                            StatutReservationService\n                        \n                        \n                            TarifService\n                        \n                        \n                            UploadService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            DisponibiliteController\n                        \n                        \n                            DeviseController\n                        \n                        \n                            TarifController\n                        \n                        \n                            StatutReservationController\n                        \n                        \n                            PaiementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            DisponibiliteModule\n                        \n                        \n                            LogModule\n                        \n                        \n                            MedecinSousserviceModule\n                        \n                        \n                            ModePaiementModule\n                        \n                        \n                            PaiementModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            PrivilegeModule\n                        \n                        \n                            ServiceModule\n                        \n                        \n                            SousServiceModule\n                        \n                        \n                            StatutReservationModule\n                        \n                        \n                            TarifModule\n                        \n                        \n                            UploadModule\n                        \n                        \n                            UtilisateurModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { PrivilegeModule } from './privilege/privilege.module';\nimport { ValidationService } from './validation/validation.service';\nimport { ValidationModule } from './validation/validation.module';\nimport { UtilisateurModule } from './utilisateur/utilisateur.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { LogModule } from './log/log.module';\nimport { LogListener } from './log-listener/log-listener';\nimport { UploadModule } from './upload/upload.module';\nimport { ServiceService } from './service/service.service';\n\nimport { ServiceModule } from './service/service.module';\nimport { SousServiceModule } from './sous-service/sous-service.module';\nimport { UploadService } from './upload/upload.service';\nimport { MedecinSousserviceModule } from './medecin-sousservice/medecin-sousservice.module';\nimport { DisponibiliteService } from './disponibilite/disponibilite.service';\nimport { DisponibiliteController } from './disponibilite/disponibilite.controller';\nimport { DisponibiliteModule } from './disponibilite/disponibilite.module';\nimport { DeviseService } from './devise/devise.service';\nimport { DeviseController } from './devise/devise.controller';\nimport { TarifController } from './tarif/tarif.controller';\nimport { TarifService } from './tarif/tarif.service';\nimport { TarifModule } from './tarif/tarif.module';\nimport { StatutReservationService } from './statut-reservation/statut-reservation.service';\nimport { StatutReservationController } from './statut-reservation/statut-reservation.controller';\nimport { StatutReservationModule } from './statut-reservation/statut-reservation.module';\nimport { ModePaiementModule } from './mode-paiement/mode-paiement.module';\nimport { PaiementService } from './paiement/paiement.service';\nimport { PaiementController } from './paiement/paiement.controller';\nimport { PaiementModule } from './paiement/paiement.module';\nimport { ReservationModule } from './reservation/reservation.module';\nimport { PaiementNabooService } from './paiement/paiement-naboo/paiement-naboo.service';\n\n\n\n@Module({\n  imports: [\n    EventEmitterModule.forRoot(),\n    ConfigModule.forRoot({ isGlobal: true }),\n    PrismaModule, PrivilegeModule, ValidationModule, UtilisateurModule, AuthModule, LogModule, UploadModule, ServiceModule, SousServiceModule, MedecinSousserviceModule, DisponibiliteModule, TarifModule, StatutReservationModule, ModePaiementModule, PaiementModule],\n  controllers: [AppController, DisponibiliteController, DeviseController, TarifController, StatutReservationController, PaiementController],\n  providers: [AppService, PrismaService, ValidationService, ServiceService,UploadService, DisponibiliteService, DeviseService, TarifService, StatutReservationService, PaiementService, PaiementNabooService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AsyncContextInterceptor.html":{"url":"injectables/AsyncContextInterceptor.html","title":"injectable - AsyncContextInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AsyncContextInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/async-context/async-context.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/async-context/async-context.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { asyncLocalStorage } from '../prisma/prisma.middleware';\n\n@Injectable()\nexport class AsyncContextInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    const store = {\n      userId: request.user?.id, // Jamais zéro. Ne crée rien sinon.\n      ip: request.ip,\n    };\n\n    if (!store.userId) {\n      return next.handle(); // Pas d'utilisateur, on ne stocke rien\n    }\n\n    return asyncLocalStorage.run(store, () => next.handle());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AsyncContextMiddleware.html":{"url":"injectables/AsyncContextMiddleware.html","title":"injectable - AsyncContextMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AsyncContextMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/async-context/async-context.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/middleware/async-context/async-context.middleware.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { asyncLocalStorage } from '../../../prisma/prisma.middleware';\n\n@Injectable()\nexport class AsyncContextMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    // req.user est disponible si l'authentification (ex. JwtAuthGuard) est déjà appliquée\n    const context = {\n      userId: req.user?.id || 0, // 0 (ou une autre valeur) si non authentifié\n      ip: req.ip,\n    };\n\n    // @ts-ignore\n    asyncLocalStorage.run(context, () => {\n      next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                changePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(req, changePasswordDto: ChangePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-password')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Changer le mot de passe de l'utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(connectUtilisateurDto: ConnectUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@ApiOperation({summary: 'Authentifier un utilisateur et générer un token JWT'})@ApiResponse({status: 200, description: 'Connexion réussie'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                connectUtilisateurDto\n                                            \n                                                            ConnectUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(authHeader: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Déconnexion sécurisée avec blacklist du token'})@ApiResponse({status: 200, description: 'Déconnexion réussie'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authHeader\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(resetPasswordDto: ResetPasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@ApiOperation({summary: 'Réinitialiser le mot de passe'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resetPasswordDto\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, UseGuards, Request, Headers } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { ConnectUtilisateurDto } from './dto/connect-utilisateur.dto';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { JwtAuthGuard } from './jwt-auth/jwt-auth.guard';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\n\n@ApiTags('Authentification')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('login')\n  @ApiOperation({ summary: \"Authentifier un utilisateur et générer un token JWT\" })\n  @ApiResponse({ status: 200, description: 'Connexion réussie' })\n  async login(@Body() connectUtilisateurDto: ConnectUtilisateurDto) {\n    return this.authService.login(connectUtilisateurDto.email, connectUtilisateurDto.password);\n  }\n\n  @Post('logout')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Déconnexion sécurisée avec blacklist du token\" })\n  @ApiResponse({ status: 200, description: 'Déconnexion réussie' })\n  async logout(@Headers('authorization') authHeader: string) {\n    const token = authHeader?.split(' ')[1]; // Récupère le token depuis \"Bearer \"\n    return this.authService.logout(token);\n  }\n\n  @Post('reset-password')\n  @ApiOperation({ summary: \"Réinitialiser le mot de passe\" })\n  async resetPassword(@Body() resetPasswordDto: ResetPasswordDto) {\n    return this.authService.resetPassword(resetPasswordDto);\n  }\n\n  @Post('change-password')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Changer le mot de passe de l'utilisateur\" })\n  async changePassword(@Request() req, @Body() changePasswordDto: ChangePasswordDto) {\n    return this.authService.changePassword(req.user.id, changePasswordDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBlacklistService\n\nBlacklistService\n\nAuthModule -->\n\nBlacklistService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nAuthModule -->\n\nResponseService->AuthModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nAuthModule -->\n\nUtilisateurService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            BlacklistService\n                        \n                        \n                            JwtAuthGuard\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            UtilisateurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UtilisateurService } from '../utilisateur/utilisateur.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtAuthGuard } from './jwt-auth/jwt-auth.guard';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { BlacklistService } from './blacklist/blacklist.service';\n\n@Module({\n  imports: [\n    ConfigModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: configService.get('JWT_EXPIRES_IN') || '1h' },\n      }),\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    UtilisateurService,\n    PrismaService,\n    JwtStrategy,\n    JwtAuthGuard,\n    ResponseService,\n    BlacklistService,\n  ],\n  exports: [AuthService, JwtModule], // ✅ Exporter JwtModule pour que d'autres modules puissent l'utiliser\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Private\n                                    Async\n                                validateUtilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(utilisateurService: UtilisateurService, jwtService: JwtService, responseService: ResponseService, configService: ConfigService, blacklistService: BlacklistService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        utilisateurService\n                                                  \n                                                        \n                                                                        UtilisateurService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blacklistService\n                                                  \n                                                        \n                                                                        BlacklistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(utilisateurId: number, changePasswordDto: ChangePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                utilisateurId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changePasswordDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(resetPasswordDto: ResetPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                resetPasswordDto\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateUtilisateur\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUtilisateur(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UtilisateurService } from '../utilisateur/utilisateur.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { ConfigService } from '@nestjs/config';\nimport { ResetPasswordDto } from './dto/reset-password.dto';\nimport { ChangePasswordDto } from './dto/change-password.dto';\nimport { BlacklistService } from './blacklist/blacklist.service';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private utilisateurService: UtilisateurService,\n    private jwtService: JwtService,\n    private responseService: ResponseService,\n    private configService: ConfigService,\n    private blacklistService: BlacklistService,\n  ) {}\n\n  async login(email: string, password: string) {\n    const utilisateur = await this.validateUtilisateur(email, password);\n    const payload = {\n      sub: utilisateur.id,\n      email: utilisateur.email,\n      privilege: utilisateur.idPrivilege,\n    };\n    const accessToken = this.jwtService.sign(payload);\n    return this.responseService.success(\n      { access_token: accessToken },\n      'Connexion réussie'\n    );\n  }\n\n  private async validateUtilisateur(email: string, password: string) {\n    const utilisateur = await this.utilisateurService.findByEmail(email);\n    if (!utilisateur) {\n      throw new UnauthorizedException('Utilisateur non trouvé');\n    }\n    const isPasswordValid = await bcrypt.compare(password, utilisateur.password);\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Mot de passe incorrect');\n    }\n    return utilisateur;\n  }\n\n  async logout(token: string) {\n    const secret = this.configService.get('JWT_SECRET');\n\n    if (!secret) {\n      throw new Error('Clé JWT manquante dans la configuration');\n    }\n\n    try {\n      const decoded: any = jwt.verify(token, secret);\n      const expiresAt = new Date(decoded.exp * 1000);\n      await this.blacklistService.blacklistToken(token, expiresAt);\n\n      return this.responseService.success(null, 'Déconnexion réussie');\n    } catch (err) {\n      return this.responseService.unauthorized\n        ? this.responseService.unauthorized('Token invalide ou expiré.')\n        : new UnauthorizedException('Token invalide ou expiré.');\n    }\n  }\n\n  async resetPassword(resetPasswordDto: ResetPasswordDto) {\n    return this.responseService.success(null, 'Un email de réinitialisation a été envoyé');\n  }\n\n  async changePassword(utilisateurId: number, changePasswordDto: ChangePasswordDto) {\n    return this.responseService.success(null, 'Mot de passe changé avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlacklistService.html":{"url":"injectables/BlacklistService.html","title":"injectable - BlacklistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlacklistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/blacklist/blacklist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                blacklistToken\n                            \n                            \n                                    Async\n                                isTokenBlacklisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/blacklist/blacklist.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        blacklistToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    blacklistToken(token: string, expiresAt: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/blacklist/blacklist.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                expiresAt\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        isTokenBlacklisted\n                        \n                    \n                \n            \n            \n                \n                        \n                    isTokenBlacklisted(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/blacklist/blacklist.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {PrismaService} from '../../prisma/prisma.service';\n\n@Injectable()\nexport class BlacklistService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async blacklistToken(token: string, expiresAt: Date) {\n    return this.prisma.blacklistedToken.create({\n      data: {\n        token,\n        expiresAt,\n      },\n    });\n  }\n\n  async isTokenBlacklisted(token: string): Promise {\n    const result = await this.prisma.blacklistedToken.findUnique({\n      where: { token },\n    });\n    return !!result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                oldPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'nouveauMotDePasse456'})@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ancienMotDePasse123'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, MinLength } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @ApiProperty({ example: 'ancienMotDePasse123' })\n  @IsNotEmpty()\n  oldPassword: string;\n\n  @ApiProperty({ example: 'nouveauMotDePasse456' })\n  @IsNotEmpty()\n  @MinLength(6)\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePrivilegeDto.html":{"url":"classes/ChangePrivilegeDto.html","title":"class - ChangePrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/change-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                idPrivilege\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 2, description: 'Nouvel ID du privilège'})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/change-privilege.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber } from 'class-validator';\n\nexport class ChangePrivilegeDto {\n  @ApiProperty({ example: 2, description: 'Nouvel ID du privilège' })\n  @IsNotEmpty()\n  @IsNumber()\n  idPrivilege: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CloudinaryService.html":{"url":"injectables/CloudinaryService.html","title":"injectable - CloudinaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CloudinaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/cloudinary/cloudinary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                uploadMultiple\n                            \n                            \n                                    Async\n                                uploadSingle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/upload/cloudinary/cloudinary.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/cloudinary/cloudinary.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadMultiple\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadMultiple(files: Express.Multer.File[], folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/cloudinary/cloudinary.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSingle(file: Express.Multer.File, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/cloudinary/cloudinary.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CloudinaryService.name)\n                    \n                \n                    \n                        \n                                Defined in src/upload/cloudinary/cloudinary.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { v2 as cloudinary } from 'cloudinary';\nimport {\n  FileStorageService,\n  FileUploadResult,\n} from '../interfaces/upload.interface';\n\n@Injectable()\nexport class CloudinaryService implements FileStorageService {\n  private logger = new Logger(CloudinaryService.name);\n\n  constructor() {\n    cloudinary.config({\n      cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n      api_key: process.env.CLOUDINARY_API_KEY,\n      api_secret: process.env.CLOUDINARY_API_SECRET,\n    });\n  }\n\n  async uploadSingle(\n    file: Express.Multer.File,\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      const uploadStream = cloudinary.uploader.upload_stream(\n        { folder },\n        (error, result) => {\n          if (error) {\n            this.logger.error(\n              `Erreur lors de l'upload: ${JSON.stringify(error)}`,\n            );\n            return reject(error);\n          }\n          if (!result) {\n            return reject(new Error(\"Résultat d'upload vide\"));\n          }\n          this.logger.log(`Image uploadée avec succès: ${result.public_id}`);\n          resolve({\n            url: result.secure_url,\n            id: result.public_id,\n          });\n        },\n      );\n\n      uploadStream.end(file.buffer);\n    });\n  }\n\n  async uploadMultiple(\n    files: Express.Multer.File[],\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    if (!files?.length) return [];\n\n    files.forEach((file, index) => {\n      if (!file.buffer?.length) {\n        throw new Error(\n          `Le fichier à l'index ${index} n'a pas de contenu valide`,\n        );\n      }\n    });\n\n    try {\n      return await Promise.all(\n        files.map((file) => this.uploadSingle(file, folder)),\n      );\n    } catch (error) {\n      this.logger.error(`Échec de l'upload batch: ${error.message}`);\n      throw new Error(`Échec de l'upload des images: ${error.message}`);\n    }\n  }\n  async deleteFile(fileId: string): Promise {\n    try {\n      await cloudinary.uploader.destroy(fileId);\n      this.logger.log(`🗑️ Image supprimée de Cloudinary : ${fileId}`);\n    } catch (error) {\n      this.logger.warn(`⚠️ Erreur suppression Cloudinary : ${fileId}`);\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDeviseDto.html":{"url":"classes/ConnectDeviseDto.html","title":"class - ConnectDeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                code\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-devise.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-devise.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectDeviseDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\ncode?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDisponibiliteDto.html":{"url":"classes/ConnectDisponibiliteDto.html","title":"class - ConnectDisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-disponibilite.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectDisponibiliteDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectDossierMedicalDto.html":{"url":"classes/ConnectDossierMedicalDto.html","title":"class - ConnectDossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectDossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-dossierMedical.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectDossierMedicalDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectLogDto.html":{"url":"classes/ConnectLogDto.html","title":"class - ConnectLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-log.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectLogDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectMedecinSousServiceDto.html":{"url":"classes/ConnectMedecinSousServiceDto.html","title":"class - ConnectMedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-medecinSousService.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectMedecinSousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectModePaiementDto.html":{"url":"classes/ConnectModePaiementDto.html","title":"class - ConnectModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-modePaiement.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-modePaiement.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectModePaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectOrdonnanceDto.html":{"url":"classes/ConnectOrdonnanceDto.html","title":"class - ConnectOrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectOrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-ordonnance.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectOrdonnanceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectPaiementDto.html":{"url":"classes/ConnectPaiementDto.html","title":"class - ConnectPaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectPaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                idReservation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-paiement.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        idReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-paiement.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectPaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nidReservation?: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectPrivilegeDto.html":{"url":"classes/ConnectPrivilegeDto.html","title":"class - ConnectPrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectPrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-privilege.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-privilege.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectPrivilegeDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectReservationDto.html":{"url":"classes/ConnectReservationDto.html","title":"class - ConnectReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-reservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectServiceDto.html":{"url":"classes/ConnectServiceDto.html","title":"class - ConnectServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-service.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectSousServiceDto.html":{"url":"classes/ConnectSousServiceDto.html","title":"class - ConnectSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-sousService.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectSousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectStatutReservationDto.html":{"url":"classes/ConnectStatutReservationDto.html","title":"class - ConnectStatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-statutReservation.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-statutReservation.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectStatutReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectTarifDto.html":{"url":"classes/ConnectTarifDto.html","title":"class - ConnectTarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-tarif.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectTarifDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUtilisateurDto.html":{"url":"classes/ConnectUtilisateurDto.html","title":"class - ConnectUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/connect-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'babaissandiaye242@gmail.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/connect-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password123'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/connect-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class ConnectUtilisateurDto {\n  @ApiProperty({ example: 'babaissandiaye242@gmail.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: 'password123' })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConnectUtilisateurDto-1.html":{"url":"classes/ConnectUtilisateurDto-1.html","title":"class - ConnectUtilisateurDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/connect-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/connect-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class ConnectUtilisateurDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n  required: false,\n})\nid?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nemail?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\ntelephone?: string ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviseDto.html":{"url":"classes/CreateDeviseDto.html","title":"class - CreateDeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/dto/create-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actif\n                            \n                            \n                                    \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    \n                                symbole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Length(2, 5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/devise/dto/create-devise.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsOptional, IsString, Length } from 'class-validator';\n\nexport class CreateDeviseDto {\n  @IsString()\n  @IsNotEmpty()\n  @Length(2, 5) // Ex: \"USD\", \"EUR\"\n  code: string;\n\n  @IsString()\n  @IsNotEmpty()\n  libelle: string;\n\n  @IsString()\n  @IsNotEmpty()\n  symbole: string;\n\n  @IsBoolean()\n  @IsOptional()\n  actif: boolean = true; // Valeur par défaut pour éviter undefined\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeviseDto-1.html":{"url":"classes/CreateDeviseDto-1.html","title":"class - CreateDeviseDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                symbole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-devise.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateDeviseDto {\n  @ApiProperty({\n  type: 'string',\n})\ncode: string ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n})\nsymbole: string ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDisponibiliteDto.html":{"url":"classes/CreateDisponibiliteDto.html","title":"class - CreateDisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/dto/create-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                    \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                    \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                jourSemaine\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pauseDebut\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pauseFin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '09:00', description: 'Heure de début'})@IsNotEmpty()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '16:00', description: 'Heure de fin'})@IsNotEmpty()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'ID du médecin ou secrétaire'})@IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'lundi', description: 'Jour de disponibilité'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pauseDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12:00', description: 'Début de la pause', required: false})@IsOptional()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pauseFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12:30', description: 'Fin de la pause', required: false})@IsOptional()@Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, {message: 'Format invalide (HH:mm)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/disponibilite/dto/create-disponibilite.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsOptional, IsInt, Matches } from 'class-validator';\n\nexport class CreateDisponibiliteDto {\n  @ApiProperty({ example: 1, description: 'ID du médecin ou secrétaire' })\n  @IsNotEmpty()\n  @IsInt()\n  idMedecinSousService: number;\n\n  @ApiProperty({ example: 'lundi', description: 'Jour de disponibilité' })\n  @IsNotEmpty()\n  @IsString()\n  jourSemaine: string;\n\n  @ApiProperty({ example: '09:00', description: 'Heure de début' })\n  @IsNotEmpty()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  heureDebut: string;\n\n  @ApiProperty({ example: '16:00', description: 'Heure de fin' })\n  @IsNotEmpty()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  heureFin: string;\n\n  @ApiProperty({ example: '12:00', description: 'Début de la pause', required: false })\n  @IsOptional()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  pauseDebut?: string;\n\n  @ApiProperty({ example: '12:30', description: 'Fin de la pause', required: false })\n  @IsOptional()\n  @Matches(/^([01]\\d|2[0-3]):([0-5]\\d)$/, { message: 'Format invalide (HH:mm)' })\n  pauseFin?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDisponibiliteDto-1.html":{"url":"classes/CreateDisponibiliteDto-1.html","title":"class - CreateDisponibiliteDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                jourSemaine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-disponibilite.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateDisponibiliteDto {\n  @ApiProperty({\n  type: 'string',\n})\njourSemaine: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureDebut: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureFin: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDossierMedicalDto.html":{"url":"classes/CreateDossierMedicalDto.html","title":"class - CreateDossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dateMiseAJour\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                fichiers\n                            \n                            \n                                    \n                                historique\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-dossierMedical.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateDossierMedicalDto {\n  @ApiProperty({\n  type: 'string',\n})\nhistorique: string ;\n@ApiProperty({\n  type: 'string',\n})\nfichiers: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateMiseAJour: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLogDto.html":{"url":"classes/CreateLogDto.html","title":"class - CreateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-log.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-log.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-log.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateLogDto {\n  @ApiProperty({\n  type: 'string',\n})\naction: string ;\n@ApiProperty({\n  type: 'string',\n})\nip: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMedecinSousServiceDto.html":{"url":"classes/CreateMedecinSousServiceDto.html","title":"class - CreateMedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-medecinSousService.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateMedecinSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMedecinSousServiceDto-1.html":{"url":"classes/CreateMedecinSousServiceDto-1.html","title":"class - CreateMedecinSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/dto/create-medecin-sous-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idMedecin\n                            \n                            \n                                    \n                                    \n                                idSousService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/create-medecin-sous-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/create-medecin-sous-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class CreateMedecinSousServiceDto {\n  @IsInt()\n  @IsNotEmpty()\n  idMedecin: number;\n\n  @IsInt()\n  @IsNotEmpty()\n  idSousService: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateModePaiementDto.html":{"url":"classes/CreateModePaiementDto.html","title":"class - CreateModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-modePaiement.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-modePaiement.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-modePaiement.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateModePaiementDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nicon?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateModePaiementDto-1.html":{"url":"classes/CreateModePaiementDto-1.html","title":"class - CreateModePaiementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/dto/create-mode-paiement.dto..ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/create-mode-paiement.dto..ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du mode de paiement', example: 'Orange Money'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/create-mode-paiement.dto..ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateModePaiementDto {\n  @ApiProperty({ description: \"Libellé du mode de paiement\", example: \"Orange Money\" })\n  @IsNotEmpty()\n  @IsString()\n  libelle: string;\n\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  icon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrdonnanceDto.html":{"url":"classes/CreateOrdonnanceDto.html","title":"class - CreateOrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contenu\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-ordonnance.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-ordonnance.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateOrdonnanceDto {\n  @ApiProperty({\n  type: 'string',\n})\ncontenu: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaiementDto.html":{"url":"classes/CreatePaiementDto.html","title":"class - CreatePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                etatTransaction\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                referenceTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-paiement.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreatePaiementDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'string',\n})\nreferenceTransaction: string ;\n@ApiProperty({\n  type: 'string',\n})\netatTransaction: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaiementDto-1.html":{"url":"classes/CreatePaiementDto-1.html","title":"class - CreatePaiementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/dto/create-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                etatTransaction\n                            \n                            \n                                    \n                                idModePaiement\n                            \n                            \n                                    \n                                idReservation\n                            \n                            \n                                    \n                                    \n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paiement/dto/create-paiement.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idModePaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paiement/dto/create-paiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paiement/dto/create-paiement.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paiement/dto/create-paiement.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsPositive, IsOptional, IsString } from 'class-validator';\n\nexport class CreatePaiementDto {\n  @IsNumber()\n  idReservation: number;\n\n  @IsNumber()\n  @IsPositive()\n  montant: number;\n\n  @IsNumber()\n  idModePaiement: number;\n\n  @IsOptional()\n  @IsString()\n  etatTransaction?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaiementNabooDto.html":{"url":"classes/CreatePaiementNabooDto.html","title":"class - CreatePaiementNabooDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaiementNabooDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/dto/create-paiement-naboo.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                idModePaiement\n                            \n                            \n                                    \n                                    \n                                idReservation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idModePaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du mode de paiement'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paiement/dto/create-paiement-naboo.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID de la réservation'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/paiement/dto/create-paiement-naboo.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePaiementNabooDto {\n  @ApiProperty({ description: 'ID de la réservation' })\n  @IsInt()\n  idReservation: number;\n\n  @ApiProperty({ description: 'ID du mode de paiement' })\n  @IsInt()\n  idModePaiement: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePrivilegeDto.html":{"url":"classes/CreatePrivilegeDto.html","title":"class - CreatePrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-privilege.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-privilege.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreatePrivilegeDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePrivilegeDto-1.html":{"url":"classes/CreatePrivilegeDto-1.html","title":"class - CreatePrivilegeDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/dto/create-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du privilège', example: 'ADMIN'})@IsNotEmpty({message: 'Le libellé ne peut pas être vide'})@IsString({message: 'Le libellé doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/privilege/dto/create-privilege.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePrivilegeDto {\n  @ApiProperty({ description: 'Libellé du privilège', example: 'ADMIN' })\n  @IsNotEmpty({ message: 'Le libellé ne peut pas être vide' })\n  @IsString({ message: 'Le libellé doit être une chaîne de caractères' })\n  libelle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReservationDto.html":{"url":"classes/CreateReservationDto.html","title":"class - CreateReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                etatPaiement\n                            \n                            \n                                    \n                                typeConsultation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-reservation.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-reservation.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-reservation.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateReservationDto {\n  @ApiProperty({\n  type: 'string',\n})\ntypeConsultation: string ;\n@ApiProperty({\n  type: 'string',\n})\netatPaiement: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReservationDto-1.html":{"url":"classes/CreateReservationDto-1.html","title":"class - CreateReservationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservation/dto/create-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                    \n                                idStatutReservation\n                            \n                            \n                                    \n                                    \n                                typeConsultation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Date de la réservation (ISO format)'})@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/create-reservation.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Heure de début (HH:mm)'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/create-reservation.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Heure de fin (HH:mm)'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/create-reservation.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du médecin/sous-service'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/create-reservation.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idStatutReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du statut de la réservation'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/create-reservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"physique\" | \"video\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type de consultation', enum: undefined})@IsEnum(['physique', 'video'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/create-reservation.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString, IsDateString, IsEnum } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateReservationDto {\n  @ApiProperty({ description: 'ID du médecin/sous-service' })\n  @IsInt()\n  idMedecinSousService: number;\n\n  @ApiProperty({ description: 'ID du statut de la réservation' })\n  @IsInt()\n  idStatutReservation: number;\n\n  @ApiProperty({ description: 'Type de consultation', enum: ['physique', 'video'] })\n  @IsEnum(['physique', 'video'])\n  typeConsultation: 'physique' | 'video';\n\n  @ApiProperty({ description: 'Date de la réservation (ISO format)' })\n  @IsDateString()\n  date: string;\n\n  @ApiProperty({ description: 'Heure de début (HH:mm)' })\n  @IsString()\n  heureDebut: string;\n\n  @ApiProperty({ description: 'Heure de fin (HH:mm)' })\n  @IsString()\n  heureFin: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto.html":{"url":"classes/CreateServiceDto.html","title":"class - CreateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-service.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-service.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateServiceDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateServiceDto-1.html":{"url":"classes/CreateServiceDto-1.html","title":"class - CreateServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/create-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/create-service.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du service', example: 'Radiologie'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/create-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateServiceDto {\n  @ApiProperty({ description: \"Libellé du service\", example: \"Radiologie\" })\n  @IsNotEmpty()\n  libelle: string;\n\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?:string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSousServiceDto.html":{"url":"classes/CreateSousServiceDto.html","title":"class - CreateSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-sousService.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-sousService.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSousServiceDto-1.html":{"url":"classes/CreateSousServiceDto-1.html","title":"class - CreateSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/dto/create-sous-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                idService\n                            \n                            \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL de l'icône du sous-service', example: 'https://exemple.com/icon.png', required: false})@ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/create-sous-service.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du service parent', example: 1})@IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/create-sous-service.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du sous-service', example: 'Échographie'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/create-sous-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString, IsInt } from 'class-validator';\n\nexport class CreateSousServiceDto {\n  @ApiProperty({ description: \"Libellé du sous-service\", example: \"Échographie\" })\n  @IsNotEmpty()\n  libelle: string;\n\n  @ApiProperty({ description: \"ID du service parent\", example: 1 })\n  @IsNotEmpty()\n  @IsInt()\n  idService: number;\n\n  @ApiProperty({ description: \"URL de l'icône du sous-service\", example: \"https://exemple.com/icon.png\", required: false })\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStatutReservationDto.html":{"url":"classes/CreateStatutReservationDto.html","title":"class - CreateStatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-statutReservation.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-statutReservation.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateStatutReservationDto {\n  @ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStatutReservationDto-1.html":{"url":"classes/CreateStatutReservationDto-1.html","title":"class - CreateStatutReservationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/dto/create-statut-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du statut', example: 'Confirmée'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statut-reservation/dto/create-statut-reservation.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateStatutReservationDto {\n  @ApiProperty({ description: 'Libellé du statut', example: 'Confirmée' })\n  @IsNotEmpty()\n  @IsString()\n  libelle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTarifDto.html":{"url":"classes/CreateTarifDto.html","title":"class - CreateTarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-tarif.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-tarif.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-tarif.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateTarifDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTarifDto-1.html":{"url":"classes/CreateTarifDto-1.html","title":"class - CreateTarifDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/dto/create-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                actif\n                            \n                            \n                                    \n                                    \n                                idDevise\n                            \n                            \n                                    \n                                    \n                                idSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idDevise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tarif/dto/create-tarif.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNotEmpty, IsNumber, IsOptional, IsPositive } from 'class-validator';\n\nexport class CreateTarifDto {\n  @IsNumber()\n  @IsNotEmpty()\n  idSousService: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  idDevise: number;\n\n  @IsNumber()\n  @IsPositive()\n  @IsNotEmpty()\n  montant: number;\n\n  @IsBoolean()\n  @IsOptional()\n  actif: boolean = true; // Actif par défaut\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto.html":{"url":"classes/CreateUtilisateurDto.html","title":"class - CreateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    Optional\n                                profil\n                            \n                            \n                                    \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/create-utilisateur.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class CreateUtilisateurDto {\n  @ApiProperty({\n  type: 'string',\n})\nnom: string ;\n@ApiProperty({\n  type: 'string',\n})\nprenom: string ;\n@ApiProperty({\n  type: 'string',\n})\nemail: string ;\n@ApiProperty({\n  type: 'string',\n})\npassword: string ;\n@ApiProperty({\n  type: 'string',\n})\ntelephone: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nprofil?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto-1.html":{"url":"classes/CreateUtilisateurDto-1.html","title":"class - CreateUtilisateurDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                idPrivilege\n                            \n                            \n                                    \n                                    \n                                    \n                                nom\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                profilUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@example.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password123'})@IsNotEmpty()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        profilUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1234567890'})@IsNotEmpty()@Matches(/^\\+?\\d{9,15}$/, {message: 'Le numéro de téléphone doit commencer éventuellement par + et contenir entre 9 et 15 chiffres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/create-utilisateur.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength, Matches, IsOptional } from 'class-validator';\n\nexport class CreateUtilisateurDto {\n  @ApiProperty({ example: 'Doe' })\n  @IsNotEmpty()\n  @IsString()\n  nom: string;\n\n  @ApiProperty({ example: 'John' })\n  @IsNotEmpty()\n  @IsString()\n  prenom: string;\n\n  @ApiProperty({ example: 'john.doe@example.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: 'password123' })\n  @IsNotEmpty()\n  @MinLength(6)\n  password: string;\n\n  @ApiProperty({ example: '1234567890' })\n  @IsNotEmpty()\n  @Matches(/^\\+?\\d{9,15}$/, {\n    message: \"Le numéro de téléphone doit commencer éventuellement par + et contenir entre 9 et 15 chiffres\",\n  })\n// ✅ Vérification du format\n  telephone: string;\n\n  @ApiProperty({ example: 1 })\n  @IsNotEmpty()\n  idPrivilege: number;\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  profilUrl?:string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Devise.html":{"url":"classes/Devise.html","title":"class - Devise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Devise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/devise.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                symbole\n                            \n                            \n                                    \n                                    Optional\n                                tarifs\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tarifs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tarif[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tarif, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Tarif} from './tarif.entity'\n\n\nexport class Devise {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ncode: string ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n})\nsymbole: string ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: () => Tarif,\n  isArray: true,\n  required: false,\n})\ntarifs?: Tarif[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeviseController.html":{"url":"controllers/DeviseController.html","title":"controller - DeviseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeviseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/devise.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                devises\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                activate\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/activate')@ApiOperation({summary: 'Activer une devise et désactiver les autres'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:53\n                        \n                    \n\n\n            \n                \n                        ✅ Activer une devise et désactiver les autres\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDeviseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer une devise'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:17\n                        \n                    \n\n\n            \n                \n                        ✅ Créer une devise\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer une devise'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:62\n                        \n                    \n\n\n            \n                \n                        ✅ Supprimer une devise (soft delete)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer toutes les devises'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:26\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les devises\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer une devise par ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:35\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer une devise par ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateDeviseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour une devise'})\n                \n            \n\n                    \n                        \n                            Defined in src/devise/devise.controller.ts:44\n                        \n                    \n\n\n            \n                \n                        ✅ Mettre à jour une devise\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Body, Param } from '@nestjs/common';\nimport { DeviseService } from './devise.service';\nimport { CreateDeviseDto } from './dto/create-devise.dto';\nimport { UpdateDeviseDto } from './dto/update-devise.dto';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\n\n@ApiTags('Devises')\n@Controller('devises')\nexport class DeviseController {\n  constructor(private readonly deviseService: DeviseService) {}\n\n  /**\n   * ✅ Créer une devise\n   */\n  @Post()\n  @ApiOperation({ summary: 'Créer une devise' })\n  create(@Body() dto: CreateDeviseDto) {\n    return this.deviseService.create(dto);\n  }\n\n  /**\n   * ✅ Récupérer toutes les devises\n   */\n  @Get()\n  @ApiOperation({ summary: 'Récupérer toutes les devises' })\n  findAll() {\n    return this.deviseService.findAll();\n  }\n\n  /**\n   * ✅ Récupérer une devise par ID\n   */\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer une devise par ID' })\n  findById(@Param('id') id: string) {\n    return this.deviseService.findById(+id);\n  }\n\n  /**\n   * ✅ Mettre à jour une devise\n   */\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour une devise' })\n  update(@Param('id') id: string, @Body() dto: UpdateDeviseDto) {\n    return this.deviseService.update(+id, dto);\n  }\n\n  /**\n   * ✅ Activer une devise et désactiver les autres\n   */\n  @Patch(':id/activate')\n  @ApiOperation({ summary: 'Activer une devise et désactiver les autres' })\n  activate(@Param('id') id: string) {\n    return this.deviseService.activate(+id);\n  }\n\n  /**\n   * ✅ Supprimer une devise (soft delete)\n   */\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer une devise' })\n  delete(@Param('id') id: string) {\n    return this.deviseService.delete(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviseDto.html":{"url":"classes/DeviseDto.html","title":"class - DeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                symbole\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/devise.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class DeviseDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ncode: string ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n})\nsymbole: string ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviseService.html":{"url":"injectables/DeviseService.html","title":"injectable - DeviseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeviseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/devise.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/devise/devise.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:87\n                        \n                    \n\n\n            \n                \n                        ✅ Activer une devise et désactiver toutes les autres\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDeviseDto: CreateDeviseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:17\n                        \n                    \n\n\n            \n                \n                        ✅ Créer une devise et désactiver les autres si elle est active\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeviseDto\n                                            \n                                                            CreateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:110\n                        \n                    \n\n\n            \n                \n                        ✅ Supprimer une devise (soft delete)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:52\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les devises actives\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:60\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer une devise par ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateDeviseDto: UpdateDeviseDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/devise/devise.service.ts:73\n                        \n                    \n\n\n            \n                \n                        ✅ Mettre à jour une devise (sans activer)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeviseDto\n                                            \n                                                            UpdateDeviseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateDeviseDto } from './dto/create-devise.dto';\nimport { UpdateDeviseDto } from './dto/update-devise.dto';\n\n@Injectable()\nexport class DeviseService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  /**\n   * ✅ Créer une devise et désactiver les autres si elle est active\n   */\n  async create(createDeviseDto: CreateDeviseDto) {\n    const existingDevise = await this.prisma.devise.findUnique({\n      where: { code: createDeviseDto.code },\n    });\n\n    if (existingDevise) {\n      throw new BadRequestException('Une devise avec ce code existe déjà.');\n    }\n\n    return await this.prisma.$transaction(async (prisma) => {\n      // Si la nouvelle devise est active, désactiver les autres\n      if (createDeviseDto.actif) {\n        await prisma.devise.updateMany({\n          where: { actif: true },\n          data: { actif: false },\n        });\n      }\n\n      // Créer la nouvelle devise\n      const devise = await prisma.devise.create({\n        data: {\n          code: createDeviseDto.code,\n          libelle: createDeviseDto.libelle,\n          symbole: createDeviseDto.symbole,\n          actif: createDeviseDto.actif ?? true, // Actif par défaut\n        },\n      });\n\n      return this.responseService.created(devise, 'Devise créée avec succès et activée.');\n    });\n  }\n\n  /**\n   * ✅ Récupérer toutes les devises actives\n   */\n  async findAll() {\n    const devises = await this.prisma.devise.findMany();\n    return this.responseService.success(devises, 'Toutes les devises récupérées');\n  }\n\n  /**\n   * ✅ Récupérer une devise par ID\n   */\n  async findById(id: number) {\n    const devise = await this.prisma.devise.findUnique({ where: { id } });\n\n    if (!devise) {\n      throw new NotFoundException(this.responseService.notFound(`Devise #${id} non trouvée.`));\n    }\n\n    return this.responseService.success(devise, 'Devise récupérée');\n  }\n\n  /**\n   * ✅ Mettre à jour une devise (sans activer)\n   */\n  async update(id: number, updateDeviseDto: UpdateDeviseDto) {\n    await this.findById(id);\n\n    const updatedDevise = await this.prisma.devise.update({\n      where: { id },\n      data: updateDeviseDto,\n    });\n\n    return this.responseService.success(updatedDevise, 'Devise mise à jour avec succès');\n  }\n\n  /**\n   * ✅ Activer une devise et désactiver toutes les autres\n   */\n  async activate(id: number) {\n    const devise = await this.findById(id);\n\n    return await this.prisma.$transaction(async (prisma) => {\n      // Désactiver toutes les autres devises\n      await prisma.devise.updateMany({\n        where: { actif: true },\n        data: { actif: false },\n      });\n\n      // Activer la nouvelle devise\n      const activatedDevise = await prisma.devise.update({\n        where: { id },\n        data: { actif: true },\n      });\n\n      return this.responseService.success(activatedDevise, 'Devise activée avec succès.');\n    });\n  }\n\n  /**\n   * ✅ Supprimer une devise (soft delete)\n   */\n  async delete(id: number) {\n    await this.findById(id);\n\n    await this.prisma.devise.update({\n      where: { id },\n      data: { actif: false, deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Devise supprimée avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Disponibilite.html":{"url":"classes/Disponibilite.html","title":"class - Disponibilite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Disponibilite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/disponibilite.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                jourSemaine\n                            \n                            \n                                    \n                                    Optional\n                                medecinSousService\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MedecinSousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.entity.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {MedecinSousService} from './medecinSousService.entity'\n\n\nexport class Disponibilite {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecinSousService: number ;\n@ApiProperty({\n  type: 'string',\n})\njourSemaine: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureDebut: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureFin: string ;\n@ApiProperty({\n  type: () => MedecinSousService,\n  required: false,\n})\nmedecinSousService?: MedecinSousService ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DisponibiliteController.html":{"url":"controllers/DisponibiliteController.html","title":"controller - DisponibiliteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DisponibiliteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/disponibilite.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                disponibilites\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                findByMedecin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateDisponibiliteDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Créer une disponibilité'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateDisponibiliteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer toutes les disponibilités'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer une disponibilité par ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findByMedecin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByMedecin(idMedecin: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('medecin/:idMedecin')@ApiOperation({summary: 'Récupérer toutes les disponibilités d'un médecin'})\n                \n            \n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idMedecin\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Body, Param, UseGuards, Request } from '@nestjs/common';\nimport { DisponibiliteService } from './disponibilite.service';\nimport { CreateDisponibiliteDto } from './dto/create-disponibilite.dto';\nimport { UpdateDisponibiliteDto } from './dto/update-disponibilite.dto';\nimport { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Disponibilités')\n@Controller('disponibilites')\nexport class DisponibiliteController {\n  constructor(private readonly disponibiliteService: DisponibiliteService) {}\n\n  @Post()\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Créer une disponibilité' })\n  create(@Body() dto: CreateDisponibiliteDto, @Request() req) {\n    return this.disponibiliteService.create(dto, req.user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Récupérer toutes les disponibilités' })\n  findAll() {\n    return this.disponibiliteService.findAll();\n  }\n\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer une disponibilité par ID' })\n  findById(@Param('id') id: string) {\n    return this.disponibiliteService.findDisponibilitesById(+id);\n  }\n  @Get('medecin/:idMedecin')\n  @ApiOperation({ summary: \"Récupérer toutes les disponibilités d'un médecin\" })\n  findByMedecin(@Param('idMedecin') idMedecin: string) {\n    return this.disponibiliteService.findDisponibilitesByMedecin(+idMedecin);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DisponibiliteDto.html":{"url":"classes/DisponibiliteDto.html","title":"class - DisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                heureDebut\n                            \n                            \n                                    \n                                heureFin\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                jourSemaine\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/disponibilite.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class DisponibiliteDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\njourSemaine: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureDebut: string ;\n@ApiProperty({\n  type: 'string',\n})\nheureFin: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DisponibiliteModule.html":{"url":"modules/DisponibiliteModule.html","title":"module - DisponibiliteModule","body":"\n                   \n\n\n\n\n    Modules\n    DisponibiliteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DisponibiliteModule\n\n\n\ncluster_DisponibiliteModule_providers\n\n\n\n\nDisponibiliteService\n\nDisponibiliteService\n\n\n\nDisponibiliteModule\n\nDisponibiliteModule\n\nDisponibiliteModule -->\n\nDisponibiliteService->DisponibiliteModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nDisponibiliteModule -->\n\nResponseService->DisponibiliteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/disponibilite/disponibilite.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DisponibiliteService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DisponibiliteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DisponibiliteService } from './disponibilite.service';\nimport { DisponibiliteController } from './disponibilite.controller';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Module({\n  controllers: [DisponibiliteController],\n  providers: [DisponibiliteService, ResponseService],\n})\nexport class DisponibiliteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DisponibiliteService.html":{"url":"injectables/DisponibiliteService.html","title":"injectable - DisponibiliteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DisponibiliteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/disponibilite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findDisponibilitesById\n                            \n                            \n                                    Async\n                                findDisponibilitesByMedecin\n                            \n                            \n                                    Private\n                                formatHeure\n                            \n                            \n                                    Private\n                                genererCreneauxDisponibles\n                            \n                            \n                                    Private\n                                getNumeroSemaine\n                            \n                            \n                                    Private\n                                parseTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/disponibilite/disponibilite.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDisponibiliteDto: CreateDisponibiliteDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:17\n                        \n                    \n\n\n            \n                \n                        ✅ Créer une disponibilité (Seulement Medecin/Admin)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDisponibiliteDto\n                                            \n                                                            CreateDisponibiliteDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:75\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les disponibilités actives\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDisponibilitesById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDisponibilitesById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:87\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer une disponibilité par ID (Avec créneaux disponibles)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findDisponibilitesByMedecin\n                        \n                    \n                \n            \n            \n                \n                        \n                    findDisponibilitesByMedecin(idMedecin: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:159\n                        \n                    \n\n\n            \n                \n                        ✅ Récupérer toutes les disponibilités d'un médecin spécifique\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idMedecin\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatHeure\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatHeure(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:153\n                        \n                    \n\n\n            \n                \n                        ✅ Formatter une heure en chaîne lisible\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        genererCreneauxDisponibles\n                        \n                    \n                \n            \n            \n                \n                        \n                    genererCreneauxDisponibles(disponibilite, reservationsSet: Set)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:111\n                        \n                    \n\n\n            \n                \n                        ✅ Générer les créneaux disponibles\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                disponibilite\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                reservationsSet\n                                            \n                                                        Set\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getNumeroSemaine\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNumeroSemaine()\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:133\n                        \n                    \n\n\n            \n                \n                        ✅ Calcul du numéro de la semaine actuelle\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseTime(time: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/disponibilite/disponibilite.service.ts:143\n                        \n                    \n\n\n            \n                \n                        ✅ Convertir une heure en Date\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                time\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Date\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, BadRequestException, ForbiddenException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateDisponibiliteDto } from './dto/create-disponibilite.dto';\nimport { UpdateDisponibiliteDto } from './dto/update-disponibilite.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Injectable()\nexport class DisponibiliteService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  /**\n   * ✅ Créer une disponibilité (Seulement Medecin/Admin)\n   */\n  async create(createDisponibiliteDto: CreateDisponibiliteDto, currentUser: any) {\n    if (!currentUser) {\n      throw new ForbiddenException(this.responseService.forbidden(\"Vous devez être connecté.\"));\n    }\n\n    // Vérification des rôles autorisés\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user || !['Medecin', 'Admin'].includes(user.privilege.libelle)) {\n      throw new ForbiddenException(this.responseService.forbidden(\"Seuls les médecins et administrateurs peuvent créer une disponibilité.\"));\n    }\n\n    // Validation des jours de la semaine\n    const joursValid = [\"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\", \"dimanche\"];\n    const jourSemaineNormalized = createDisponibiliteDto.jourSemaine.trim().toLowerCase();\n\n    if (!joursValid.includes(jourSemaineNormalized)) {\n      throw new BadRequestException(`Jour invalide. Choisissez parmi : ${joursValid.join(\", \")}.`);\n    }\n\n    // Vérifier si une disponibilité existe déjà pour ce médecin et ce jour\n    const existingDisponibilite = await this.prisma.disponibilite.findFirst({\n      where: {\n        idMedecinSousService: createDisponibiliteDto.idMedecinSousService,\n        jourSemaine: jourSemaineNormalized,\n        active: true,\n      },\n    });\n\n    if (existingDisponibilite) {\n      throw new BadRequestException(\n        \"Une disponibilité pour ce jour existe déjà. Modifiez-la au lieu d'en créer une nouvelle.\"\n      );\n    }\n\n    // Création de la disponibilité\n    const disponibilite = await this.prisma.disponibilite.create({\n      data: {\n        idMedecinSousService: createDisponibiliteDto.idMedecinSousService,\n        jourSemaine: jourSemaineNormalized,\n        heureDebut: createDisponibiliteDto.heureDebut,\n        heureFin: createDisponibiliteDto.heureFin,\n        pauseDebut: createDisponibiliteDto.pauseDebut,\n        pauseFin: createDisponibiliteDto.pauseFin,\n        active: true,\n        semaine: this.getNumeroSemaine(),\n      },\n    });\n\n    return this.responseService.created(disponibilite, 'Disponibilité créée avec succès');\n  }\n\n  /**\n   * ✅ Récupérer toutes les disponibilités actives\n   */\n  async findAll() {\n    const disponibilites = await this.prisma.disponibilite.findMany({\n      where: { active: true },\n      orderBy: { jourSemaine: 'asc' },\n    });\n\n    return this.responseService.success(disponibilites, 'Toutes les disponibilités récupérées');\n  }\n\n  /**\n   * ✅ Récupérer une disponibilité par ID (Avec créneaux disponibles)\n   */\n  async findDisponibilitesById(id: number) {\n    const disponibilite = await this.prisma.disponibilite.findUnique({ where: { id } });\n\n    if (!disponibilite) {\n      throw new NotFoundException(this.responseService.notFound(`Disponibilité #${id} non trouvée.`));\n    }\n\n    const reservations = await this.prisma.reservation.findMany({\n      where: { idMedecinSousService: disponibilite.idMedecinSousService },\n      select: { heureDebut: true, heureFin: true },\n    });\n\n    const reservationsSet = new Set(reservations.map(r => `${r.heureDebut}-${r.heureFin}`));\n    const horairesDisponibles = this.genererCreneauxDisponibles(disponibilite, reservationsSet);\n\n    return this.responseService.success(\n      { ...disponibilite, horairesDisponibles },\n      'Disponibilité récupérée avec créneaux disponibles'\n    );\n  }\n\n  /**\n   * ✅ Générer les créneaux disponibles\n   */\n  private genererCreneauxDisponibles(disponibilite, reservationsSet: Set) {\n    const horairesDisponibles: string[] = [];\n    let currentHeure = this.parseTime(disponibilite.heureDebut);\n    const fin = this.parseTime(disponibilite.heureFin);\n\n    while (currentHeure  mss.id),\n        },\n        active: true,\n      },\n      orderBy: { jourSemaine: 'asc' },\n    });\n\n    // ✅ Ajouter les horaires disponibles à chaque disponibilité\n    const withCreneaux = await Promise.all(disponibilites.map(async (dispo) => {\n      const reservations = await this.prisma.reservation.findMany({\n        where: { idMedecinSousService: dispo.idMedecinSousService },\n        select: { heureDebut: true, heureFin: true },\n      });\n\n      const reservationsSet = new Set(reservations.map(r => `${r.heureDebut}-${r.heureFin}`));\n      const horairesDisponibles = this.genererCreneauxDisponibles(dispo, reservationsSet);\n\n      return {\n        ...dispo,\n        horairesDisponibles,\n      };\n    }));\n\n    return this.responseService.success(\n      withCreneaux,\n      `Disponibilités du médecin #${idMedecin} récupérées`\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DossierMedical.html":{"url":"classes/DossierMedical.html","title":"class - DossierMedical","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DossierMedical\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/dossierMedical.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateMiseAJour\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                fichiers\n                            \n                            \n                                    \n                                historique\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idPatient\n                            \n                            \n                                    \n                                    Optional\n                                patient\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idPatient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.entity.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class DossierMedical {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidPatient: number ;\n@ApiProperty({\n  type: 'string',\n})\nhistorique: string ;\n@ApiProperty({\n  type: 'string',\n})\nfichiers: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateMiseAJour: Date ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\npatient?: Utilisateur ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DossierMedicalDto.html":{"url":"classes/DossierMedicalDto.html","title":"class - DossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateMiseAJour\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                fichiers\n                            \n                            \n                                    \n                                historique\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/dossierMedical.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class DossierMedicalDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nhistorique: string ;\n@ApiProperty({\n  type: 'string',\n})\nfichiers: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateMiseAJour: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionService.html":{"url":"injectables/ExceptionService.html","title":"injectable - ExceptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/exception/exception.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBadRequestException\n                            \n                            \n                                createForbiddenException\n                            \n                            \n                                createInternalServerException\n                            \n                            \n                                createNotFoundException\n                            \n                            \n                                createValidationException\n                            \n                            \n                                    Private\n                                formatErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpResponseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/validation/exception/exception.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpResponseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBadRequestException\n                        \n                    \n                \n            \n            \n                \ncreateBadRequestException(arg0: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arg0\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForbiddenException\n                        \n                    \n                \n            \n            \n                \ncreateForbiddenException(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createInternalServerException\n                        \n                    \n                \n            \n            \n                \ncreateInternalServerException(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNotFoundException\n                        \n                    \n                \n            \n            \n                \ncreateNotFoundException(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createValidationException\n                        \n                    \n                \n            \n            \n                \ncreateValidationException(errors: ValidationError[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n                                            \n                                                        ValidationError[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpException\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatErrors(errors: ValidationError[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/exception.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errors\n                                            \n                                                        ValidationError[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { ResponseService } from './response/response.service';\n\n@Injectable()\nexport class ExceptionService {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  createBadRequestException(arg0: string) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(private readonly httpResponseService: ResponseService) {}\n\n  createValidationException(errors: ValidationError[]): HttpException {\n    const messages = this.formatErrors(errors);\n    const response = this.httpResponseService.badRequest(\n      messages,\n      'Erreur de validation',\n    );\n    return new HttpException(response, HttpStatus.BAD_REQUEST);\n  }\n\n  createForbiddenException(message: string): HttpException {\n    const response = this.httpResponseService.forbidden(message);\n    return new HttpException(response, HttpStatus.FORBIDDEN);\n  }\n\n  createNotFoundException(message: string): HttpException {\n    const response = this.httpResponseService.notFound(message);\n    return new HttpException(response, HttpStatus.NOT_FOUND);\n  }\n\n  createInternalServerException(message: string): HttpException {\n    const response = this.httpResponseService.internalError(message);\n    return new HttpException(response, HttpStatus.INTERNAL_SERVER_ERROR);\n  }\n\n  private formatErrors(errors: ValidationError[]): string[] {\n    const messages: string[] = [];\n    errors.forEach((error) => {\n      if (error.constraints) {\n        Object.values(error.constraints).forEach((message) => {\n          messages.push(message);\n        });\n      }\n      if (error.children && error.children.length > 0) {\n        messages.push(...this.formatErrors(error.children));\n      }\n    });\n    return messages;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileStorageService.html":{"url":"interfaces/FileStorageService.html","title":"interface - FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        deleteFile\n                                    \n                                \n                                \n                                    \n                                        uploadMultiple\n                                    \n                                \n                                \n                                    \n                                        uploadSingle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/interfaces/upload.interface.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadMultiple\n                        \n                    \n                \n            \n            \n                \nuploadMultiple(files: Express.Multer.File[], folder?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/interfaces/upload.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \nuploadSingle(file: Express.Multer.File, folder?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/interfaces/upload.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileUploadResult {\n  url: string;\n  id: string;\n}\n\nexport interface FileStorageService {\n  uploadSingle(\n    file: Express.Multer.File,\n    folder?: string,\n  ): Promise;\n\n  uploadMultiple(\n    files: Express.Multer.File[],\n    folder?: string,\n  ): Promise;\n\n  deleteFile(filePath: string): Promise;\n}\n\nexport const DATABASE_CONNECTION = 'UPLOAD';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploadResult.html":{"url":"interfaces/FileUploadResult.html","title":"interface - FileUploadResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileUploadResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/interfaces/upload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileUploadResult {\n  url: string;\n  id: string;\n}\n\nexport interface FileStorageService {\n  uploadSingle(\n    file: Express.Multer.File,\n    folder?: string,\n  ): Promise;\n\n  uploadMultiple(\n    files: Express.Multer.File[],\n    folder?: string,\n  ): Promise;\n\n  deleteFile(filePath: string): Promise;\n}\n\nexport const DATABASE_CONNECTION = 'UPLOAD';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindPrivilegeDto.html":{"url":"classes/FindPrivilegeDto.html","title":"class - FindPrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindPrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/dto/find-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/privilege/dto/find-privilege.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FindPrivilegeDto {\n  libelle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindUtilisateurDto.html":{"url":"classes/FindUtilisateurDto.html","title":"class - FindUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/find-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                idPrivilege\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                nom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                prenom\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                profil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'johndoe@example.com', description: 'Filtrer par email', required: false})@IsOptional()@IsEmail({}, {message: 'L'email n'est pas valide'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 1, description: 'Filtrer par ID de privilège', required: false})@IsOptional()@IsInt({message: 'L'ID du privilège doit être un nombre entier'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Doe', description: 'Filtrer par nom', required: false})@IsOptional()@IsString({message: 'Le nom doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'John', description: 'Filtrer par prénom', required: false})@IsOptional()@IsString({message: 'Le prénom doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'admin', description: 'Filtrer par profil', required: false})@IsOptional()@IsString({message: 'Le profil doit être une chaîne de caractères'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/find-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsInt, IsEmail } from 'class-validator';\n\nexport class FindUtilisateurDto {\n  @ApiProperty({ example: 'John', description: 'Filtrer par prénom', required: false })\n  @IsOptional()\n  @IsString({ message: 'Le prénom doit être une chaîne de caractères' })\n  prenom?: string;\n\n  @ApiProperty({ example: 'Doe', description: 'Filtrer par nom', required: false })\n  @IsOptional()\n  @IsString({ message: 'Le nom doit être une chaîne de caractères' })\n  nom?: string;\n\n  @ApiProperty({ example: 'johndoe@example.com', description: 'Filtrer par email', required: false })\n  @IsOptional()\n  @IsEmail({}, { message: 'L\\'email n\\'est pas valide' })\n  email?: string;\n\n  @ApiProperty({ example: 'admin', description: 'Filtrer par profil', required: false })\n  @IsOptional()\n  @IsString({ message: 'Le profil doit être une chaîne de caractères' })\n  profil?: string;\n\n  @ApiProperty({ example: 1, description: 'Filtrer par ID de privilège', required: false })\n  @IsOptional()\n  @IsInt({ message: 'L\\'ID du privilège doit être un nombre entier' })\n  idPrivilege?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPaiementResult.html":{"url":"interfaces/IPaiementResult.html","title":"interface - IPaiementResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPaiementResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/paiement.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            montant\n                                        \n                                \n                                \n                                        \n                                            orderId\n                                        \n                                \n                                \n                                        \n                                            paiementUrl\n                                        \n                                \n                                \n                                        \n                                            statut\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        montant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        montant:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orderId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orderId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paiementUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paiementUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPaiementResult {\n  paiementUrl: string;\n  orderId: string;\n  montant: number;\n  statut: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth/jwt-auth.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth/jwt-auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth/jwt-auth.guard.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext, UnauthorizedException, Inject } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport {ResponseService} from '../../validation/exception/response/response.service';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private readonly responseService: ResponseService) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    if (err || !user) {\n      // @ts-ignore\n      throw new UnauthorizedException(\n        this.responseService.forbidden('Vous devez être authentifié pour accéder à cette ressource.')\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, blacklistService: BlacklistService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blacklistService\n                                                  \n                                                        \n                                                                        BlacklistService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(req: any, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ConfigService } from '@nestjs/config';\nimport { BlacklistService } from './blacklist/blacklist.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly blacklistService: BlacklistService,\n    configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_SECRET'),\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(req: any, payload: any) {\n    const token = ExtractJwt.fromAuthHeaderAsBearerToken()(req);\n    const isBlacklisted = await this.blacklistService.isTokenBlacklisted(token);\n\n    if (isBlacklisted) {\n      throw new UnauthorizedException('Token blacklisté. Veuillez vous reconnecter.');\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: payload.sub },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException('Utilisateur non trouvé');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Log.html":{"url":"classes/Log.html","title":"class - Log","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/log.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateCreation\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idUtilisateur\n                            \n                            \n                                    \n                                ip\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                utilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUtilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class Log {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidUtilisateur: number ;\n@ApiProperty({\n  type: 'string',\n})\naction: string ;\n@ApiProperty({\n  type: 'string',\n})\nip: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateCreation: Date ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nutilisateur?: Utilisateur ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LogController.html":{"url":"controllers/LogController.html","title":"controller - LogController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LogController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste de tous les logs (Admin seulement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/log/log.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un log par ID (Admin seulement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/log/log.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Request, UseGuards } from '@nestjs/common';\nimport { ApiTags, ApiBearerAuth, ApiOperation } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { LogService } from './log.service';\n\n@ApiTags('Logs')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('logs')\nexport class LogController {\n  constructor(private readonly logService: LogService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Liste de tous les logs (Admin seulement)' })\n  async findAll(@Request() req) {\n    return await this.logService.findAll(req.user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un log par ID (Admin seulement)' })\n  async findById(@Param('id') id: string, @Request() req) {\n    return await this.logService.findById(+id, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogDto.html":{"url":"classes/LogDto.html","title":"class - LogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                dateCreation\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                ip\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dateCreation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/log.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class LogDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\naction: string ;\n@ApiProperty({\n  type: 'string',\n})\nip: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ndateCreation: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogListener.html":{"url":"injectables/LogListener.html","title":"injectable - LogListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log-listener/log-listener.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                handlePrismaLogEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/log-listener/log-listener.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handlePrismaLogEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePrismaLogEvent(payload: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('prisma.log')\n                \n            \n\n                    \n                        \n                            Defined in src/log-listener/log-listener.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { LogService } from '../log/log.service';\n\n@Injectable()\nexport class LogListener {\n  constructor(private readonly logService: LogService) {}\n\n  @OnEvent('prisma.log')\n  async handlePrismaLogEvent(payload: {\n    idUtilisateur: number;\n    action: string;\n    ip: string;\n    details?: any;\n  }) {\n    await this.logService.createLog(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogModule.html":{"url":"modules/LogModule.html","title":"module - LogModule","body":"\n                   \n\n\n\n\n    Modules\n    LogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_LogModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nLogModule\n\nLogModule\n\nLogModule -->\n\nPrismaModule->LogModule\n\n\n\n\n\nLogService \n\nLogService \n\nLogService  -->\n\nLogModule->LogService \n\n\n\n\n\nLogListener\n\nLogListener\n\nLogModule -->\n\nLogListener->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nLogModule -->\n\nResponseService->LogModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/log/log.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogListener\n                        \n                        \n                            LogService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LogController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LogService } from './log.service';\nimport { LogController } from './log.controller';\nimport { LogListener } from '../log-listener/log-listener';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { ResponseService } from '../validation/exception/response/response.service'; // adaptez le chemin\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [LogController],\n  providers: [LogService, LogListener, ResponseService],\n  exports: [LogService],\n})\nexport class LogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/log/log.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLog\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Private\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/log/log.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createLog\n                        \n                    \n                \n            \n            \n                \n                        \n                    createLog(payload: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/log/log.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service'; // adaptez le chemin selon votre arborescence\n\n@Injectable()\nexport class LogService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  // Méthode utilisée par le middleware Prisma pour créer un log\n  async createLog(payload: { idUtilisateur: number; action: string; ip: string; details?: any }) {\n    await this.prisma.log.create({\n      data: {\n        idUtilisateur: payload.idUtilisateur,\n        action: payload.action,\n        ip: payload.ip,\n        // Vous pouvez sérialiser payload.details en JSON si nécessaire\n      },\n    });\n  }\n\n  // Vérification que l'utilisateur est admin, renvoie une exception sinon\n  private verifyAdmin(user: any): void {\n    if (!user) {\n      throw new UnauthorizedException('Vous devez être connecté.');\n    }\n    if (user.privilege?.libelle !== 'Admin') {\n      throw new UnauthorizedException('Seuls les administrateurs peuvent accéder à cette ressource.');\n    }\n  }\n\n  // Accès à tous les logs (logique dans le service)\n  async findAll(user: any) {\n    this.verifyAdmin(user);\n    const logs = await this.prisma.log.findMany({\n      where: { deletedAt: null },\n      orderBy: { dateCreation: 'desc' },\n    });\n    return this.responseService.success(logs, 'Liste des logs récupérée');\n  }\n\n  // Accès à un log par son ID\n  async findById(id: number, user: any) {\n    this.verifyAdmin(user);\n    const log = await this.prisma.log.findFirst({\n      where: { id, deletedAt: null },\n    });\n    if (!log) {\n      throw new NotFoundException('Log non trouvé');\n    }\n    return this.responseService.success(log, 'Log récupéré');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedecinSousService.html":{"url":"classes/MedecinSousService.html","title":"class - MedecinSousService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedecinSousService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/medecinSousService.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                disponibilites\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecin\n                            \n                            \n                                    \n                                idSousService\n                            \n                            \n                                    \n                                    Optional\n                                medecin\n                            \n                            \n                                    \n                                    Optional\n                                reservations\n                            \n                            \n                                    \n                                    Optional\n                                sousService\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        disponibilites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Disponibilite[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Disponibilite, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.entity.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\nimport {SousService} from './sousService.entity'\nimport {Disponibilite} from './disponibilite.entity'\nimport {Reservation} from './reservation.entity'\n\n\nexport class MedecinSousService {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecin: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidSousService: number ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nmedecin?: Utilisateur ;\n@ApiProperty({\n  type: () => SousService,\n  required: false,\n})\nsousService?: SousService ;\n@ApiProperty({\n  type: () => Disponibilite,\n  isArray: true,\n  required: false,\n})\ndisponibilites?: Disponibilite[] ;\n@ApiProperty({\n  type: () => Reservation,\n  isArray: true,\n  required: false,\n})\nreservations?: Reservation[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MedecinSousServiceController.html":{"url":"controllers/MedecinSousServiceController.html","title":"controller - MedecinSousServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MedecinSousServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/medecin-sousservice.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                medecin-sous-service\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateMedecinSousServiceDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Associer un médecin à un sous-service'})@ApiResponse({status: 201, description: 'Médecin sous-service ajouté avec succès'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Lister tous les médecins sous-services'})@ApiResponse({status: 200, description: 'Liste récupérée avec succès'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Obtenir un médecin sous-service par ID'})@ApiResponse({status: 200, description: 'Médecin sous-service récupéré'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Supprimer un médecin sous-service (Soft Delete)'})@ApiResponse({status: 200, description: 'Médecin sous-service supprimé'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateMedecinSousServiceDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiBearerAuth('access-token')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Modifier un médecin sous-service'})@ApiResponse({status: 200, description: 'Médecin sous-service mis à jour'})\n                \n            \n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request\n} from '@nestjs/common';\nimport { MedecinSousServiceService } from './medecin-sousservice.service';\nimport { CreateMedecinSousServiceDto } from './dto/create-medecin-sous-service';\nimport { UpdateMedecinSousServiceDto } from './dto/update-medecin-sous-service';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Médecins Sous Services')\n@Controller('medecin-sous-service')\nexport class MedecinSousServiceController {\n  constructor(private readonly service: MedecinSousServiceService) {}\n\n  @Post()\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Associer un médecin à un sous-service\" })\n  @ApiResponse({ status: 201, description: 'Médecin sous-service ajouté avec succès' })\n  create(@Body() dto: CreateMedecinSousServiceDto, @Request() req) {\n    return this.service.create(dto, req.user);\n  }\n\n  @Get()\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Lister tous les médecins sous-services\" })\n  @ApiResponse({ status: 200, description: 'Liste récupérée avec succès' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get(':id')\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Obtenir un médecin sous-service par ID\" })\n  @ApiResponse({ status: 200, description: 'Médecin sous-service récupéré' })\n  findOne(@Param('id') id: string) {\n    return this.service.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Modifier un médecin sous-service\" })\n  @ApiResponse({ status: 200, description: 'Médecin sous-service mis à jour' })\n  update(@Param('id') id: string, @Body() dto: UpdateMedecinSousServiceDto, @Request() req) {\n    return this.service.update(+id, dto, req.user);\n  }\n\n  @Delete(':id')\n  @ApiBearerAuth('access-token')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: \"Supprimer un médecin sous-service (Soft Delete)\" })\n  @ApiResponse({ status: 200, description: 'Médecin sous-service supprimé' })\n  remove(@Param('id') id: string, @Request() req) {\n    return this.service.remove(+id, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MedecinSousServiceDto.html":{"url":"classes/MedecinSousServiceDto.html","title":"class - MedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/medecinSousService.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class MedecinSousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedecinSousServiceService.html":{"url":"injectables/MedecinSousServiceService.html","title":"injectable - MedecinSousServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MedecinSousServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/medecin-sousservice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/medecin-sousservice/medecin-sousservice.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateMedecinSousServiceDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateMedecinSousServiceDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medecin-sousservice/medecin-sousservice.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateMedecinSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\n// @ts-ignore\nimport { CreateMedecinSousServiceDto } from './dto/create-medecin-sous-service.dto';\n// @ts-ignore\nimport { UpdateMedecinSousServiceDto } from './dto/update-medecin-sous-service.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Injectable()\nexport class MedecinSousServiceService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  // ✅ Création d'un médecin sous service\n  async create(dto: CreateMedecinSousServiceDto, currentUser: any) {\n    const sousService = await this.prisma.sousService.findUnique({\n      where: { id: dto.idSousService },\n    });\n\n    if (!sousService) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le sous-service #${dto.idSousService} n'existe pas.`)\n      );\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Utilisateur non trouvé.\")\n      );\n    }\n\n    if (user.privilege.libelle !== 'Admin' && currentUser.id !== dto.idMedecin) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden('Seul un administrateur ou le médecin lui-même peut ajouter un sous-service.')\n      );\n    }\n\n    const medecin = await this.prisma.utilisateur.findUnique({\n      where: { id: dto.idMedecin },\n      include: { privilege: true },\n    });\n\n    if (!medecin || medecin.privilege.libelle !== 'Medecin') {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"L'utilisateur spécifié n'est pas un médecin.\")\n      );\n    }\n\n    const existing = await this.prisma.medecinSousService.findFirst({\n      where: {\n        idMedecin: dto.idMedecin,\n        idSousService: dto.idSousService,\n        deletedAt: null,\n      },\n    });\n\n    if (existing) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden('Ce médecin est déjà associé à ce sous-service.')\n      );\n    }\n\n    const created = await this.prisma.medecinSousService.create({\n      data: {\n        idMedecin: dto.idMedecin,\n        idSousService: dto.idSousService,\n      },\n    });\n\n    return this.responseService.created(created, 'Médecin sous-service ajouté avec succès');\n  }\n\n  // ✅ Liste des médecins sous service\n  async findAll() {\n    const data = await this.prisma.medecinSousService.findMany({\n      where: { deletedAt: null },\n      include: { medecin: true, sousService: true },\n    });\n\n    return this.responseService.success(data, 'Liste des médecins sous-services récupérée');\n  }\n\n  // ✅ Récupérer un médecin sous service par ID\n  async findOne(id: number) {\n    const data = await this.prisma.medecinSousService.findFirst({\n      where: { id, deletedAt: null },\n      include: { medecin: true, sousService: true },\n    });\n\n    if (!data) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le médecin sous-service #${id} n'existe pas ou a été supprimé.`)\n      );\n    }\n\n    return this.responseService.success(data, 'Médecin sous-service récupéré');\n  }\n\n  // ✅ Mise à jour d'un médecin sous service\n  async update(id: number, dto: UpdateMedecinSousServiceDto, currentUser: any) {\n    const existing = await this.prisma.medecinSousService.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!existing) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le médecin sous-service #${id} n'existe pas ou a été supprimé.`)\n      );\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Utilisateur non trouvé.\")\n      );\n    }\n\n    if (\n      user.privilege.libelle !== 'Admin' &&\n      currentUser.id !== existing.idMedecin\n    ) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Seul un administrateur ou le médecin concerné peut modifier ce sous-service.\")\n      );\n    }\n\n    const updated = await this.prisma.medecinSousService.update({\n      where: { id },\n      data: dto,\n    });\n\n    return this.responseService.success(updated, 'Médecin sous-service mis à jour avec succès');\n  }\n\n  // ✅ Suppression d'un médecin sous service (soft delete)\n  async remove(id: number, currentUser: any) {\n    const existing = await this.prisma.medecinSousService.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!existing) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le médecin sous-service #${id} n'existe pas ou a été supprimé.`)\n      );\n    }\n\n    const user = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Utilisateur non trouvé.\")\n      );\n    }\n\n    if (\n      user.privilege.libelle !== 'Admin' &&\n      currentUser.id !== existing.idMedecin\n    ) {\n      throw new UnauthorizedException(\n        this.responseService.forbidden(\"Seul un administrateur ou le médecin concerné peut supprimer ce sous-service.\")\n      );\n    }\n\n    await this.prisma.medecinSousService.update({\n      where: { id },\n      data: { deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Médecin sous-service supprimé avec succès (soft delete)');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MedecinSousserviceModule.html":{"url":"modules/MedecinSousserviceModule.html","title":"module - MedecinSousserviceModule","body":"\n                   \n\n\n\n\n    Modules\n    MedecinSousserviceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MedecinSousserviceModule\n\n\n\ncluster_MedecinSousserviceModule_providers\n\n\n\n\nMedecinSousServiceService\n\nMedecinSousServiceService\n\n\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule -->\n\nMedecinSousServiceService->MedecinSousserviceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/medecin-sousservice/medecin-sousservice.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MedecinSousServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MedecinSousServiceController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MedecinSousServiceService } from './medecin-sousservice.service';\nimport { MedecinSousServiceController } from './medecin-sousservice.controller';\n\n@Module({\n  providers: [MedecinSousServiceService],\n  controllers: [ MedecinSousServiceController]\n})\nexport class MedecinSousserviceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModePaiement.html":{"url":"classes/ModePaiement.html","title":"class - ModePaiement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModePaiement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/modePaiement.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                paiements\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        paiements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paiement[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Paiement, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Paiement} from './paiement.entity'\n\n\nexport class ModePaiement {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nicon: string  | null;\n@ApiProperty({\n  type: () => Paiement,\n  isArray: true,\n  required: false,\n})\npaiements?: Paiement[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ModePaiementController.html":{"url":"controllers/ModePaiementController.html","title":"controller - ModePaiementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ModePaiementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/mode-paiement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mode-paiement\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req, dto: CreateModePaiementDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: CreateModePaiementDto})\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            CreateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateModePaiementDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Get, Post, Body, Patch, Param, Delete,\n  UploadedFile, UseInterceptors, UseGuards, Request\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { ModePaiementService } from './mode-paiement.service';\n// @ts-ignore\nimport {CreateModePaiementDto} from './dto/create-mode-paiement.dto.';\nimport { UpdateModePaiementDto } from './dto/update-mode-paiement.dto';\nimport { ApiBearerAuth, ApiTags, ApiConsumes, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Mode de paiement')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('mode-paiement')\nexport class ModePaiementController {\n  constructor(private readonly modePaiementService: ModePaiementService) {}\n\n  @Post()\n  @UseInterceptors(FileInterceptor('icon'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: CreateModePaiementDto })\n  create(@Request() req, @Body() dto: CreateModePaiementDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.modePaiementService.create(dto, file, req.user);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll() {\n    return this.modePaiementService.findAll();\n  }\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.modePaiementService.findOne(+id);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('icon'))\n  @ApiConsumes('multipart/form-data')\n  update(@Param('id') id: string, @Body() dto: UpdateModePaiementDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.modePaiementService.update(+id, dto, file);\n  }\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.modePaiementService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModePaiementDto.html":{"url":"classes/ModePaiementDto.html","title":"class - ModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                icon\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/modePaiement.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class ModePaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nicon: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModePaiementModule.html":{"url":"modules/ModePaiementModule.html","title":"module - ModePaiementModule","body":"\n                   \n\n\n\n\n    Modules\n    ModePaiementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModePaiementModule\n\n\n\ncluster_ModePaiementModule_providers\n\n\n\ncluster_ModePaiementModule_imports\n\n\n\n\nUploadModule\n\nUploadModule\n\n\n\nModePaiementModule\n\nModePaiementModule\n\nModePaiementModule -->\n\nUploadModule->ModePaiementModule\n\n\n\n\n\nModePaiementService\n\nModePaiementService\n\nModePaiementModule -->\n\nModePaiementService->ModePaiementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mode-paiement/mode-paiement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ModePaiementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ModePaiementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UploadModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ModePaiementService } from './mode-paiement.service';\nimport { ModePaiementController } from './mode-paiement.controller';\nimport { UploadModule } from '../upload/upload.module';\n\n@Module({\n  providers: [ModePaiementService],\n  controllers: [ModePaiementController],\n  imports: [UploadModule],\n  exports: [],\n})\nexport class ModePaiementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModePaiementService.html":{"url":"injectables/ModePaiementService.html","title":"injectable - ModePaiementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ModePaiementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/mode-paiement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, uploadService: FileStorageService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/mode-paiement/mode-paiement.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateModePaiementDto, file?: Express.Multer.File, currentUser?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateModePaiementDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateModePaiementDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mode-paiement/mode-paiement.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, ConflictException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\n// @ts-ignore\nimport {CreateModePaiementDto} from './dto/create-mode-paiement.dto.';\nimport { UpdateModePaiementDto } from './dto/update-mode-paiement.dto';\n\n@Injectable()\nexport class ModePaiementService {\n  constructor(\n    private readonly prisma: PrismaService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n  }\n\n  async create(dto: CreateModePaiementDto, file?: Express.Multer.File, currentUser?: any) {\n    await this.verifyAdmin(currentUser);\n\n    const existing = await this.prisma.modePaiement.findFirst({\n      where: { libelle: dto.libelle, deletedAt: null },\n    });\n    if (existing) {\n      throw new ConflictException(this.responseService.conflict(`Mode de paiement \"${dto.libelle}\" existe déjà.`));\n    }\n\n    let icon: string | undefined = dto.icon;\n    if (file) {\n      const uploaded = await this.uploadService.uploadSingle(file, 'mode-paiement-icons');\n      icon = uploaded.url;\n    }\n\n    const created = await this.prisma.modePaiement.create({\n      data: { libelle: dto.libelle, icon },\n    });\n\n    return this.responseService.created(created, 'Mode de paiement créé avec succès');\n  }\n\n  async findAll() {\n    const modes = await this.prisma.modePaiement.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(modes, 'Liste des modes de paiement');\n  }\n\n  async findOne(id: number) {\n    const mode = await this.prisma.modePaiement.findUnique({ where: { id, deletedAt: null } });\n    if (!mode) throw new ConflictException(this.responseService.conflict(`Mode de paiement #${id} introuvable`));\n    return this.responseService.success(mode, 'Mode de paiement récupéré');\n  }\n\n  async update(id: number, dto: UpdateModePaiementDto, file?: Express.Multer.File) {\n    let icon = dto.icon;\n    if (file) {\n      const uploaded = await this.uploadService.uploadSingle(file, 'mode-paiement-icons');\n      icon = uploaded.url;\n    }\n\n    const updated = await this.prisma.modePaiement.update({\n      where: { id },\n      data: {\n        ...dto,\n        icon,\n      },\n    });\n\n    return this.responseService.success(updated, 'Mode de paiement mis à jour');\n  }\n\n  async remove(id: number) {\n    await this.prisma.modePaiement.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, 'Mode de paiement supprimé');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionalJwtAuthGuard.html":{"url":"injectables/OptionalJwtAuthGuard.html","title":"injectable - OptionalJwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionalJwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/optional-jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/optional-jwt-auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class OptionalJwtAuthGuard extends AuthGuard('jwt') {\n  handleRequest(err, user, info, context: ExecutionContext) {\n    // ✅ Retourne `user` s'il est authentifié, sinon continue sans erreur\n    return user || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ordonnance.html":{"url":"classes/Ordonnance.html","title":"class - Ordonnance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ordonnance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/ordonnance.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contenu\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecin\n                            \n                            \n                                    \n                                idPatient\n                            \n                            \n                                    \n                                    Optional\n                                medecin\n                            \n                            \n                                    \n                                    Optional\n                                patient\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idPatient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        patient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class Ordonnance {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidPatient: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecin: number ;\n@ApiProperty({\n  type: 'string',\n})\ncontenu: string ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\npatient?: Utilisateur ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nmedecin?: Utilisateur ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrdonnanceDto.html":{"url":"classes/OrdonnanceDto.html","title":"class - OrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                contenu\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/ordonnance.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class OrdonnanceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ncontenu: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Paiement.html":{"url":"classes/Paiement.html","title":"class - Paiement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Paiement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/paiement.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatTransaction\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idModePaiement\n                            \n                            \n                                    \n                                idReservation\n                            \n                            \n                                    \n                                    Optional\n                                modePaiement\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                referenceTransaction\n                            \n                            \n                                    \n                                    Optional\n                                reservation\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idModePaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        modePaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ModePaiement\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => ModePaiement, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.entity.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Reservation} from './reservation.entity'\nimport {ModePaiement} from './modePaiement.entity'\n\n\nexport class Paiement {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidReservation: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidModePaiement: number ;\n@ApiProperty({\n  type: 'string',\n})\nreferenceTransaction: string ;\n@ApiProperty({\n  type: 'string',\n})\netatTransaction: string ;\n@ApiProperty({\n  type: () => Reservation,\n  required: false,\n})\nreservation?: Reservation ;\n@ApiProperty({\n  type: () => ModePaiement,\n  required: false,\n})\nmodePaiement?: ModePaiement ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaiementController.html":{"url":"controllers/PaiementController.html","title":"controller - PaiementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaiementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/paiement.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paiement\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                annulerTransaction\n                            \n                            \n                                    \n                                    \n                                    \n                                cashout\n                            \n                            \n                                    \n                                    \n                                    \n                                creerPaiement\n                            \n                            \n                                    \n                                    \n                                    \n                                getTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        annulerTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    annulerTransaction(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':orderId')@ApiOperation({summary: 'Supprimer une transaction Naboo'})@ApiParam({name: 'orderId', description: 'Order ID Naboo'})\n                \n            \n\n                    \n                        \n                            Defined in src/paiement/paiement.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        cashout\n                        \n                    \n                \n            \n            \n                \n                        \n                    cashout(body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('cashout')@ApiOperation({summary: 'Faire un cashout Naboo vers OM ou Wave'})@ApiBody({schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/paiement/paiement.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        creerPaiement\n                        \n                    \n                \n            \n            \n                \n                        \n                    creerPaiement(dto: CreatePaiementNabooDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer une transaction Naboo'})@ApiBody({type: CreatePaiementNabooDto})\n                \n            \n\n                    \n                        \n                            Defined in src/paiement/paiement.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePaiementNabooDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTransaction(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':orderId')@ApiOperation({summary: 'Récupérer une transaction Naboo'})@ApiParam({name: 'orderId', description: 'Order ID Naboo'})\n                \n            \n\n                    \n                        \n                            Defined in src/paiement/paiement.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller, Post, Get, Delete, Body, Param, Request, UseGuards,\n} from '@nestjs/common';\nimport { PaiementService } from './paiement.service';\nimport { CreatePaiementNabooDto } from './dto/create-paiement-naboo.dto';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport {\n  ApiBearerAuth, ApiTags, ApiOperation, ApiBody, ApiParam,\n} from '@nestjs/swagger';\nimport { PaiementNabooService } from './paiement-naboo/paiement-naboo.service';\n\n@ApiTags('Paiement')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('paiement')\nexport class PaiementController {\n  constructor(\n    private readonly paiementService: PaiementService,\n    private readonly nabooService: PaiementNabooService,\n  ) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer une transaction Naboo' })\n  @ApiBody({ type: CreatePaiementNabooDto })\n  creerPaiement(@Body() dto: CreatePaiementNabooDto, @Request() req) {\n    return this.paiementService.payer(dto, req.user);\n  }\n\n  @Get(':orderId')\n  @ApiOperation({ summary: 'Récupérer une transaction Naboo' })\n  @ApiParam({ name: 'orderId', description: 'Order ID Naboo' })\n  getTransaction(@Param('orderId') orderId: string) {\n    return this.nabooService.getOneTransaction(orderId);\n  }\n\n  @Delete(':orderId')\n  @ApiOperation({ summary: 'Supprimer une transaction Naboo' })\n  @ApiParam({ name: 'orderId', description: 'Order ID Naboo' })\n  annulerTransaction(@Param('orderId') orderId: string) {\n    return this.nabooService.deleteTransaction(orderId);\n  }\n\n  @Post('cashout')\n  @ApiOperation({ summary: 'Faire un cashout Naboo vers OM ou Wave' })\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        full_name: { type: 'string', example: 'Zigfreak02' },\n        phone_number: { type: 'string', example: '770000000' },\n        amount: { type: 'number', example: 10000 },\n        method: {\n          type: 'string',\n          enum: ['WAVE', 'ORANGE_MONEY'],\n          example: 'WAVE',\n        },\n      },\n    },\n  })\n  cashout(@Body() body: {\n    full_name: string;\n    phone_number: string;\n    amount: number;\n    method: 'WAVE' | 'ORANGE_MONEY';\n  }) {\n    return this.nabooService.cashout(body);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaiementDto.html":{"url":"classes/PaiementDto.html","title":"class - PaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatTransaction\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                referenceTransaction\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/paiement.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class PaiementDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'string',\n})\nreferenceTransaction: string ;\n@ApiProperty({\n  type: 'string',\n})\netatTransaction: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaiementModule.html":{"url":"modules/PaiementModule.html","title":"module - PaiementModule","body":"\n                   \n\n\n\n\n    Modules\n    PaiementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaiementModule\n\n\n\ncluster_PaiementModule_providers\n\n\n\ncluster_PaiementModule_imports\n\n\n\n\nReservationModule\n\nReservationModule\n\n\n\nPaiementModule\n\nPaiementModule\n\nPaiementModule -->\n\nReservationModule->PaiementModule\n\n\n\n\n\nPaiementNabooService\n\nPaiementNabooService\n\nPaiementModule -->\n\nPaiementNabooService->PaiementModule\n\n\n\n\n\nPaiementService\n\nPaiementService\n\nPaiementModule -->\n\nPaiementService->PaiementModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPaiementModule -->\n\nPrismaService->PaiementModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nPaiementModule -->\n\nResponseService->PaiementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paiement/paiement.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaiementNabooService\n                        \n                        \n                            PaiementService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaiementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReservationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaiementService } from './paiement.service';\nimport { PaiementController } from './paiement.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { PaiementNabooService } from './paiement-naboo/paiement-naboo.service';\nimport {ReservationModule} from '../reservation/reservation.module';\nimport { ReservationDocumentService } from '../reservation/reservation-document/reservation-document.service';\n\n@Module({\n  controllers: [PaiementController],\n  providers: [\n    PaiementService,\n    PaiementNabooService,\n    PrismaService,\n    ResponseService,\n  ],\n  imports:[ReservationModule],\n})\nexport class PaiementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaiementNabooService.html":{"url":"injectables/PaiementNabooService.html","title":"injectable - PaiementNabooService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaiementNabooService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/paiement-naboo/paiement-naboo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                apiKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cashout\n                            \n                            \n                                    Async\n                                createTransaction\n                            \n                            \n                                    Async\n                                deleteTransaction\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Async\n                                getOneTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cashout\n                        \n                    \n                \n            \n            \n                \n                        \n                    cashout(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement-naboo/paiement-naboo.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTransaction(params: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement-naboo/paiement-naboo.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTransaction(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement-naboo/paiement-naboo.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement-naboo/paiement-naboo.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { 'Content-Type': string; Accept: string; Authorization: string; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOneTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOneTransaction(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement-naboo/paiement-naboo.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `Bearer ${process.env.NABOO_API_KEY}`\n                    \n                \n                    \n                        \n                                Defined in src/paiement/paiement-naboo/paiement-naboo.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, NotFoundException } from '@nestjs/common';\nimport axios from 'axios';\nimport * as dotenv from 'dotenv';\nimport { IPaiementResult } from '../paiement.interface';\n\ndotenv.config();\n\n@Injectable()\nexport class PaiementNabooService {\n  private readonly apiKey = `Bearer ${process.env.NABOO_API_KEY}`;\n\n  async createTransaction(params: {\n    montant: number,\n    method: 'WAVE' | 'ORANGE_MONEY' | 'FREE_MONEY',\n    description: string\n  }): Promise {\n    const payload = {\n      method_of_payment: [params.method],\n      products: [{\n        name: \"Consultation\",\n        category: \"Santé\",\n        amount: Math.floor(params.montant),\n        quantity: 1,\n        description: params.description,\n      }],\n      success_url: 'https://tonsite.com/paiement/success',\n      error_url: 'https://tonsite.com/paiement/error',\n      is_escrow: false,\n      is_merchant: true,\n    };\n\n    try {\n      const { data } = await axios.put(\n        'https://api.naboopay.com/api/v1/transaction/create-transaction',\n        payload,\n        { headers: this.getHeaders() }\n      );\n\n      return {\n        paiementUrl: data.checkout_url,\n        orderId: data.order_id,\n        montant: data.amount_to_pay,\n        statut: data.transaction_status\n      };\n    } catch {\n      throw new ConflictException('Erreur création transaction Naboo');\n    }\n  }\n\n  async getOneTransaction(orderId: string): Promise {\n    try {\n      const { data } = await axios.get(\n        `https://api.naboopay.com/api/v1/transaction/get-one-transaction?order_id=${orderId}`,\n        { headers: this.getHeaders() }\n      );\n      return data;\n    } catch {\n      throw new NotFoundException('Transaction introuvable');\n    }\n  }\n\n  async deleteTransaction(orderId: string): Promise {\n    try {\n      const { data } = await axios.delete(\n        'https://api.naboopay.com/api/v1/transaction/delete-transaction',\n        {\n          headers: this.getHeaders(),\n          data: { order_id: orderId }\n        }\n      );\n      return data.message;\n    } catch {\n      throw new ConflictException('Erreur suppression de transaction');\n    }\n  }\n\n  async cashout(params: {\n    full_name: string,\n    phone_number: string,\n    amount: number,\n    method: 'WAVE' | 'ORANGE_MONEY'\n  }): Promise {\n    const url = `https://api.naboopay.com/api/v1/cashout/${params.method.toLowerCase()}`;\n    try {\n      const { data } = await axios.post(url, {\n        full_name: params.full_name,\n        phone_number: params.phone_number,\n        amount: params.amount\n      }, {\n        headers: this.getHeaders()\n      });\n\n      return data;\n    } catch {\n      throw new ConflictException('Erreur de cashout');\n    }\n  }\n\n  private getHeaders() {\n    return {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': this.apiKey,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaiementService.html":{"url":"injectables/PaiementService.html","title":"injectable - PaiementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaiementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/paiement.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                webhookSecret\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                annulerTransaction\n                            \n                            \n                                    Async\n                                handleError\n                            \n                            \n                                    Async\n                                handleNabooWebhook\n                            \n                            \n                                    Async\n                                handleSuccess\n                            \n                            \n                                    Async\n                                payer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, response: ResponseService, naboo: PaiementNabooService, documentService: ReservationDocumentService)\n                    \n                \n                        \n                            \n                                Defined in src/paiement/paiement.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        naboo\n                                                  \n                                                        \n                                                                        PaiementNabooService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        documentService\n                                                  \n                                                        \n                                                                        ReservationDocumentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        annulerTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    annulerTransaction(orderId: string, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleNabooWebhook\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleNabooWebhook(body: literal type, signature: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                signature\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSuccess\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSuccess(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement.service.ts:211\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        payer\n                        \n                    \n                \n            \n            \n                \n                        \n                    payer(dto: CreatePaiementNabooDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paiement/paiement.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreatePaiementNabooDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        webhookSecret\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.WEBHOOK_SECRET || 'bba93370af52ecd7a64549a9bf09aa321a2d4dd0'\n                    \n                \n                    \n                        \n                                Defined in src/paiement/paiement.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, NotFoundException, ForbiddenException, BadRequestException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreatePaiementNabooDto } from './dto/create-paiement-naboo.dto';\nimport { PaiementNabooService } from './paiement-naboo/paiement-naboo.service';\n\nimport * as crypto from 'crypto';\nimport { ReservationDocumentService } from '../reservation/reservation-document/reservation-document.service';\n\n@Injectable()\nexport class PaiementService {\n  private readonly webhookSecret = process.env.WEBHOOK_SECRET || 'bba93370af52ecd7a64549a9bf09aa321a2d4dd0';\n\n  constructor(\n    private prisma: PrismaService,\n    private response: ResponseService,\n    private naboo: PaiementNabooService,\n    private documentService: ReservationDocumentService,\n  ) {}\n\n  async payer(dto: CreatePaiementNabooDto, currentUser: any) {\n    const reservation = await this.prisma.reservation.findUnique({\n      where: { id: dto.idReservation },\n      include: {\n        paiement: true,\n        medecinSousService: {\n          include: {\n            sousService: {\n              include: {\n                tarifs: {\n                  where: { actif: true },\n                  include: { devise: true },\n                },\n              },\n            },\n          },\n        },\n        statutReservation: true,\n      },\n    });\n\n    if (!reservation) {\n      throw new NotFoundException(this.response.notFound('Réservation introuvable'));\n    }\n    if (reservation.paiement) {\n      throw new ConflictException(this.response.conflict('Paiement déjà existant'));\n    }\n    if (reservation.idUtilisateur !== currentUser.id && currentUser.privilege?.libelle !== 'Admin') {\n      throw new ForbiddenException(this.response.forbidden('Accès non autorisé à cette réservation'));\n    }\n\n    const tarif = reservation.medecinSousService?.sousService?.tarifs[0];\n    if (!tarif) {\n      throw new NotFoundException(this.response.notFound('Aucun tarif disponible'));\n    }\n\n    const modePaiement = await this.prisma.modePaiement.findUnique({\n      where: { id: dto.idModePaiement },\n    });\n    if (!modePaiement) {\n      throw new NotFoundException(this.response.notFound('Mode de paiement invalide'));\n    }\n\n    const result = await this.naboo.createTransaction({\n      montant: tarif.montant,\n      method: modePaiement.libelle as 'WAVE' | 'ORANGE_MONEY' | 'FREE_MONEY',\n      description: `Paiement pour réservation #${reservation.id}`,\n    });\n\n    const paiement = await this.prisma.paiement.create({\n      data: {\n        idReservation: dto.idReservation,\n        montant: result.montant,\n        idModePaiement: dto.idModePaiement,\n        referenceTransaction: result.orderId,\n        paiementUrl: result.paiementUrl,\n        etatTransaction: result.statut,\n      },\n    });\n\n    const qrResult = await this.documentService.generateAndUploadQRCode(\n      reservation.id,\n      `${process.env.API_BASE_URL || 'https://votreapi.com'}/reservations/${reservation.id}`,\n    );\n    const pdfResult = await this.documentService.generateAndUploadPDF(reservation);\n\n    const updatedReservation = await this.prisma.reservation.update({\n      where: { id: reservation.id },\n      data: {\n        qrCodeUrl: qrResult.url,\n        pdfUrl: pdfResult.url,\n        etatPaiement: 'PENDING',\n      },\n      include: {\n        medecinSousService: { include: { sousService: true } },\n        paiement: true,\n        statutReservation: true,\n      },\n    });\n\n    return this.response.created(\n      { paiement, reservation: updatedReservation, qrCode: qrResult, pdf: pdfResult },\n      'Transaction initiée, veuillez compléter le paiement',\n    );\n  }\n\n  async annulerTransaction(orderId: string, currentUser: any) {\n    const paiement = await this.prisma.paiement.findFirst({\n      where: { referenceTransaction: orderId },\n      include: { reservation: { include: { statutReservation: true } } },\n    });\n    if (!paiement) {\n      throw new NotFoundException(this.response.notFound('Transaction introuvable'));\n    }\n\n    if (\n      paiement.reservation.idUtilisateur !== currentUser.id &&\n      currentUser.privilege?.libelle !== 'Admin'\n    ) {\n      throw new ForbiddenException(this.response.forbidden('Annulation non autorisée'));\n    }\n\n    const cancelledStatut = await this.prisma.statutReservation.findFirst({\n      where: { libelle: 'CANCELLED' },\n    });\n    if (!cancelledStatut) {\n      throw new NotFoundException(this.response.notFound('Statut CANCELLED introuvable'));\n    }\n\n    const result = await this.naboo.deleteTransaction(orderId);\n\n    await this.prisma.paiement.delete({\n      where: { id: paiement.id, idReservation: paiement.idReservation },\n    });\n\n    await this.prisma.reservation.update({\n      where: { id: paiement.idReservation },\n      data: {\n        idStatutReservation: cancelledStatut.id,\n        etatPaiement: 'CANCELLED',\n        qrCodeUrl: null,\n        pdfUrl: null,\n      },\n    });\n\n    return this.response.success(result, 'Transaction annulée');\n  }\n\n  async handleNabooWebhook(\n    body: { order_id: string; transaction_status: string; montant: number },\n    signature: string,\n  ) {\n    const computedSignature = crypto\n      .createHmac('sha256', this.webhookSecret)\n      .update(JSON.stringify(body))\n      .digest('hex');\n\n    if (computedSignature !== signature) {\n      throw new BadRequestException('Signature invalide');\n    }\n\n    const paiement = await this.prisma.paiement.findFirst({\n      where: { referenceTransaction: body.order_id },\n      include: { reservation: true },\n    });\n\n    if (!paiement) {\n      throw new NotFoundException(this.response.notFound('Paiement introuvable'));\n    }\n\n    await this.prisma.paiement.update({\n      where: { id: paiement.id, idReservation: paiement.idReservation },\n      data: { etatTransaction: body.transaction_status },\n    });\n\n    const confirmedStatut = await this.prisma.statutReservation.findFirst({\n      where: { libelle: 'CONFIRMED' },\n    });\n    const cancelledStatut = await this.prisma.statutReservation.findFirst({\n      where: { libelle: 'CANCELLED' },\n    });\n\n    if (!confirmedStatut || !cancelledStatut) {\n      throw new NotFoundException(this.response.notFound('Statut de réservation introuvable'));\n    }\n\n    if (body.transaction_status === 'COMPLETED') {\n      await this.prisma.reservation.update({\n        where: { id: paiement.idReservation },\n        data: {\n          idStatutReservation: confirmedStatut.id,\n          etatPaiement: 'PAID',\n        },\n      });\n    } else if (body.transaction_status === 'FAILED' || body.transaction_status === 'CANCELLED') {\n      await this.prisma.reservation.update({\n        where: { id: paiement.idReservation },\n        data: {\n          idStatutReservation: cancelledStatut.id,\n          etatPaiement: 'CANCELLED',\n          qrCodeUrl: null,\n          pdfUrl: null,\n        },\n      });\n    }\n\n    return this.response.success(null, 'Webhook traité avec succès');\n  }\n\n  async handleSuccess(orderId: string) {\n    const paiement = await this.prisma.paiement.findFirst({\n      where: { referenceTransaction: orderId },\n    });\n    if (!paiement) {\n      throw new NotFoundException(this.response.notFound('Paiement introuvable'));\n    }\n    return this.response.success({ orderId, status: 'success' }, 'Paiement réussi (test)');\n  }\n\n  async handleError(orderId: string) {\n    const paiement = await this.prisma.paiement.findFirst({\n      where: { referenceTransaction: orderId },\n    });\n    if (!paiement) {\n      throw new NotFoundException(this.response.notFound('Paiement introuvable'));\n    }\n    return this.response.success({ orderId, status: 'error' }, 'Paiement échoué (test)');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, Global } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n@Global()\n@Module({\n  providers: [PrismaService],\n  imports: [],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, OnModuleDestroy } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { loggingMiddleware } from './prisma.middleware';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(private eventEmitter: EventEmitter2) {\n    super();\n    this.$use(loggingMiddleware(this.eventEmitter));\n  }\n\n  async onModuleInit() {\n    try {\n      await this.$connect();\n      console.log('✅ Connected to the database');\n      console.log('🧩 Available models:', Object.keys(this));\n    } catch (error) {\n      console.error('❌ Failed to connect to the database', error);\n      process.exit(1);\n    }\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Privilege.html":{"url":"classes/Privilege.html","title":"class - Privilege","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Privilege\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/privilege.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                utilisateurs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        utilisateurs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Utilisateur[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\n\n\nexport class Privilege {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: () => Utilisateur,\n  isArray: true,\n  required: false,\n})\nutilisateurs?: Utilisateur[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Privilege-1.html":{"url":"classes/Privilege-1.html","title":"class - Privilege-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Privilege\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/entities/privilege.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Privilege {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PrivilegeController.html":{"url":"controllers/PrivilegeController.html","title":"controller - PrivilegeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PrivilegeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/privilege.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                privileges\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPrivilegeDto: CreatePrivilegeDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un privilège (Admin uniquement)'})@ApiResponse({status: 201, description: 'Privilège créé avec succès'})@ApiResponse({status: 401, description: 'Non autorisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPrivilegeDto\n                                            \n                                                            CreatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Lister tous les privilèges (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un privilège par ID (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un privilège (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePrivilegeDto: UpdatePrivilegeDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un privilège (Admin uniquement)'})\n                \n            \n\n                    \n                        \n                            Defined in src/privilege/privilege.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePrivilegeDto\n                                            \n                                                            UpdatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request } from '@nestjs/common';\nimport { PrivilegeService } from './privilege.service';\nimport { CreatePrivilegeDto } from './dto/create-privilege.dto';\nimport { UpdatePrivilegeDto } from './dto/update-privilege.dto';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Privilèges')\n@ApiBearerAuth('access-token') // Swagger : Token requis pour toutes les routes\n@UseGuards(JwtAuthGuard) // ✅ Toutes les routes nécessitent l'authentification\n@Controller('privileges')\nexport class PrivilegeController {\n  constructor(private readonly privilegeService: PrivilegeService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un privilège (Admin uniquement)' })\n  @ApiResponse({ status: 201, description: 'Privilège créé avec succès' })\n  @ApiResponse({ status: 401, description: 'Non autorisé' })\n  create(@Body() createPrivilegeDto: CreatePrivilegeDto, @Request() req) {\n    return this.privilegeService.create(createPrivilegeDto, req.user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Lister tous les privilèges (Admin uniquement)' })\n  findAll(@Request() req) {\n    return this.privilegeService.findAll(req.user);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un privilège par ID (Admin uniquement)' })\n  findOne(@Param('id') id: string, @Request() req) {\n    return this.privilegeService.findOne(+id, req.user);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un privilège (Admin uniquement)' })\n  update(@Param('id') id: string, @Body() updatePrivilegeDto: UpdatePrivilegeDto, @Request() req) {\n    return this.privilegeService.update(+id, updatePrivilegeDto, req.user);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un privilège (Admin uniquement)' })\n  remove(@Param('id') id: string, @Request() req) {\n    return this.privilegeService.remove(+id, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrivilegeDto.html":{"url":"classes/PrivilegeDto.html","title":"class - PrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/privilege.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class PrivilegeDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivilegeModule.html":{"url":"modules/PrivilegeModule.html","title":"module - PrivilegeModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivilegeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrivilegeModule\n\n\n\ncluster_PrivilegeModule_providers\n\n\n\n\nPrivilegeService\n\nPrivilegeService\n\n\n\nPrivilegeModule\n\nPrivilegeModule\n\nPrivilegeModule -->\n\nPrivilegeService->PrivilegeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/privilege/privilege.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrivilegeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PrivilegeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrivilegeService } from './privilege.service';\nimport { PrivilegeController } from './privilege.controller';\n\n@Module({\n  controllers: [PrivilegeController],\n  providers: [PrivilegeService],\n})\nexport class PrivilegeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrivilegeService.html":{"url":"injectables/PrivilegeService.html","title":"injectable - PrivilegeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrivilegeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/privilege.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/privilege/privilege.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPrivilegeDto: CreatePrivilegeDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPrivilegeDto\n                                            \n                                                            CreatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updatePrivilegeDto: UpdatePrivilegeDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePrivilegeDto\n                                            \n                                                            UpdatePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/privilege/privilege.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, ConflictException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreatePrivilegeDto } from './dto/create-privilege.dto';\nimport { UpdatePrivilegeDto } from './dto/update-privilege.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Injectable()\nexport class PrivilegeService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  // ✅ Vérification de l'admin\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) {\n      throw new UnauthorizedException(\"Vous devez être connecté pour effectuer cette action.\");\n    }\n\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n  }\n\n  async create(createPrivilegeDto: CreatePrivilegeDto, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const existingPrivilege = await this.prisma.privilege.findUnique({\n      where: { libelle: createPrivilegeDto.libelle },\n    });\n\n    if (existingPrivilege) {\n      throw new ConflictException(\n        this.responseService.badRequest(\n          ['Le libellé du privilège doit être unique'],\n          'Validation échouée'\n        )\n      );\n    }\n\n    const privilege = await this.prisma.privilege.create({\n      data: createPrivilegeDto,\n    });\n\n    return this.responseService.created(privilege, 'Privilège créé avec succès');\n  }\n\n  async findAll(currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privileges = await this.prisma.privilege.findMany({\n      where: { deletedAt: null },\n    });\n\n    return this.responseService.success(privileges, 'Liste des privilèges récupérée');\n  }\n\n  async findOne(id: number, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privilege = await this.prisma.privilege.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${id} n'existe pas ou a été supprimé`)\n      );\n    }\n\n    return this.responseService.success(privilege, 'Privilège récupéré');\n  }\n\n  async update(id: number, updatePrivilegeDto: UpdatePrivilegeDto, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privilege = await this.prisma.privilege.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${id} n'existe pas ou a été supprimé`)\n      );\n    }\n\n    if (updatePrivilegeDto.libelle) {\n      const existingPrivilege = await this.prisma.privilege.findUnique({\n        where: { libelle: updatePrivilegeDto.libelle },\n      });\n\n      if (existingPrivilege && existingPrivilege.id !== id) {\n        throw new ConflictException(\n          this.responseService.badRequest(\n            ['Le libellé du privilège doit être unique'],\n            'Validation échouée'\n          )\n        );\n      }\n    }\n\n    const updatedPrivilege = await this.prisma.privilege.update({\n      where: { id },\n      data: updatePrivilegeDto,\n    });\n\n    return this.responseService.success(updatedPrivilege, 'Privilège mis à jour avec succès');\n  }\n\n  async remove(id: number, currentUser: any) {\n    await this.verifyAdmin(currentUser); // ✅ Vérification Admin\n\n    const privilege = await this.prisma.privilege.findFirst({\n      where: { id, deletedAt: null },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${id} n'existe pas ou a déjà été supprimé`)\n      );\n    }\n\n    await this.prisma.privilege.update({\n      where: { id },\n      data: { deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Privilège supprimé avec succès (soft delete)');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reservation.html":{"url":"classes/Reservation.html","title":"class - Reservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/reservation.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatPaiement\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                idStatutReservation\n                            \n                            \n                                    \n                                idUtilisateur\n                            \n                            \n                                    \n                                    Optional\n                                medecinSousService\n                            \n                            \n                                    \n                                    Optional\n                                paiement\n                            \n                            \n                                    \n                                    Optional\n                                statutReservation\n                            \n                            \n                                    \n                                typeConsultation\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    Optional\n                                utilisateur\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idStatutReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUtilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MedecinSousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        paiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paiement | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Paiement, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        statutReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatutReservation\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => StatutReservation, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        utilisateur\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Utilisateur\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Utilisateur, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Utilisateur} from './utilisateur.entity'\nimport {MedecinSousService} from './medecinSousService.entity'\nimport {StatutReservation} from './statutReservation.entity'\nimport {Paiement} from './paiement.entity'\n\n\nexport class Reservation {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidUtilisateur: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidMedecinSousService: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidStatutReservation: number ;\n@ApiProperty({\n  type: 'string',\n})\ntypeConsultation: string ;\n@ApiProperty({\n  type: 'string',\n})\netatPaiement: string ;\n@ApiProperty({\n  type: () => Utilisateur,\n  required: false,\n})\nutilisateur?: Utilisateur ;\n@ApiProperty({\n  type: () => MedecinSousService,\n  required: false,\n})\nmedecinSousService?: MedecinSousService ;\n@ApiProperty({\n  type: () => StatutReservation,\n  required: false,\n})\nstatutReservation?: StatutReservation ;\n@ApiProperty({\n  type: () => Paiement,\n  required: false,\n  nullable: true,\n})\npaiement?: Paiement  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReservationController.html":{"url":"controllers/ReservationController.html","title":"controller - ReservationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReservationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservation/reservation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reservations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                cancel\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        cancel\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancel(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Annuler une réservation'})@ApiParam({name: 'id', description: 'ID de la réservation'})\n                \n            \n\n                    \n                        \n                            Defined in src/reservation/reservation.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateReservationDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Créer une réservation'})@ApiBody({type: CreateReservationDto})\n                \n            \n\n                    \n                        \n                            Defined in src/reservation/reservation.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Lister toutes les réservations'})\n                \n            \n\n                    \n                        \n                            Defined in src/reservation/reservation.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Afficher une réservation'})@ApiParam({name: 'id', description: 'ID de la réservation'})\n                \n            \n\n                    \n                        \n                            Defined in src/reservation/reservation.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateReservationDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(JwtAuthGuard)@ApiOperation({summary: 'Modifier une réservation'})@ApiParam({name: 'id', description: 'ID de la réservation'})@ApiBody({type: UpdateReservationDto})\n                \n            \n\n                    \n                        \n                            Defined in src/reservation/reservation.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        // src/reservation/reservation.controller.ts\nimport { Controller, Get, Post, Patch, Delete, Body, Param, Request, UseGuards } from '@nestjs/common';\nimport { ReservationService } from './reservation.service';\nimport { CreateReservationDto } from './dto/create-reservation.dto';\nimport { UpdateReservationDto } from './dto/update-reservation.dto';\nimport { ApiTags, ApiOperation, ApiBearerAuth, ApiParam, ApiBody } from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\n\n@ApiTags('Réservations')\n@ApiBearerAuth('access-token')\n@Controller('reservations')\nexport class ReservationController {\n  constructor(private readonly reservationService: ReservationService) {}\n\n  @Post()\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Créer une réservation' })\n  @ApiBody({ type: CreateReservationDto })\n  create(@Body() dto: CreateReservationDto, @Request() req) {\n    return this.reservationService.create(dto, req.user);\n  }\n\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Lister toutes les réservations' })\n  findAll(@Request() req) {\n    return this.reservationService.findAll(req.user);\n  }\n\n  @Get(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Afficher une réservation' })\n  @ApiParam({ name: 'id', description: 'ID de la réservation' })\n  findOne(@Param('id') id: string, @Request() req) {\n    return this.reservationService.findOne(+id, req.user);\n  }\n\n  @Patch(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Modifier une réservation' })\n  @ApiParam({ name: 'id', description: 'ID de la réservation' })\n  @ApiBody({ type: UpdateReservationDto })\n  update(@Param('id') id: string, @Body() dto: UpdateReservationDto, @Request() req) {\n    return this.reservationService.update(+id, dto, req.user);\n  }\n\n  @Delete(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiOperation({ summary: 'Annuler une réservation' })\n  @ApiParam({ name: 'id', description: 'ID de la réservation' })\n  cancel(@Param('id') id: string, @Request() req) {\n    return this.reservationService.cancel(+id, req.user);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReservationDocumentService.html":{"url":"injectables/ReservationDocumentService.html","title":"injectable - ReservationDocumentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReservationDocumentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservation/reservation-document/reservation-document.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateAndUploadPDF\n                            \n                            \n                                    Async\n                                generateAndUploadQRCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/reservation/reservation-document/reservation-document.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAndUploadPDF\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAndUploadPDF(reservation: any, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation-document/reservation-document.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                reservation\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'reservations/pdfs'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAndUploadQRCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAndUploadQRCode(reservationId: number, reservationUrl: string, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation-document/reservation-document.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                reservationId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                reservationUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'reservations/qrcodes'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, BadRequestException } from '@nestjs/common';\nimport { v2 as cloudinary } from 'cloudinary';\nimport * as QRCode from 'qrcode';\nimport * as PDFKit from 'pdfkit';\nimport { FileUploadResult } from '../../upload/interfaces/upload.interface';\n\n\n@Injectable()\nexport class ReservationDocumentService {\n  constructor() {\n    cloudinary.config({\n      cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n      api_key: process.env.CLOUDINARY_API_KEY,\n      api_secret: process.env.CLOUDINARY_API_SECRET,\n    });\n  }\n\n  async generateAndUploadQRCode(\n    reservationId: number,\n    reservationUrl: string,\n    folder: string = 'reservations/qrcodes',\n  ): Promise {\n    try {\n      const qrBuffer = await QRCode.toBuffer(reservationUrl, { width: 300 });\n      return new Promise((resolve, reject) => {\n        const uploadStream = cloudinary.uploader.upload_stream(\n          { folder, resource_type: 'image' },\n          (error, result) => {\n            if (error || !result) {\n              return reject(new BadRequestException('Erreur upload QR code'));\n            }\n            resolve({\n              url: result.secure_url,\n              id: result.public_id,\n            });\n          },\n        );\n        uploadStream.end(qrBuffer);\n      });\n    } catch (error) {\n      throw new BadRequestException(`Erreur génération QR code: ${error.message}`);\n    }\n  }\n\n  async generateAndUploadPDF(\n    reservation: any,\n    folder: string = 'reservations/pdfs',\n  ): Promise {\n    try {\n      const doc = new PDFKit();\n      const buffers: Buffer[] = [];\n\n      doc.on('data', buffers.push.bind(buffers));\n      doc.on('end', () => {});\n\n      doc.fontSize(16).text('Confirmation de Réservation', { align: 'center' });\n      doc.moveDown();\n      doc.fontSize(12).text(`Réservation ID: ${reservation.id}`);\n      doc.text(`Service: ${reservation.medecinSousService?.sousService?.nom || 'N/A'}`);\n      doc.text(`Date: ${new Date(reservation.date).toLocaleDateString()}`);\n      doc.text(`Heure: ${reservation.heureDebut} - ${reservation.heureFin}`);\n      doc.text(`Montant: ${reservation.paiement?.montant || 'N/A'} ${reservation.paiement?.devise || ''}`);\n      doc.end();\n\n      const pdfBuffer = await new Promise((resolve) => {\n        doc.on('end', () => resolve(Buffer.concat(buffers)));\n      });\n\n      return new Promise((resolve, reject) => {\n        const uploadStream = cloudinary.uploader.upload_stream(\n          { folder, resource_type: 'raw' },\n          (error, result) => {\n            if (error || !result) {\n              return reject(new BadRequestException('Erreur upload PDF'));\n            }\n            resolve({\n              url: result.secure_url,\n              id: result.public_id,\n            });\n          },\n        );\n        uploadStream.end(pdfBuffer);\n      });\n    } catch (error) {\n      throw new BadRequestException(`Erreur génération PDF: ${error.message}`);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReservationDto.html":{"url":"classes/ReservationDto.html","title":"class - ReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                etatPaiement\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                typeConsultation\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/reservation.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class ReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\ntypeConsultation: string ;\n@ApiProperty({\n  type: 'string',\n})\netatPaiement: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReservationModule.html":{"url":"modules/ReservationModule.html","title":"module - ReservationModule","body":"\n                   \n\n\n\n\n    Modules\n    ReservationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReservationModule\n\n\n\ncluster_ReservationModule_providers\n\n\n\ncluster_ReservationModule_exports\n\n\n\n\nReservationDocumentService \n\nReservationDocumentService \n\n\n\nReservationService \n\nReservationService \n\n\n\nReservationModule\n\nReservationModule\n\nReservationDocumentService  -->\n\nReservationModule->ReservationDocumentService \n\n\n\nReservationService  -->\n\nReservationModule->ReservationService \n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nReservationModule -->\n\nCloudinaryService->ReservationModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nReservationModule -->\n\nPrismaService->ReservationModule\n\n\n\n\n\nReservationDocumentService\n\nReservationDocumentService\n\nReservationModule -->\n\nReservationDocumentService->ReservationModule\n\n\n\n\n\nReservationService\n\nReservationService\n\nReservationModule -->\n\nReservationService->ReservationModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nReservationModule -->\n\nResponseService->ReservationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reservation/reservation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CloudinaryService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            ReservationDocumentService\n                        \n                        \n                            ReservationService\n                        \n                        \n                            ResponseService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReservationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReservationDocumentService\n                        \n                        \n                            ReservationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/reservation/reservation.module.ts\nimport { Module } from '@nestjs/common';\nimport { ReservationService } from './reservation.service';\nimport { ReservationController } from './reservation.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { ReservationDocumentService } from './reservation-document/reservation-document.service';\nimport { CloudinaryService } from '../upload/cloudinary/cloudinary.service';\n\n\n@Module({\n  controllers: [ReservationController],\n  providers: [\n    ReservationService,\n    ReservationDocumentService, // Ajouté ici\n    PrismaService,\n    ResponseService,\n    CloudinaryService, // Si nécessaire\n  ],\n  imports: [],\n  exports: [ReservationService, ReservationDocumentService], // Exporter ReservationDocumentService\n})\nexport class ReservationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReservationService.html":{"url":"injectables/ReservationService.html","title":"injectable - ReservationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservation/reservation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                cancel\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, response: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/reservation/reservation.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        cancel\n                        \n                    \n                \n            \n            \n                \n                        \n                    cancel(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation.service.ts:237\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateReservationDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateReservationDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/reservation/reservation.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, NotFoundException, ForbiddenException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateReservationDto } from './dto/create-reservation.dto';\nimport { UpdateReservationDto } from './dto/update-reservation.dto';\n\n@Injectable()\nexport class ReservationService {\n  constructor(\n    private prisma: PrismaService,\n    private response: ResponseService,\n  ) {}\n\n  async create(dto: CreateReservationDto, currentUser: any) {\n    // Vérifier l'utilisateur\n    const utilisateur = await this.prisma.utilisateur.findUnique({\n      where: { id: currentUser.id },\n    });\n    if (!utilisateur) {\n      throw new NotFoundException(this.response.notFound('Utilisateur introuvable'));\n    }\n\n    // Vérifier le medecinSousService\n    const medecinSousService = await this.prisma.medecinSousService.findUnique({\n      where: { id: dto.idMedecinSousService },\n      include: {\n        medecin: true,\n        sousService: {\n          include: {\n            tarifs: {\n              where: { actif: true },\n              include: { devise: true },\n            },\n          },\n        },\n        disponibilites: true,\n      },\n    });\n    if (!medecinSousService) {\n      throw new NotFoundException(this.response.notFound('Médecin ou sous-service introuvable'));\n    }\n\n    // Vérifier le statut\n    const statut = await this.prisma.statutReservation.findUnique({\n      where: { id: dto.idStatutReservation },\n    });\n    if (!statut || statut.libelle !== 'PENDING') {\n      throw new ConflictException(this.response.conflict('Statut initial doit être PENDING'));\n    }\n\n    // Vérifier la disponibilité\n    const dateReservation = new Date(dto.date);\n    const jourSemaine = dateReservation.toLocaleString('fr-FR', { weekday: 'long' }).toLowerCase();\n    const heureDebut = dto.heureDebut;\n    const heureFin = dto.heureFin;\n\n    const disponibilite = medecinSousService.disponibilites.find(\n      (disp) =>\n        disp.jourSemaine.toLowerCase() === jourSemaine &&\n        disp.heureDebut = heureFin,\n    );\n\n    if (!disponibilite) {\n      throw new ConflictException(this.response.conflict('Médecin non disponible à cette heure'));\n    }\n\n    // Vérifier les chevauchements\n    const existingReservation = await this.prisma.reservation.findFirst({\n      where: {\n        idMedecinSousService: dto.idMedecinSousService,\n        date: { equals: new Date(dto.date) },\n        OR: [\n          { heureDebut: { gte: heureDebut, lte: heureFin } },\n          { heureFin: { gte: heureDebut, lte: heureFin } },\n        ],\n      },\n    });\n\n    if (existingReservation) {\n      throw new ConflictException(this.response.conflict('Créneau déjà réservé'));\n    }\n\n    // Créer la réservation\n    const reservation = await this.prisma.reservation.create({\n      data: {\n        idMedecinSousService: dto.idMedecinSousService,\n        idUtilisateur: currentUser.id,\n        idStatutReservation: dto.idStatutReservation,\n        typeConsultation: dto.typeConsultation,\n        date: new Date(dto.date),\n        heureDebut: dto.heureDebut,\n        heureFin: dto.heureFin,\n        etatPaiement: 'PENDING',\n      },\n      include: {\n        medecinSousService: { include: { sousService: true, medecin: true } },\n        statutReservation: true,\n      },\n    });\n\n    return this.response.created(reservation, 'Réservation créée, en attente de paiement');\n  }\n\n  async findAll(currentUser: any) {\n    const where =\n      currentUser.privilege?.libelle === 'Admin'\n        ? {}\n        : { idUtilisateur: currentUser.id };\n\n    const reservations = await this.prisma.reservation.findMany({\n      where,\n      include: {\n        medecinSousService: { include: { sousService: true, medecin: true } },\n        statutReservation: true,\n        paiement: true,\n      },\n    });\n\n    return this.response.success(reservations, 'Réservations récupérées');\n  }\n\n  async findOne(id: number, currentUser: any) {\n    const reservation = await this.prisma.reservation.findUnique({\n      where: { id },\n      include: {\n        medecinSousService: { include: { sousService: true, medecin: true } },\n        statutReservation: true,\n        paiement: true,\n      },\n    });\n\n    if (!reservation) {\n      throw new NotFoundException(this.response.notFound('Réservation introuvable'));\n    }\n\n    if (\n      reservation.idUtilisateur !== currentUser.id &&\n      currentUser.privilege?.libelle !== 'Admin'\n    ) {\n      throw new ForbiddenException(this.response.forbidden('Accès non autorisé'));\n    }\n\n    return this.response.success(reservation, 'Réservation récupérée');\n  }\n\n  async update(id: number, dto: UpdateReservationDto, currentUser: any) {\n    const reservation = await this.prisma.reservation.findUnique({\n      where: { id },\n      include: { statutReservation: true },\n    });\n\n    if (!reservation) {\n      throw new NotFoundException(this.response.notFound('Réservation introuvable'));\n    }\n\n    if (\n      reservation.idUtilisateur !== currentUser.id &&\n      currentUser.privilege?.libelle !== 'Admin'\n    ) {\n      throw new ForbiddenException(this.response.forbidden('Accès non autorisé'));\n    }\n\n    if (reservation.statutReservation.libelle !== 'PENDING') {\n      throw new ConflictException(this.response.conflict('Réservation non modifiable'));\n    }\n\n    const data: any = {};\n    if (dto.idMedecinSousService) {\n      const medecinSousService = await this.prisma.medecinSousService.findUnique({\n        where: { id: dto.idMedecinSousService },\n        include: { disponibilites: true },\n      });\n      if (!medecinSousService) {\n        throw new NotFoundException(this.response.notFound('Médecin ou sous-service introuvable'));\n      }\n      data.idMedecinSousService = dto.idMedecinSousService;\n\n      // Vérifier la disponibilité si la date ou l'heure change\n      if (dto.date || dto.heureDebut || dto.heureFin) {\n        const date = dto.date ? new Date(dto.date) : new Date(reservation.date);\n        const heureDebut = dto.heureDebut || reservation.heureDebut;\n        const heureFin = dto.heureFin || reservation.heureFin;\n        const jourSemaine = date.toLocaleString('fr-FR', { weekday: 'long' }).toLowerCase();\n\n        const disponibilite = medecinSousService.disponibilites.find(\n          (disp) =>\n            disp.jourSemaine.toLowerCase() === jourSemaine &&\n            disp.heureDebut = heureFin,\n        );\n\n        if (!disponibilite) {\n          throw new ConflictException(this.response.conflict('Médecin non disponible à cette heure'));\n        }\n\n        // Vérifier les chevauchements\n        const existingReservation = await this.prisma.reservation.findFirst({\n          where: {\n            id: { not: id },\n            idMedecinSousService: dto.idMedecinSousService,\n            date: { equals: date },\n            OR: [\n              { heureDebut: { gte: heureDebut, lte: heureFin } },\n              { heureFin: { gte: heureDebut, lte: heureFin } },\n            ],\n          },\n        });\n\n        if (existingReservation) {\n          throw new ConflictException(this.response.conflict('Créneau déjà réservé'));\n        }\n\n        data.date = date;\n        data.heureDebut = heureDebut;\n        data.heureFin = heureFin;\n      }\n    }\n\n    if (dto.typeConsultation) {\n      data.typeConsultation = dto.typeConsultation;\n    }\n\n    const updatedReservation = await this.prisma.reservation.update({\n      where: { id },\n      data,\n      include: {\n        medecinSousService: { include: { sousService: true, medecin: true } },\n        statutReservation: true,\n      },\n    });\n\n    return this.response.success(updatedReservation, 'Réservation mise à jour');\n  }\n\n  async cancel(id: number, currentUser: any) {\n    const reservation = await this.prisma.reservation.findUnique({\n      where: { id },\n      include: { statutReservation: true, paiement: true },\n    });\n\n    if (!reservation) {\n      throw new NotFoundException(this.response.notFound('Réservation introuvable'));\n    }\n\n    if (\n      reservation.idUtilisateur !== currentUser.id &&\n      currentUser.privilege?.libelle !== 'Admin'\n    ) {\n      throw new ForbiddenException(this.response.forbidden('Accès non autorisé'));\n    }\n\n    if (reservation.statutReservation.libelle === 'CANCELLED') {\n      throw new ConflictException(this.response.conflict('Réservation déjà annulée'));\n    }\n\n    const cancelledStatut = await this.prisma.statutReservation.findFirst({\n      where: { libelle: 'CANCELLED' },\n    });\n    if (!cancelledStatut) {\n      throw new NotFoundException(this.response.notFound('Statut CANCELLED introuvable'));\n    }\n\n    const updatedReservation = await this.prisma.reservation.update({\n      where: { id },\n      data: {\n        idStatutReservation: cancelledStatut.id,\n        etatPaiement: 'CANCELLED',\n        qrCodeUrl: null,\n        pdfUrl: null,\n      },\n      include: {\n        medecinSousService: { include: { sousService: true, medecin: true } },\n        statutReservation: true,\n      },\n    });\n\n    return this.response.success(updatedReservation, 'Réservation annulée');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'john.doe@example.com'})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/reset-password.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @ApiProperty({ example: 'john.doe@example.com' })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/exception/response/response.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Response {\n  statusCode: number;\n  message: string;\n  data?: T;\n  errors?: string[];\n  timestamp?: string;\n  path?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseService.html":{"url":"injectables/ResponseService.html","title":"injectable - ResponseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/exception/response/response.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                badRequest\n                            \n                            \n                                conflict\n                            \n                            \n                                created\n                            \n                            \n                                error\n                            \n                            \n                                forbidden\n                            \n                            \n                                internalError\n                            \n                            \n                                notFound\n                            \n                            \n                                success\n                            \n                            \n                                unauthorized\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        badRequest\n                        \n                    \n                \n            \n            \n                \nbadRequest(errors: string[], message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                errors\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Requête invalide'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        conflict\n                        \n                    \n                \n            \n            \n                \nconflict(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Conflit détecté'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created\n                        \n                    \n                \n            \n            \n                \ncreated(data: T, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Ressource créée avec succès'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Erreur interne du serveur'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forbidden\n                        \n                    \n                \n            \n            \n                \nforbidden(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Accès interdit'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        internalError\n                        \n                    \n                \n            \n            \n                \ninternalError(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Erreur interne du serveur'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notFound\n                        \n                    \n                \n            \n            \n                \nnotFound(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Ressource non trouvée'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(data: T, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:6\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Opération réussie'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthorized\n                        \n                    \n                \n            \n            \n                \nunauthorized(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/validation/exception/response/response.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'Non autorisé'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Response } from './response.interface';\n\n@Injectable()\nexport class ResponseService {\n  success(data: T, message = 'Opération réussie'): Response {\n    return {\n      statusCode: 200,\n      message,\n      data,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  created(data: T, message = 'Ressource créée avec succès'): Response {\n    return {\n      statusCode: 201,\n      message,\n      data,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  badRequest(errors: string[], message = 'Requête invalide'): Response {\n    return {\n      statusCode: 400,\n      message,\n      errors,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  forbidden(message = 'Accès interdit'): Response {\n    return {\n      statusCode: 403,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  notFound(message = 'Ressource non trouvée'): Response {\n    return {\n      statusCode: 404,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  internalError(message = 'Erreur interne du serveur'): Response {\n    return {\n      statusCode: 500,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  conflict(message = 'Conflit détecté'): Response {\n    return {\n      statusCode: 409,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n\n\n  error(message = 'Erreur interne du serveur'): Response {\n    return {\n      statusCode: 500,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n  unauthorized(message = 'Non autorisé'): Response {\n    return {\n      statusCode: 401,\n      message,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Service.html":{"url":"classes/Service.html","title":"class - Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/service.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                sousServices\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sousServices\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SousService[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SousService, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {SousService} from './sousService.entity'\n\n\nexport class Service {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: () => SousService,\n  isArray: true,\n  required: false,\n})\nsousServices?: SousService[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServiceController.html":{"url":"controllers/ServiceController.html","title":"controller - ServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req, createServiceDto: CreateServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: CreateServiceDto})\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateServiceDto: UpdateServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n                    \n                        \n                            Defined in src/service/service.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServiceDto\n                                            \n                                                            UpdateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UploadedFile, UseInterceptors, UseGuards, Request } from '@nestjs/common';\nimport { ServiceService } from './service.service';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { ApiTags, ApiBearerAuth, ApiConsumes, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Services')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('services')\nexport class ServiceController {\n  constructor(private readonly serviceService: ServiceService) {}\n\n\n  @Post()\n\n  @UseInterceptors(FileInterceptor('iconUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: CreateServiceDto })\n  create(@Request() req, @Body() createServiceDto: CreateServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.serviceService.create(createServiceDto, file, req.user);\n  }\n\n  @Get()\n  findAll() {\n    return this.serviceService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.serviceService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  update(@Param('id') id: string, @Body() updateServiceDto: UpdateServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.serviceService.update(+id, updateServiceDto, file);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.serviceService.remove(+id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceDto.html":{"url":"classes/ServiceDto.html","title":"class - ServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/service.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class ServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServiceModule.html":{"url":"modules/ServiceModule.html","title":"module - ServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    ServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_exports\n\n\n\ncluster_ServiceModule_imports\n\n\n\ncluster_ServiceModule_providers\n\n\n\n\nUploadModule\n\nUploadModule\n\n\n\nServiceModule\n\nServiceModule\n\nServiceModule -->\n\nUploadModule->ServiceModule\n\n\n\n\n\nServiceService \n\nServiceService \n\nServiceService  -->\n\nServiceModule->ServiceService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nServiceModule -->\n\nPrismaService->ServiceModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nServiceModule -->\n\nResponseService->ServiceModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nServiceModule -->\n\nServiceService->ServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/service/service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            ServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ServiceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServiceController } from './service.controller';\nimport { ServiceService } from './service.service';\nimport { UploadModule } from '../upload/upload.module';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Module({\n  controllers: [ServiceController],\n  imports: [UploadModule], // Import du module contenant UploadService\n  providers: [ServiceService, PrismaService, ResponseService],\n  exports: [ServiceService],\n})\nexport class ServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServiceService.html":{"url":"injectables/ServiceService.html","title":"injectable - ServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, uploadService: FileStorageService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/service/service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createServiceDto: CreateServiceDto, file?: Express.Multer.File, currentUser?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createServiceDto\n                                            \n                                                            CreateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateServiceDto: UpdateServiceDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateServiceDto\n                                            \n                                                            UpdateServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/service/service.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException, UnauthorizedException, ConflictException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateServiceDto } from './dto/create-service.dto';\nimport { UpdateServiceDto } from './dto/update-service.dto';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\n\n@Injectable()\nexport class ServiceService {\n  constructor(\n    private readonly prisma: PrismaService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService, // Injection avec token\n    private readonly responseService: ResponseService\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n        this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n\n\n    }\n  }\n\n  async create(createServiceDto: CreateServiceDto, file?: Express.Multer.File, currentUser?: any) {\n    await this.verifyAdmin(currentUser);\n    // Vérification si le libellé existe déjà\n    const existingService = await this.prisma.service.findFirst({\n      where: { libelle: createServiceDto.libelle, deletedAt: null },\n    });\n\n    if (existingService) {\n      throw new ConflictException(this.responseService.conflict(`Un service avec le libellé \"${createServiceDto.libelle}\" existe déjà.`));\n    }\n\n    let iconUrl = createServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const service = await this.prisma.service.create({ data: { libelle: createServiceDto.libelle, iconUrl } });\n    return this.responseService.created(service, 'Service créé avec succès');\n  }\n\n  async findAll() {\n    const services = await this.prisma.service.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(services, 'Liste des services récupérée');\n  }\n\n  async findOne(id: number) {\n    const service = await this.prisma.service.findUnique({ where: { id, deletedAt: null } });\n    if (!service) throw new ConflictException(this.responseService.conflict(`Service #${id} introuvable`));\n    return this.responseService.success(service, 'Service récupéré');\n  }\n\n  async update(id: number, updateServiceDto: UpdateServiceDto, file?: Express.Multer.File) {\n    let iconUrl = updateServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const updatedService = await this.prisma.service.update({ where: { id }, data: { ...updateServiceDto, iconUrl } });\n    return this.responseService.success(updatedService, 'Service mis à jour');\n  }\n\n  async remove(id: number) {\n    await this.prisma.service.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, 'Service supprimé (soft delete)');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SousService.html":{"url":"classes/SousService.html","title":"class - SousService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SousService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/sousService.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idService\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                medecins\n                            \n                            \n                                    \n                                    Optional\n                                service\n                            \n                            \n                                    \n                                    Optional\n                                tarifs\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medecins\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedecinSousService[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Service\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Service, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        tarifs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tarif[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Tarif, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Service} from './service.entity'\nimport {MedecinSousService} from './medecinSousService.entity'\nimport {Tarif} from './tarif.entity'\n\n\nexport class SousService {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidService: number ;\n@ApiProperty({\n  type: () => Service,\n  required: false,\n})\nservice?: Service ;\n@ApiProperty({\n  type: () => MedecinSousService,\n  isArray: true,\n  required: false,\n})\nmedecins?: MedecinSousService[] ;\n@ApiProperty({\n  type: () => Tarif,\n  isArray: true,\n  required: false,\n})\ntarifs?: Tarif[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SousServiceController.html":{"url":"controllers/SousServiceController.html","title":"controller - SousServiceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SousServiceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/sous-service.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sous-services\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByServiceId\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req, createSousServiceDto: CreateSousServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({type: CreateSousServiceDto})\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createSousServiceDto\n                                            \n                                                            CreateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiConsumes('application/json')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByServiceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByServiceId(idService: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('by-service/:idService')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idService\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSousServiceDto: UpdateSousServiceDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n                    \n                        \n                            Defined in src/sous-service/sous-service.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSousServiceDto\n                                            \n                                                            UpdateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UploadedFile, UseInterceptors, UseGuards, Request } from '@nestjs/common';\nimport { SousServiceService } from './sous-service.service';\nimport { CreateSousServiceDto } from './dto/create-sous-service.dto';\nimport { UpdateSousServiceDto } from './dto/update-sous-service.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { ApiTags, ApiBearerAuth, ApiConsumes, ApiBody } from '@nestjs/swagger';\n\n@ApiTags('Sous-Services')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('sous-services')\nexport class SousServiceController {\n  constructor(private readonly sousServiceService: SousServiceService) {}\n\n  @Post()\n  @UseInterceptors(FileInterceptor('iconUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({ type: CreateSousServiceDto })\n  create(@Request() req, @Body() createSousServiceDto: CreateSousServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.sousServiceService.create(createSousServiceDto, file, req.user);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.sousServiceService.findOne(+id);\n  }\n\n  @Get('by-service/:idService')\n  findByServiceId(@Param('idService') idService: string) {\n    return this.sousServiceService.findByServiceId((+idService));\n  }\n\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  update(@Param('id') id: string, @Body() updateSousServiceDto: UpdateSousServiceDto, @UploadedFile() file?: Express.Multer.File) {\n    return this.sousServiceService.update(+id, updateSousServiceDto, file);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.sousServiceService.remove(+id);\n  }\n\n@Get()\n@ApiConsumes( 'application/json' )\nfindAll() {\n  return this.sousServiceService.findAll();\n}\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SousServiceDto.html":{"url":"classes/SousServiceDto.html","title":"class - SousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/sousService.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class SousServiceDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SousServiceModule.html":{"url":"modules/SousServiceModule.html","title":"module - SousServiceModule","body":"\n                   \n\n\n\n\n    Modules\n    SousServiceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SousServiceModule\n\n\n\ncluster_SousServiceModule_providers\n\n\n\ncluster_SousServiceModule_exports\n\n\n\ncluster_SousServiceModule_imports\n\n\n\n\nUploadModule\n\nUploadModule\n\n\n\nSousServiceModule\n\nSousServiceModule\n\nSousServiceModule -->\n\nUploadModule->SousServiceModule\n\n\n\n\n\nSousServiceService \n\nSousServiceService \n\nSousServiceService  -->\n\nSousServiceModule->SousServiceService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nSousServiceModule -->\n\nPrismaService->SousServiceModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nSousServiceModule -->\n\nResponseService->SousServiceModule\n\n\n\n\n\nSousServiceService\n\nSousServiceService\n\nSousServiceModule -->\n\nSousServiceService->SousServiceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sous-service/sous-service.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            SousServiceService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SousServiceController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SousServiceService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SousServiceService } from './sous-service.service';\nimport { SousServiceController } from './sous-service.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { UploadModule } from '../upload/upload.module';\n\n@Module({\n  imports: [UploadModule],\n  providers: [SousServiceService, PrismaService, ResponseService],\n  controllers: [SousServiceController],\n  exports: [SousServiceService],\n})\nexport class SousServiceModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SousServiceService.html":{"url":"injectables/SousServiceService.html","title":"injectable - SousServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SousServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/sous-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByServiceId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, uploadService: FileStorageService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/sous-service/sous-service.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSousServiceDto: CreateSousServiceDto, file?: Express.Multer.File, currentUser?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSousServiceDto\n                                            \n                                                            CreateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByServiceId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByServiceId(idService: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idService\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSousServiceDto: UpdateSousServiceDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSousServiceDto\n                                            \n                                                            UpdateSousServiceDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/sous-service/sous-service.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException, UnauthorizedException, ConflictException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateSousServiceDto } from './dto/create-sous-service.dto';\nimport { UpdateSousServiceDto } from './dto/update-sous-service.dto';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\n\n@Injectable()\nexport class SousServiceService {\n  constructor(\n    private readonly prisma: PrismaService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService, // Injection avec token\n    private readonly responseService: ResponseService\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n\n  }\n\n\n  async create(createSousServiceDto: CreateSousServiceDto, file?: Express.Multer.File, currentUser?: any) {\n    await this.verifyAdmin(currentUser);\n\n    const service = await this.prisma.service.findUnique({ where: { id: createSousServiceDto. idService, deletedAt: null } });\n    if (!service) {\n      throw new NotFoundException(this.responseService.notFound(`Service #${createSousServiceDto. idService} introuvable`));\n    }\n    const existingService = await this.prisma.sousService.findFirst({\n      where: { libelle: createSousServiceDto.libelle, deletedAt: null },\n    });\n\n    if (existingService) {\n      throw new ConflictException(this.responseService.conflict(`Un service avec le libellé \"${createSousServiceDto.libelle}\" existe déjà.`));\n    }\n\n    let iconUrl = createSousServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'sous-services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const sousService = await this.prisma.sousService.create({ data: { ...createSousServiceDto, iconUrl } });\n    return this.responseService.created(sousService, 'Sous-service créé avec succès');\n  }\n\n  async findOne(id: number) {\n    const sousService = await this.prisma.sousService.findUnique({ where: { id, deletedAt: null } });\n    if (!sousService) throw new NotFoundException(this.responseService.notFound(`Sous-service #${id} introuvable`));\n    return this.responseService.success(sousService, 'Sous-service récupéré');\n  }\n\n  async update(id: number, updateSousServiceDto: UpdateSousServiceDto, file?: Express.Multer.File) {\n    let iconUrl = updateSousServiceDto.iconUrl;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'sous-services-icons');\n      iconUrl = uploadResult.url;\n    }\n    const updatedSousService = await this.prisma.sousService.update({ where: { id }, data: { ...updateSousServiceDto, iconUrl } });\n    return this.responseService.success(updatedSousService, 'Sous-service mis à jour');\n  }\n\n  async remove(id: number) {\n    await this.prisma.sousService.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, 'Sous-service supprimé (soft delete)');\n  }\n  async findByServiceId(idService: number) {\n    const sousServices = await this.prisma.sousService.findMany({\n      where: {\n        idService,\n        deletedAt: null,\n      },\n    });\n\n    return this.responseService.success(\n      sousServices,\n      `Sous-services du service #${idService} récupérés avec succès.`,\n    );\n  }\n  async findAll() {\n    const sousServices = await this.prisma.sousService.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(sousServices, 'Liste des sous-services récupérée');\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatutReservation.html":{"url":"classes/StatutReservation.html","title":"class - StatutReservation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatutReservation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/statutReservation.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                reservations\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.entity.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Reservation} from './reservation.entity'\n\n\nexport class StatutReservation {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: () => Reservation,\n  isArray: true,\n  required: false,\n})\nreservations?: Reservation[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatutReservationController.html":{"url":"controllers/StatutReservationController.html","title":"controller - StatutReservationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatutReservationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/statut-reservation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                statuts-reservation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateStatutReservationDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiConsumes('application/json')@ApiOperation({summary: 'Créer un nouveau statut de réservation'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Afficher tous les statuts de réservation actifs'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Afficher un statut de réservation par ID'})@ApiParam({name: 'id', type: 'number', description: 'ID du statut à récupérer'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un statut de réservation (soft delete)'})@ApiParam({name: 'id', type: 'number', description: 'ID du statut à supprimer'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateStatutReservationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiConsumes('application/json')@ApiOperation({summary: 'Modifier un statut de réservation par ID'})@ApiParam({name: 'id', type: 'number', description: 'ID du statut à modifier'})\n                \n            \n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, Request } from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { StatutReservationService } from './statut-reservation.service';\nimport { CreateStatutReservationDto } from './dto/create-statut-reservation.dto';\nimport { UpdateStatutReservationDto } from './dto/update-statut-reservation.dto';\nimport { ApiBearerAuth, ApiConsumes, ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Statuts de Réservation')\n@ApiBearerAuth('access-token')\n@UseGuards(JwtAuthGuard)\n@Controller('statuts-reservation')\nexport class StatutReservationController {\n  constructor(private readonly service: StatutReservationService) {}\n\n  @Post()\n  @ApiConsumes('application/json')\n  @ApiOperation({ summary: 'Créer un nouveau statut de réservation' })\n  create(@Body() dto: CreateStatutReservationDto, @Request() req) {\n    return this.service.create(dto, req.user);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Afficher tous les statuts de réservation actifs' })\n  findAll() {\n    return this.service.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Afficher un statut de réservation par ID' })\n  @ApiParam({ name: 'id', type: 'number', description: 'ID du statut à récupérer' })\n  findOne(@Param('id') id: string) {\n    return this.service.findOne(+id);\n  }\n\n  @Patch(':id')\n  @ApiConsumes('application/json')\n  @ApiOperation({ summary: 'Modifier un statut de réservation par ID' })\n  @ApiParam({ name: 'id', type: 'number', description: 'ID du statut à modifier' })\n  update(@Param('id') id: string, @Body() dto: UpdateStatutReservationDto) {\n    return this.service.update(+id, dto);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un statut de réservation (soft delete)' })\n  @ApiParam({ name: 'id', type: 'number', description: 'ID du statut à supprimer' })\n  remove(@Param('id') id: string) {\n    return this.service.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatutReservationDto.html":{"url":"classes/StatutReservationDto.html","title":"class - StatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                libelle\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/statutReservation.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class StatutReservationDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nlibelle: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatutReservationModule.html":{"url":"modules/StatutReservationModule.html","title":"module - StatutReservationModule","body":"\n                   \n\n\n\n\n    Modules\n    StatutReservationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatutReservationModule\n\n\n\ncluster_StatutReservationModule_providers\n\n\n\n\nStatutReservationService\n\nStatutReservationService\n\n\n\nStatutReservationModule\n\nStatutReservationModule\n\nStatutReservationModule -->\n\nStatutReservationService->StatutReservationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/statut-reservation/statut-reservation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatutReservationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatutReservationController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatutReservationService } from './statut-reservation.service';\nimport { StatutReservationController } from './statut-reservation.controller';\n\n@Module({\n  providers: [StatutReservationService],\n  controllers: [StatutReservationController],\n  imports: [],\n  exports: [],\n})\nexport class StatutReservationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatutReservationService.html":{"url":"injectables/StatutReservationService.html","title":"injectable - StatutReservationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StatutReservationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/statut-reservation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                verifyAdmin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/statut-reservation/statut-reservation.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateStatutReservationDto, currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, dto: UpdateStatutReservationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateStatutReservationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        verifyAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyAdmin(currentUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/statut-reservation/statut-reservation.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ConflictException, UnauthorizedException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateStatutReservationDto } from './dto/create-statut-reservation.dto';\nimport { UpdateStatutReservationDto } from './dto/update-statut-reservation.dto';\n\n@Injectable()\nexport class StatutReservationService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  private async verifyAdmin(currentUser: any) {\n    if (!currentUser) throw new UnauthorizedException(\"Non autorisé.\");\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { id: currentUser.id },\n      include: { privilege: true },\n    });\n    if (!user || user.privilege?.libelle !== 'Admin') {\n      this.responseService.forbidden(\"Seuls les administrateurs peuvent effectuer cette action.\");\n    }\n  }\n\n  async create(dto: CreateStatutReservationDto, currentUser: any) {\n    await this.verifyAdmin(currentUser);\n    const existing = await this.prisma.statutReservation.findFirst({\n      where: { libelle: dto.libelle, deletedAt: null },\n    });\n\n    if (existing) {\n      throw new ConflictException(this.responseService.conflict(\"Ce statut existe déjà.\"));\n    }\n\n    const created = await this.prisma.statutReservation.create({ data: dto });\n    return this.responseService.created(created, \"Statut créé\");\n  }\n\n  async findAll() {\n    const list = await this.prisma.statutReservation.findMany({ where: { deletedAt: null } });\n    return this.responseService.success(list);\n  }\n\n  async findOne(id: number) {\n    const item = await this.prisma.statutReservation.findUnique({ where: { id, deletedAt: null } });\n    return this.responseService.success(item);\n  }\n\n  async update(id: number, dto: UpdateStatutReservationDto) {\n    const updated = await this.prisma.statutReservation.update({\n      where: { id },\n      data: dto,\n    });\n    return this.responseService.success(updated, \"Mis à jour\");\n  }\n\n  async remove(id: number) {\n    await this.prisma.statutReservation.update({ where: { id }, data: { deletedAt: new Date() } });\n    return this.responseService.success(null, \"Supprimé (soft)\");\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tarif.html":{"url":"classes/Tarif.html","title":"class - Tarif","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tarif\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/tarif.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                devise\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idDevise\n                            \n                            \n                                    \n                                idSousService\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                    Optional\n                                sousService\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        devise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Devise\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Devise, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idDevise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SousService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => SousService, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.entity.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {SousService} from './sousService.entity'\nimport {Devise} from './devise.entity'\n\n\nexport class Tarif {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidSousService: number ;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidDevise: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: () => SousService,\n  required: false,\n})\nsousService?: SousService ;\n@ApiProperty({\n  type: () => Devise,\n  required: false,\n})\ndevise?: Devise ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TarifController.html":{"url":"controllers/TarifController.html","title":"controller - TarifController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TarifController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/tarif.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tarifs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                activate\n                            \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                deactivate\n                            \n                            \n                                    \n                                    \n                                    \n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findAllTarifsOfSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/activate')@ApiOperation({summary: 'Activer un tarif et désactiver les autres pour le même sous-service'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(dto: CreateTarifDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Créer un tarif'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deactivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    deactivate(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/deactivate')@ApiOperation({summary: 'Désactiver un tarif manuellement'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Supprimer un tarif'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(idSousService?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Récupérer tous les tarifs'})@ApiQuery({name: 'idSousService', required: false, type: Number})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idSousService\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAllTarifsOfSousService\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllTarifsOfSousService(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sous-service/:id/full')@ApiOperation({summary: 'Lister tous les tarifs (actifs + inactifs) d’un sous-service'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Récupérer un tarif par ID'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, dto: UpdateTarifDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Mettre à jour un tarif'})@ApiParam({name: 'id', type: 'number'})\n                \n            \n\n                    \n                        \n                            Defined in src/tarif/tarif.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            UpdateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Patch, Delete, Body, Param, Query } from '@nestjs/common';\nimport { TarifService } from './tarif.service';\nimport { CreateTarifDto } from './dto/create-tarif.dto';\nimport { UpdateTarifDto } from './dto/update-tarif.dto';\nimport { ApiTags, ApiOperation, ApiParam, ApiQuery } from '@nestjs/swagger';\n\n@ApiTags('Tarifs')\n@Controller('tarifs')\nexport class TarifController {\n  constructor(private readonly tarifService: TarifService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Créer un tarif' })\n  create(@Body() dto: CreateTarifDto) {\n    return this.tarifService.create(dto);\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Récupérer tous les tarifs' })\n  @ApiQuery({ name: 'idSousService', required: false, type: Number })\n  findAll(@Query('idSousService') idSousService?: string) {\n    if (idSousService) {\n      return this.tarifService.findAllBySousService(+idSousService);\n    }\n    return this.tarifService.findAll();\n  }\n\n  @Get('sous-service/:id/full')\n  @ApiOperation({ summary: 'Lister tous les tarifs (actifs + inactifs) d’un sous-service' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findAllTarifsOfSousService(@Param('id') id: string) {\n    return this.tarifService.findAllBySousServiceFull(+id);\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Récupérer un tarif par ID' })\n  @ApiParam({ name: 'id', type: 'number' })\n  findById(@Param('id') id: string) {\n    return this.tarifService.findById(+id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Mettre à jour un tarif' })\n  @ApiParam({ name: 'id', type: 'number' })\n  update(@Param('id') id: string, @Body() dto: UpdateTarifDto) {\n    return this.tarifService.update(+id, dto);\n  }\n\n  @Patch(':id/activate')\n  @ApiOperation({ summary: 'Activer un tarif et désactiver les autres pour le même sous-service' })\n  @ApiParam({ name: 'id', type: 'number' })\n  activate(@Param('id') id: string) {\n    return this.tarifService.activate(+id);\n  }\n\n  @Delete(':id')\n  @ApiOperation({ summary: 'Supprimer un tarif' })\n  @ApiParam({ name: 'id', type: 'number' })\n  delete(@Param('id') id: string) {\n    return this.tarifService.delete(+id);\n  }\n  @Patch(':id/deactivate')\n  @ApiOperation({ summary: 'Désactiver un tarif manuellement' })\n  @ApiParam({ name: 'id', type: 'number' })\n  deactivate(@Param('id') id: string) {\n    return this.tarifService.deactivate(+id);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TarifDto.html":{"url":"classes/TarifDto.html","title":"class - TarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                actif\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                montant\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/tarif.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class TarifDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'number',\n  format: 'float',\n})\nmontant: number ;\n@ApiProperty({\n  type: 'boolean',\n})\nactif: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TarifModule.html":{"url":"modules/TarifModule.html","title":"module - TarifModule","body":"\n                   \n\n\n\n\n    Modules\n    TarifModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TarifModule\n\n\n\ncluster_TarifModule_providers\n\n\n\n\nTarifService\n\nTarifService\n\n\n\nTarifModule\n\nTarifModule\n\nTarifModule -->\n\nTarifService->TarifModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tarif/tarif.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TarifService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TarifController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TarifService } from './tarif.service';\nimport { TarifController } from './tarif.controller';\nimport { ResponseService } from '../validation/exception/response/response.service';\n\n@Module({\n  providers: [TarifService],\n  controllers: [TarifController],\n  imports: [],\n  exports: [],\n})\nexport class TarifModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TarifService.html":{"url":"injectables/TarifService.html","title":"injectable - TarifService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TarifService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/tarif.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activate\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deactivate\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllBySousService\n                            \n                            \n                                    Async\n                                findAllBySousServiceFull\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService)\n                    \n                \n                        \n                            \n                                Defined in src/tarif/tarif.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        activate\n                        \n                    \n                \n            \n            \n                \n                        \n                    activate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createTarifDto: CreateTarifDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createTarifDto\n                                            \n                                                            CreateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deactivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    deactivate(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:261\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllBySousService\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllBySousService(idSousService: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idSousService\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllBySousServiceFull\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllBySousServiceFull(idSousService: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idSousService\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateTarifDto: UpdateTarifDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/tarif/tarif.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTarifDto\n                                            \n                                                            UpdateTarifDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { CreateTarifDto } from './dto/create-tarif.dto';\nimport { UpdateTarifDto } from './dto/update-tarif.dto';\n\n@Injectable()\nexport class TarifService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n  ) {}\n\n  async create(createTarifDto: CreateTarifDto) {\n    try {\n      const sousService = await this.prisma.sousService.findUnique({\n        where: { id: createTarifDto.idSousService },\n      });\n\n      if (!sousService) {\n        return this.responseService.badRequest([`Sous-service #${createTarifDto.idSousService} non trouvé.`]);\n      }\n\n      const devise = await this.prisma.devise.findUnique({\n        where: { id: createTarifDto.idDevise },\n      });\n\n      if (!devise) {\n        return this.responseService.badRequest([`Devise #${createTarifDto.idDevise} non trouvée.`]);\n      }\n\n      const existingTarif = await this.prisma.tarif.findFirst({\n        where: {\n          idSousService: createTarifDto.idSousService,\n          idDevise: createTarifDto.idDevise,\n          montant: createTarifDto.montant,\n          deletedAt: null,\n        },\n      });\n\n      if (existingTarif) {\n        return this.responseService.badRequest([\n          `Un tarif avec le montant ${createTarifDto.montant} existe déjà pour ce sous-service et cette devise.`,\n        ]);\n      }\n\n      return await this.prisma.$transaction(async (prisma) => {\n        if (createTarifDto.actif) {\n          await prisma.tarif.updateMany({\n            where: {\n              idSousService: createTarifDto.idSousService,\n              idDevise: createTarifDto.idDevise,\n              actif: true,\n            },\n            data: { actif: false },\n          });\n        }\n\n        const tarif = await prisma.tarif.create({\n          data: {\n            idSousService: createTarifDto.idSousService,\n            idDevise: createTarifDto.idDevise,\n            montant: createTarifDto.montant,\n            actif: createTarifDto.actif ?? true,\n          },\n          include: {\n            sousService: true,\n            devise: true,\n          },\n        });\n\n        return this.responseService.created(tarif, 'Tarif créé avec succès.');\n      });\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findAll() {\n    try {\n      const tarifs = await this.prisma.tarif.findMany({\n        include: {\n          sousService: true,\n          devise: true,\n        },\n      });\n      return this.responseService.success(tarifs, 'Tous les tarifs récupérés');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findAllBySousService(idSousService: number) {\n    try {\n      const sousService = await this.prisma.sousService.findUnique({\n        where: { id: idSousService },\n      });\n\n      if (!sousService) {\n        return this.responseService.badRequest([`Sous-service #${idSousService} non trouvé.`]);\n      }\n\n      const tarifs = await this.prisma.tarif.findMany({\n        where: {\n          idSousService,\n          actif: true,\n        },\n        include: {\n          devise: true,\n        },\n      });\n\n      return this.responseService.success(tarifs, `Tarifs actifs pour le sous-service #${idSousService} récupérés`);\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findAllBySousServiceFull(idSousService: number) {\n    try {\n      const sousService = await this.prisma.sousService.findUnique({\n        where: { id: idSousService },\n      });\n\n      if (!sousService) {\n        return this.responseService.badRequest([`Sous-service #${idSousService} non trouvé.`]);\n      }\n\n      const tarifs = await this.prisma.tarif.findMany({\n        where: {\n          idSousService,\n          deletedAt: null,\n        },\n        include: {\n          devise: true,\n        },\n      });\n\n      return this.responseService.success(tarifs, `Tous les tarifs (actifs et inactifs) pour le sous-service #${idSousService}`);\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async findById(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n        include: {\n          sousService: true,\n          devise: true,\n        },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      return this.responseService.success(tarif, 'Tarif récupéré');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async update(id: number, updateTarifDto: UpdateTarifDto) {\n    try {\n      const tarifExisting = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarifExisting) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      return await this.prisma.$transaction(async (prisma) => {\n        if (updateTarifDto.actif) {\n          await prisma.tarif.updateMany({\n            where: {\n              id: { not: id },\n              idSousService: updateTarifDto.idSousService || tarifExisting.idSousService,\n              idDevise: updateTarifDto.idDevise || tarifExisting.idDevise,\n              actif: true,\n            },\n            data: { actif: false },\n          });\n        }\n\n        const updatedTarif = await prisma.tarif.update({\n          where: { id },\n          data: updateTarifDto,\n          include: {\n            sousService: true,\n            devise: true,\n          },\n        });\n\n        return this.responseService.success(updatedTarif, 'Tarif mis à jour avec succès');\n      });\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async activate(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      return await this.prisma.$transaction(async (prisma) => {\n        await prisma.tarif.updateMany({\n          where: {\n            id: { not: id },\n            idSousService: tarif.idSousService,\n            idDevise: tarif.idDevise,\n            actif: true,\n          },\n          data: { actif: false },\n        });\n\n        const activatedTarif = await prisma.tarif.update({\n          where: { id },\n          data: { actif: true },\n          include: {\n            sousService: true,\n            devise: true,\n          },\n        });\n\n        return this.responseService.success(activatedTarif, 'Tarif activé avec succès.');\n      });\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n  async delete(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      await this.prisma.tarif.update({\n        where: { id },\n        data: { actif: false, deletedAt: new Date() },\n      });\n\n      return this.responseService.success(null, 'Tarif supprimé avec succès');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n  async deactivate(id: number) {\n    try {\n      const tarif = await this.prisma.tarif.findUnique({\n        where: { id },\n      });\n\n      if (!tarif) {\n        return this.responseService.notFound(`Tarif #${id} non trouvé.`);\n      }\n\n      if (!tarif.actif) {\n        return this.responseService.badRequest([`Le tarif #${id} est déjà inactif.`]);\n      }\n\n      const updated = await this.prisma.tarif.update({\n        where: { id },\n        data: { actif: false },\n        include: {\n          sousService: true,\n          devise: true,\n        },\n      });\n\n      return this.responseService.success(updated, 'Tarif désactivé avec succès.');\n    } catch (error) {\n      return this.responseService.error(error.message);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviseDto.html":{"url":"classes/UpdateDeviseDto.html","title":"class - UpdateDeviseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/devise/dto/update-devise.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDeviseDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateDeviseDto } from './create-devise.dto';\n\nexport class UpdateDeviseDto extends PartialType(CreateDeviseDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeviseDto-1.html":{"url":"classes/UpdateDeviseDto-1.html","title":"class - UpdateDeviseDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeviseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-devise.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                actif\n                            \n                            \n                                    \n                                    Optional\n                                code\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                            \n                                    \n                                    Optional\n                                symbole\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        symbole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-devise.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateDeviseDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\ncode?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nsymbole?: string ;\n@ApiProperty({\n  type: 'boolean',\n  required: false,\n})\nactif?: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDisponibiliteDto.html":{"url":"classes/UpdateDisponibiliteDto.html","title":"class - UpdateDisponibiliteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/disponibilite/dto/update-disponibilite.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateDisponibiliteDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateDisponibiliteDto } from './create-disponibilite.dto';\n\nexport class UpdateDisponibiliteDto extends PartialType(CreateDisponibiliteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDisponibiliteDto-1.html":{"url":"classes/UpdateDisponibiliteDto-1.html","title":"class - UpdateDisponibiliteDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDisponibiliteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-disponibilite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                heureDebut\n                            \n                            \n                                    \n                                    Optional\n                                heureFin\n                            \n                            \n                                    \n                                    Optional\n                                jourSemaine\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        jourSemaine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-disponibilite.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateDisponibiliteDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\njourSemaine?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nheureDebut?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nheureFin?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDossierMedicalDto.html":{"url":"classes/UpdateDossierMedicalDto.html","title":"class - UpdateDossierMedicalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDossierMedicalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-dossierMedical.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                dateMiseAJour\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                fichiers\n                            \n                            \n                                    \n                                    Optional\n                                historique\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dateMiseAJour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        fichiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        historique\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-dossierMedical.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateDossierMedicalDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nhistorique?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nfichiers?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n})\ndateMiseAJour?: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLogDto.html":{"url":"classes/UpdateLogDto.html","title":"class - UpdateLogDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLogDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-log.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                action\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-log.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-log.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-log.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateLogDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\naction?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nip?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMedecinSousServiceDto.html":{"url":"classes/UpdateMedecinSousServiceDto.html","title":"class - UpdateMedecinSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-medecinSousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-medecinSousService.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateMedecinSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMedecinSousServiceDto-1.html":{"url":"classes/UpdateMedecinSousServiceDto-1.html","title":"class - UpdateMedecinSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMedecinSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medecin-sousservice/dto/update-medecin-sous-service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                idMedecin\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                idSousService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        idMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/update-medecin-sous-service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        idSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medecin-sousservice/dto/update-medecin-sous-service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\n\nexport class UpdateMedecinSousServiceDto {\n  @IsInt()\n  @IsOptional()\n  idMedecin?: number;\n\n  @IsInt()\n  @IsOptional()\n  idSousService?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateModePaiementDto.html":{"url":"classes/UpdateModePaiementDto.html","title":"class - UpdateModePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-modePaiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-modePaiement.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-modePaiement.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-modePaiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateModePaiementDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nicon?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateModePaiementDto-1.html":{"url":"classes/UpdateModePaiementDto-1.html","title":"class - UpdateModePaiementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateModePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mode-paiement/dto/update-mode-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/update-mode-paiement.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du mode de paiement', example: 'MTN Mobile Money', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/mode-paiement/dto/update-mode-paiement.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateModePaiementDto {\n  @ApiProperty({ description: \"Libellé du mode de paiement\", example: \"MTN Mobile Money\", required: false })\n  @IsOptional()\n  @IsString()\n  libelle?: string;\n\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  icon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrdonnanceDto.html":{"url":"classes/UpdateOrdonnanceDto.html","title":"class - UpdateOrdonnanceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrdonnanceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-ordonnance.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                contenu\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-ordonnance.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-ordonnance.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateOrdonnanceDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\ncontenu?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaiementDto.html":{"url":"classes/UpdatePaiementDto.html","title":"class - UpdatePaiementDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-paiement.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                etatTransaction\n                            \n                            \n                                    \n                                    Optional\n                                montant\n                            \n                            \n                                    \n                                    Optional\n                                referenceTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        etatTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        referenceTransaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-paiement.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdatePaiementDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n  required: false,\n})\nmontant?: number ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nreferenceTransaction?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\netatTransaction?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaiementDto-1.html":{"url":"classes/UpdatePaiementDto-1.html","title":"class - UpdatePaiementDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaiementDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paiement/dto/update-paiement.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePaiementDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePaiementDto } from './create-paiement.dto';\n\nexport class UpdatePaiementDto extends PartialType(CreatePaiementDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrivilegeDto.html":{"url":"classes/UpdatePrivilegeDto.html","title":"class - UpdatePrivilegeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-privilege.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-privilege.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-privilege.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdatePrivilegeDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePrivilegeDto-1.html":{"url":"classes/UpdatePrivilegeDto-1.html","title":"class - UpdatePrivilegeDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePrivilegeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/privilege/dto/update-privilege.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePrivilegeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePrivilegeDto } from './create-privilege.dto';\n\nexport class UpdatePrivilegeDto extends PartialType(CreatePrivilegeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReservationDto.html":{"url":"classes/UpdateReservationDto.html","title":"class - UpdateReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                etatPaiement\n                            \n                            \n                                    \n                                    Optional\n                                typeConsultation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-reservation.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-reservation.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-reservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateReservationDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\ntypeConsultation?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\netatPaiement?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReservationDto-1.html":{"url":"classes/UpdateReservationDto-1.html","title":"class - UpdateReservationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reservation/dto/update-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                etatPaiement\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                heureDebut\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                heureFin\n                            \n                            \n                                    \n                                    \n                                idMedecinSousService\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                idStatutReservation\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                typeConsultation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Date de la réservation', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        etatPaiement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'État du paiement', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        heureDebut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Heure de début (HH:mm)', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        heureFin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Heure de fin (HH:mm)', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idMedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du médecin/sous-service'})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        idStatutReservation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID du statut de la réservation', required: false})@IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        typeConsultation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"physique\" | \"video\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type de consultation', enum: undefined, required: false})@IsOptional()@IsEnum(['physique', 'video'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/reservation/dto/update-reservation.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsInt, IsString, IsDateString, IsEnum } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateReservationDto {\n  @ApiProperty({ description: 'ID du statut de la réservation', required: false })\n  @IsOptional()\n  @IsInt()\n  idStatutReservation?: number;\n  @ApiProperty({ description: 'ID du médecin/sous-service' })\n  @IsInt()\n  idMedecinSousService: number;\n\n\n\n  @ApiProperty({ description: 'Type de consultation', enum: ['physique', 'video'], required: false })\n  @IsOptional()\n  @IsEnum(['physique', 'video'])\n  typeConsultation?: 'physique' | 'video';\n\n  @ApiProperty({ description: 'Date de la réservation', required: false })\n  @IsOptional()\n  @IsDateString()\n  date?: string;\n\n  @ApiProperty({ description: 'Heure de début (HH:mm)', required: false })\n  @IsOptional()\n  @IsString()\n  heureDebut?: string;\n\n  @ApiProperty({ description: 'Heure de fin (HH:mm)', required: false })\n  @IsOptional()\n  @IsString()\n  heureFin?: string;\n\n  @ApiProperty({ description: 'État du paiement', required: false })\n  @IsOptional()\n  @IsString()\n  etatPaiement?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto.html":{"url":"classes/UpdateServiceDto.html","title":"class - UpdateServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-service.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-service.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateServiceDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateServiceDto-1.html":{"url":"classes/UpdateServiceDto-1.html","title":"class - UpdateServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/service/dto/update-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL de l'icône mise à jour', example: 'https://exemple.com/icon.png', required: false})@ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/update-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du service', example: 'Radiologie', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/service/dto/update-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateServiceDto {\n  @ApiProperty({ description: \"Libellé du service\", example: \"Radiologie\", required: false })\n  @IsOptional()\n  libelle?: string;\n\n  @ApiProperty({ description: \"URL de l'icône mise à jour\", example: \"https://exemple.com/icon.png\", required: false })\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?: string;\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSousServiceDto.html":{"url":"classes/UpdateSousServiceDto.html","title":"class - UpdateSousServiceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-sousService.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-sousService.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-sousService.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateSousServiceDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSousServiceDto-1.html":{"url":"classes/UpdateSousServiceDto-1.html","title":"class - UpdateSousServiceDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSousServiceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sous-service/dto/update-sous-service.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                iconUrl\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'URL de l'icône du sous-service', example: 'https://exemple.com/icon.png', required: false})@ApiProperty({type: 'string', format: 'binary', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/update-sous-service.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du sous-service', example: 'Échographie', required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sous-service/dto/update-sous-service.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateSousServiceDto {\n  @ApiProperty({ description: \"Libellé du sous-service\", example: \"Échographie\", required: false })\n  @IsOptional()\n  libelle?: string;\n\n  @ApiProperty({ description: \"URL de l'icône du sous-service\", example: \"https://exemple.com/icon.png\", required: false })\n  @ApiProperty({ type: 'string', format: 'binary', required: false })\n  @IsOptional()\n  @IsString()\n  iconUrl?: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStatutReservationDto.html":{"url":"classes/UpdateStatutReservationDto.html","title":"class - UpdateStatutReservationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-statutReservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-statutReservation.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-statutReservation.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateStatutReservationDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nlibelle?: string ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStatutReservationDto-1.html":{"url":"classes/UpdateStatutReservationDto-1.html","title":"class - UpdateStatutReservationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStatutReservationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/statut-reservation/dto/update-statut-reservation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                libelle\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        libelle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Libellé du statut', example: 'Confirmée'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/statut-reservation/dto/update-statut-reservation.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateStatutReservationDto {\n  @ApiProperty({ description: 'Libellé du statut', example: 'Confirmée' })\n  @IsOptional()\n  @IsString()\n  libelle?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTarifDto.html":{"url":"classes/UpdateTarifDto.html","title":"class - UpdateTarifDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-tarif.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                actif\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                montant\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        actif\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'boolean', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-tarif.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-tarif.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        montant\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number', format: 'float', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-tarif.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateTarifDto {\n  @ApiProperty({\n  type: 'number',\n  format: 'float',\n  required: false,\n})\nmontant?: number ;\n@ApiProperty({\n  type: 'boolean',\n  required: false,\n})\nactif?: boolean ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTarifDto-1.html":{"url":"classes/UpdateTarifDto-1.html","title":"class - UpdateTarifDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTarifDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tarif/dto/update-tarif.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTarifDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTarifDto } from './create-tarif.dto';\n\nexport class UpdateTarifDto extends PartialType(CreateTarifDto) {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto.html":{"url":"classes/UpdateUtilisateurDto.html","title":"class - UpdateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/update-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                nom\n                            \n                            \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    Optional\n                                prenom\n                            \n                            \n                                    \n                                    Optional\n                                profil\n                            \n                            \n                                    \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/update-utilisateur.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\n\n\nexport class UpdateUtilisateurDto {\n  @ApiProperty({\n  type: 'string',\n  required: false,\n})\nnom?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nprenom?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\nemail?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\npassword?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n})\ntelephone?: string ;\n@ApiProperty({\n  type: 'string',\n  required: false,\n  nullable: true,\n})\nprofil?: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  required: false,\n  nullable: true,\n})\ndeletedAt?: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto-1.html":{"url":"classes/UpdateUtilisateurDto-1.html","title":"class - UpdateUtilisateurDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/dto/update-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                idPrivilege\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                nom\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                prenom\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                profil\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                profilUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'john@example.com'})@ValidateIf(o => )@IsOptional()@IsEmail({}, {message: 'L'email n'est pas valide'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 2})@ValidateIf(o => )@IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Doe'})@ValidateIf(o => )@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'NewPassword123!'})@ValidateIf(o => )@IsOptional()@MinLength(8, {message: 'Le mot de passe doit contenir au moins 8 caractères'})@Matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&]).{8,}$/, {message: 'Mot de passe trop faible'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'John'})@ValidateIf(o => )@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'Admin'})@ValidateIf(o => )@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        profilUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', format: 'binary'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '+221786360662'})@ValidateIf(o => )@IsOptional()@Matches(/^\\+?\\d{9,15}$/, {message: 'Le numéro de téléphone doit commencer par + et contenir entre 9 et 15 chiffres'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateur/dto/update-utilisateur.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsOptional,\n  IsString,\n  IsEmail,\n  MinLength,\n  Matches,\n  IsInt,\n  ValidateIf,\n} from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UpdateUtilisateurDto {\n  @ApiPropertyOptional({ example: 'John' })\n  @ValidateIf(o => o.prenom !== '')\n  @IsOptional()\n  @IsString()\n  prenom?: string;\n\n  @ApiPropertyOptional({ example: 'Doe' })\n  @ValidateIf(o => o.nom !== '')\n  @IsOptional()\n  @IsString()\n  nom?: string;\n\n  @ApiPropertyOptional({ example: 'john@example.com' })\n  @ValidateIf(o => o.email !== '')\n  @IsOptional()\n  @IsEmail({}, { message: \"L'email n'est pas valide\" })\n  email?: string;\n\n  @ApiPropertyOptional({ example: 'NewPassword123!' })\n  @ValidateIf(o => o.password !== '')\n  @IsOptional()\n  @MinLength(8, { message: 'Le mot de passe doit contenir au moins 8 caractères' })\n  @Matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&]).{8,}$/, {\n    message: 'Mot de passe trop faible',\n  })\n  password?: string;\n\n  @ApiPropertyOptional({ example: '+221786360662' })\n  @ValidateIf(o => o.telephone !== '')\n  @IsOptional()\n  @Matches(/^\\+?\\d{9,15}$/, {\n    message: \"Le numéro de téléphone doit commencer par + et contenir entre 9 et 15 chiffres\",\n  })\n  telephone?: string;\n\n  @ApiPropertyOptional({ example: 'Admin' })\n  @ValidateIf(o => o.profil !== '')\n  @IsOptional()\n  @IsString()\n  profil?: string;\n\n  @ApiPropertyOptional({ example: 2 })\n  @ValidateIf(o => o.idPrivilege !== '')\n  @IsOptional()\n  @IsInt()\n  idPrivilege?: number;\n\n  @ApiPropertyOptional({ type: 'string', format: 'binary' }) // ✅ pour Swagger\n  @IsOptional() // ✅ pour éviter une erreur si non envoyé\n  profilUrl?: any; // ✅ surtout pas @IsString()\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadModule.html":{"url":"modules/UploadModule.html","title":"module - UploadModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_providers\n\n\n\ncluster_UploadModule_exports\n\n\n\n\nUploadService \n\nUploadService \n\n\n\nUploadModule\n\nUploadModule\n\nUploadService  -->\n\nUploadModule->UploadService \n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nUploadModule -->\n\nCloudinaryService->UploadModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nUploadModule -->\n\nUploadService->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/upload/upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CloudinaryService\n                        \n                        \n                            UploadService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UploadService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { CloudinaryService } from './cloudinary/cloudinary.service';\nimport { UploadService } from './upload.service';\n\n@Global() // 👈 Ajoute ça ici\n@Module({\n  providers: [\n    UploadService,\n    CloudinaryService,\n    {\n      provide: 'UploadService',\n      useClass: process.env.STORAGE_SERVICE === 'local'\n        ? UploadService\n        : CloudinaryService,\n    },\n  ],\n  exports: ['UploadService'],\n})\nexport class UploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/upload/upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseDir\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Private\n                                    Async\n                                ensureDirectory\n                            \n                            \n                                    Private\n                                generateFileName\n                            \n                            \n                                uploadFile\n                            \n                            \n                                    Async\n                                uploadMultiple\n                            \n                            \n                                    Async\n                                uploadSingle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/upload/upload.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(filePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        ensureDirectory\n                        \n                    \n                \n            \n            \n                \n                        \n                    ensureDirectory(folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateFileName\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateFileName(originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(image: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadMultiple\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadMultiple(files: Express.Multer.File[], folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                files\n                                            \n                                                        Express.Multer.File[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadSingle\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadSingle(file: Express.Multer.File, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/upload/upload.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'hotel-chambres'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseDir\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/upload/upload.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UploadService.name)\n                    \n                \n                    \n                        \n                                Defined in src/upload/upload.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport {\n  FileStorageService,\n  FileUploadResult,\n} from './interfaces/upload.interface';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport * as crypto from 'crypto';\n@Injectable()\nexport class UploadService implements FileStorageService {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  uploadFile(image: Express.Multer.File) {\n    throw new Error('Method not implemented.');\n  }\n  private logger = new Logger(UploadService.name);\n  private baseDir: string;\n\n  constructor() {\n    this.baseDir = process.env.UPLOAD_DIR || 'uploads';\n  }\n\n  private async ensureDirectory(folder: string): Promise {\n    const dirPath = path.join(this.baseDir, folder);\n    await fs.mkdir(dirPath, { recursive: true });\n    return dirPath;\n  }\n\n  private generateFileName(originalName: string): string {\n    const ext = path.extname(originalName);\n    const hash = crypto.randomBytes(8).toString('hex');\n    return `${hash}${ext}`;\n  }\n\n  async uploadSingle(\n    file: Express.Multer.File,\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    const dirPath = await this.ensureDirectory(folder);\n    const fileName = this.generateFileName(file.originalname);\n    const filePath = path.join(dirPath, fileName);\n\n    try {\n      await fs.writeFile(filePath, file.buffer);\n      const relativePath = path.join(folder, fileName);\n\n      return {\n        url: `/uploads/${relativePath}`,\n        id: relativePath,\n      };\n    } catch (error) {\n      this.logger.error(\n        `Erreur lors de l'enregistrement du fichier: ${error.message}`,\n      );\n      throw error;\n    }\n  }\n\n  async uploadMultiple(\n    files: Express.Multer.File[],\n    folder: string = 'hotel-chambres',\n  ): Promise {\n    if (!files?.length) return [];\n\n    try {\n      return await Promise.all(\n        files.map((file) => this.uploadSingle(file, folder)),\n      );\n    } catch (error) {\n      this.logger.error(`Échec de l'upload batch: ${error.message}`);\n      throw error;\n    }\n  }\n  async deleteFile(filePath: string): Promise {\n    const fullPath = path.join(this.baseDir, filePath);\n    try {\n      await fs.unlink(fullPath);\n      this.logger.log(`🗑️ Fichier supprimé : ${filePath}`);\n    } catch (error) {\n      this.logger.warn(`⚠️ Impossible de supprimer le fichier : ${filePath}`);\n    }\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utilisateur.html":{"url":"classes/Utilisateur.html","title":"class - Utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/utilisateur.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                    Optional\n                                dossiers\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                idPrivilege\n                            \n                            \n                                    \n                                    Optional\n                                logs\n                            \n                            \n                                    \n                                    Optional\n                                MedecinSousService\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                    Optional\n                                ordonnancesMedecin\n                            \n                            \n                                    \n                                    Optional\n                                ordonnancesPatient\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                    Optional\n                                privilege\n                            \n                            \n                                    \n                                profil\n                            \n                            \n                                    \n                                    Optional\n                                reservations\n                            \n                            \n                                    \n                                telephone\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        dossiers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DossierMedical[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => DossierMedical, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idPrivilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Log[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Log, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        MedecinSousService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MedecinSousService[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => MedecinSousService, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ordonnancesMedecin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ordonnance[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Ordonnance, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        ordonnancesPatient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ordonnance[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Ordonnance, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        privilege\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Privilege\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Privilege, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        reservations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reservation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => Reservation, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.entity.ts:91\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\nimport {Privilege} from './privilege.entity'\nimport {Reservation} from './reservation.entity'\nimport {DossierMedical} from './dossierMedical.entity'\nimport {Log} from './log.entity'\nimport {Ordonnance} from './ordonnance.entity'\nimport {MedecinSousService} from './medecinSousService.entity'\n\n\nexport class Utilisateur {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nnom: string ;\n@ApiProperty({\n  type: 'string',\n})\nprenom: string ;\n@ApiProperty({\n  type: 'string',\n})\nemail: string ;\n@ApiProperty({\n  type: 'string',\n})\npassword: string ;\n@ApiProperty({\n  type: 'string',\n})\ntelephone: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nprofil: string  | null;\n@ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nidPrivilege: number ;\n@ApiProperty({\n  type: () => Privilege,\n  required: false,\n})\nprivilege?: Privilege ;\n@ApiProperty({\n  type: () => Reservation,\n  isArray: true,\n  required: false,\n})\nreservations?: Reservation[] ;\n@ApiProperty({\n  type: () => DossierMedical,\n  isArray: true,\n  required: false,\n})\ndossiers?: DossierMedical[] ;\n@ApiProperty({\n  type: () => Log,\n  isArray: true,\n  required: false,\n})\nlogs?: Log[] ;\n@ApiProperty({\n  type: () => Ordonnance,\n  isArray: true,\n  required: false,\n})\nordonnancesMedecin?: Ordonnance[] ;\n@ApiProperty({\n  type: () => Ordonnance,\n  isArray: true,\n  required: false,\n})\nordonnancesPatient?: Ordonnance[] ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n@ApiProperty({\n  type: () => MedecinSousService,\n  isArray: true,\n  required: false,\n})\nMedecinSousService?: MedecinSousService[] ;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utilisateur-1.html":{"url":"classes/Utilisateur-1.html","title":"class - Utilisateur-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/entities/utilisateur.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Utilisateur {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UtilisateurController.html":{"url":"controllers/UtilisateurController.html","title":"controller - UtilisateurController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UtilisateurController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/utilisateur.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                utilisateur\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findAllClients\n                            \n                            \n                                    \n                                    \n                                    \n                                findAllExceptClients\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findByEmail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(file: Express.Multer.File, createUtilisateurDto: CreateUtilisateurDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(OptionalJwtAuthGuard)@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Créer un utilisateur (admin ou inscription libre)'})@ApiResponse({status: 201, description: 'Utilisateur créé avec succès'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createUtilisateurDto\n                                            \n                                                            CreateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')@ApiOperation({summary: 'Lister tous les utilisateurs'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllClients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('Clients')\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAllExceptClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllExceptClients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('non-clients')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Lister tous les utilisateurs sauf ceux ayant le profil Client'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('email/:email')@ApiOperation({summary: 'Récupérer un utilisateur par email'})@ApiResponse({status: 200, description: 'Utilisateur trouvé'})@ApiResponse({status: 404, description: 'Utilisateur non trouvé'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')@ApiOperation({summary: 'Récupérer un utilisateur par ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')@ApiOperation({summary: 'Supprimer un utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, file: Express.Multer.File, updateUtilisateurDto: UpdateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(JwtAuthGuard)@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth('access-token')@ApiOperation({summary: 'Mettre à jour un utilisateur (tous champs optionnels)'})\n                \n            \n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUtilisateurDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Request,\n  UseInterceptors,\n  UploadedFile,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { UtilisateurService } from './utilisateur.service';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { ChangePrivilegeDto } from './dto/change-privilege.dto';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiBearerAuth,\n  ApiConsumes,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/jwt-auth/jwt-auth.guard';\nimport { OptionalJwtAuthGuard } from '../auth/optional-jwt-auth.guard';\nimport { Public } from '@prisma/client/runtime/library';\n\n@ApiTags('Utilisateurs')\n@Controller('utilisateur')\nexport class UtilisateurController {\n  constructor(private readonly utilisateurService: UtilisateurService) {}\n\n  @Post()\n  @UseGuards(OptionalJwtAuthGuard)\n  @UseInterceptors(FileInterceptor('profilUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Créer un utilisateur (admin ou inscription libre)' })\n  @ApiResponse({ status: 201, description: 'Utilisateur créé avec succès' })\n  create(\n    @UploadedFile() file: Express.Multer.File,\n    @Body() createUtilisateurDto: CreateUtilisateurDto,\n    @Request() req,\n  ) {\n    return this.utilisateurService.create(createUtilisateurDto, req.user, file);\n  }\n\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Lister tous les utilisateurs' })\n  findAll() {\n    return this.utilisateurService.findAll();\n  }\n  // ✅ NOUVEL ENDPOINT\n  @Get('non-clients')\n  //@UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Lister tous les utilisateurs sauf ceux ayant le profil Client' })\n  findAllExceptClients() {\n    return this.utilisateurService.findAllWithoutAdminsAndClients();\n  }\n  @Get('Clients')\n  //@ApiBearerAuth('access-token')\n  //@ApiOperation({ summary: 'Lister tous les utilisateurs sauf ceux ayant le profil Client' })\n  findAllClients() {\n    return this.utilisateurService.findAllClients();\n  }\n\n\n  @Get(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Récupérer un utilisateur par ID' })\n  findOne(@Param('id') id: string) {\n    return this.utilisateurService.findOne(+id);\n  }\n\n  @Patch(':id')\n  @UseGuards(JwtAuthGuard)\n  @UseInterceptors(FileInterceptor('profilUrl'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Mettre à jour un utilisateur (tous champs optionnels)' })\n  update(\n    @Param('id') id: string,\n    @UploadedFile() file: Express.Multer.File,\n    @Body() updateUtilisateurDto: UpdateUtilisateurDto,\n  ) {\n    return this.utilisateurService.update(+id, updateUtilisateurDto, file);\n  }\n  @Delete(':id')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  @ApiOperation({ summary: 'Supprimer un utilisateur' })\n  remove(@Param('id') id: string) {\n    return this.utilisateurService.remove(+id);\n  }\n  @Get('email/:email')\n  @ApiOperation({ summary: 'Récupérer un utilisateur par email' })\n  @ApiResponse({ status: 200, description: 'Utilisateur trouvé' })\n  @ApiResponse({ status: 404, description: \"Utilisateur non trouvé\" })\n  findByEmail(@Param('email') email: string) {\n    return this.utilisateurService.findUtilisateurByEmail(email);\n  }\n\n  // ← uniquement si tu utilises un guard global, mais dans ton cas pas nécessaire\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UtilisateurDto.html":{"url":"classes/UtilisateurDto.html","title":"class - UtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generated/nestjs-dto/utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                nom\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                prenom\n                            \n                            \n                                    \n                                profil\n                            \n                            \n                                    \n                                telephone\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'integer', format: 'int32'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        profil\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generated/nestjs-dto/utilisateur.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ApiProperty} from '@nestjs/swagger'\n\n\nexport class UtilisateurDto {\n  @ApiProperty({\n  type: 'integer',\n  format: 'int32',\n})\nid: number ;\n@ApiProperty({\n  type: 'string',\n})\nnom: string ;\n@ApiProperty({\n  type: 'string',\n})\nprenom: string ;\n@ApiProperty({\n  type: 'string',\n})\nemail: string ;\n@ApiProperty({\n  type: 'string',\n})\npassword: string ;\n@ApiProperty({\n  type: 'string',\n})\ntelephone: string ;\n@ApiProperty({\n  type: 'string',\n  nullable: true,\n})\nprofil: string  | null;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\ncreatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n})\nupdatedAt: Date ;\n@ApiProperty({\n  type: 'string',\n  format: 'date-time',\n  nullable: true,\n})\ndeletedAt: Date  | null;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilisateurModule.html":{"url":"modules/UtilisateurModule.html","title":"module - UtilisateurModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilisateurModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_imports\n\n\n\ncluster_UtilisateurModule_exports\n\n\n\ncluster_UtilisateurModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nUtilisateurModule -->\n\nAuthModule->UtilisateurModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nUtilisateurModule -->\n\nUploadModule->UtilisateurModule\n\n\n\n\n\nUtilisateurService \n\nUtilisateurService \n\nUtilisateurService  -->\n\nUtilisateurModule->UtilisateurService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUtilisateurModule -->\n\nPrismaService->UtilisateurModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilisateur/utilisateur.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UtilisateurService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UtilisateurController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UploadModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UtilisateurService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UtilisateurService } from './utilisateur.service';\nimport { UtilisateurController } from './utilisateur.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { AuthModule } from '../auth/auth.module'; // ✅ Importer AuthModule pour avoir accès à JwtService\nimport { UploadModule } from '../upload/upload.module';\n@Module({\n  imports: [AuthModule,UploadModule], // ✅ Ajout de AuthModule pour éviter l'erreur\n  controllers: [UtilisateurController],\n  providers: [UtilisateurService, PrismaService],\n  exports: [UtilisateurService],\n})\nexport class UtilisateurModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilisateurService.html":{"url":"injectables/UtilisateurService.html","title":"injectable - UtilisateurService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilisateurService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateur/utilisateur.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePrivilege\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllClients\n                            \n                            \n                                    Async\n                                findAllWithoutAdminsAndClients\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findUtilisateurByEmail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, responseService: ResponseService, uploadService: FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/utilisateur/utilisateur.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseService\n                                                  \n                                                        \n                                                                        ResponseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePrivilege\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePrivilege(id: number, changePrivilegeDto: ChangePrivilegeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changePrivilegeDto\n                                            \n                                                            ChangePrivilegeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUtilisateurDto: CreateUtilisateurDto, currentUser?: any, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUtilisateurDto\n                                            \n                                                            CreateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllClients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:228\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllWithoutAdminsAndClients\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithoutAdminsAndClients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:204\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUtilisateurByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUtilisateurByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:241\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateUtilisateurDto: UpdateUtilisateurDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utilisateur/utilisateur.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUtilisateurDto\n                                            \n                                                            UpdateUtilisateurDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  ConflictException,\n  UnauthorizedException,\n  Inject, BadRequestException,\n} from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { ChangePrivilegeDto } from './dto/change-privilege.dto';\nimport { ResponseService } from '../validation/exception/response/response.service';\nimport { FileStorageService } from '../upload/interfaces/upload.interface';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class UtilisateurService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly responseService: ResponseService,\n    @Inject('UploadService') private readonly uploadService: FileStorageService,\n  ) {}\n\n  async create(\n    createUtilisateurDto: CreateUtilisateurDto,\n    currentUser?: any,\n    file?: Express.Multer.File,\n  ) {\n    let idPrivilege = createUtilisateurDto.idPrivilege;\n\n    if (!currentUser) {\n      const privilegeClient = await this.prisma.privilege.findFirst({ where: { libelle: 'Client' } });\n      if (!privilegeClient) {\n        throw new NotFoundException(\n          this.responseService.notFound(`Le privilège 'Client' n'existe pas. Contactez un administrateur.`),\n        );\n      }\n      idPrivilege = privilegeClient.id;\n    } else {\n      const adminUser = await this.prisma.utilisateur.findFirst({\n        where: { id: currentUser.id },\n        include: { privilege: true },\n      });\n\n      if (!adminUser || adminUser.privilege?.libelle !== 'Admin') {\n        throw new UnauthorizedException(\n          this.responseService.forbidden(\"Seuls les administrateurs peuvent créer un utilisateur avec un privilège spécifique.\"),\n        );\n      }\n\n      const privilege = await this.prisma.privilege.findUnique({ where: { id: idPrivilege } });\n      if (!privilege) {\n        throw new NotFoundException(\n          this.responseService.notFound(`Le privilège #${idPrivilege} n'existe pas.`),\n        );\n      }\n    }\n\n    const existingEmail = await this.prisma.utilisateur.findUnique({ where: { email: createUtilisateurDto.email } });\n    if (existingEmail) {\n      throw new ConflictException(\n        this.responseService.badRequest(['Cet email est déjà utilisé.'], 'Validation échouée'),\n      );\n    }\n\n    const existingPhone = await this.prisma.utilisateur.findUnique({ where: { telephone: createUtilisateurDto.telephone } });\n    if (existingPhone) {\n      throw new ConflictException(\n        this.responseService.badRequest(['Ce numéro de téléphone est déjà utilisé.'], 'Validation échouée'),\n      );\n    }\n\n    const hashedPassword = await bcrypt.hash(createUtilisateurDto.password, 10);\n\n    const privilege = await this.prisma.privilege.findUnique({ where: { id: idPrivilege } });\n\n    let profilUrl: string | undefined;\n    if (file) {\n      const uploadResult = await this.uploadService.uploadSingle(file, 'profil-utilisateurs');\n      profilUrl = uploadResult.url;\n    }\n\n    const data: any = {\n      nom: createUtilisateurDto.nom,\n      prenom: createUtilisateurDto.prenom,\n      email: createUtilisateurDto.email,\n      password: hashedPassword,\n      telephone: createUtilisateurDto.telephone,\n      idPrivilege,\n      profil: privilege?.libelle,\n    };\n\n    if (profilUrl) data.profilUrl = profilUrl;\n\n    const utilisateur = await this.prisma.utilisateur.create({ data });\n\n    return this.responseService.created(utilisateur, 'Utilisateur créé avec succès');\n  }\n\n  async findAll() {\n    const utilisateurs = await this.prisma.utilisateur.findMany({\n      where: { deletedAt: null },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(utilisateurs, 'Liste des utilisateurs récupérée');\n  }\n\n  async findOne(id: number) {\n    const utilisateur = await this.prisma.utilisateur.findFirst({\n      where: { id, deletedAt: null },\n      include: { privilege: true },\n    });\n\n    if (!utilisateur) {\n      throw new NotFoundException(\n        this.responseService.notFound(`L'utilisateur #${id} n'existe pas ou a été supprimé`),\n      );\n    }\n\n    return this.responseService.success(utilisateur, 'Utilisateur récupéré');\n  }\n\n  async update(\n    id: number,\n    updateUtilisateurDto: UpdateUtilisateurDto,\n    file?: Express.Multer.File,\n  ) {\n    const existingUser = await this.prisma.utilisateur.findUnique({ where: { id } });\n    if (!existingUser) throw new NotFoundException('Utilisateur non trouvé');\n    if (\n      !file &&\n      !Object.values(updateUtilisateurDto).some((val) => val !== undefined)\n    ) {\n      throw new BadRequestException(\"Aucune donnée à mettre à jour.\");\n    }\n    let profilUrl = existingUser.profilUrl;\n\n    if (file) {\n      // Supprimer l’ancienne image si elle existe\n      if (profilUrl) {\n        await this.uploadService.deleteFile(profilUrl);\n      }\n      const uploadResult = await this.uploadService.uploadSingle(file, 'profil-utilisateurs');\n      profilUrl = uploadResult.url;\n    }\n\n    const data: any = {};\n    if (updateUtilisateurDto.nom) data.nom = updateUtilisateurDto.nom;\n    if (updateUtilisateurDto.prenom) data.prenom = updateUtilisateurDto.prenom;\n    if (updateUtilisateurDto.email) data.email = updateUtilisateurDto.email;\n    if (updateUtilisateurDto.password)\n      data.password = await bcrypt.hash(updateUtilisateurDto.password, 10);\n    if (updateUtilisateurDto.telephone) data.telephone = updateUtilisateurDto.telephone;\n    if (updateUtilisateurDto.idPrivilege) data.idPrivilege = updateUtilisateurDto.idPrivilege;\n    if (updateUtilisateurDto.profil) data.profil = updateUtilisateurDto.profil;\n    if (profilUrl) data.profilUrl = profilUrl;\n\n    const updatedUtilisateur = await this.prisma.utilisateur.update({\n      where: { id },\n      data,\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(updatedUtilisateur, 'Utilisateur mis à jour avec succès');\n  }\n\n  async remove(id: number) {\n    await this.findOne(id);\n\n    await this.prisma.utilisateur.update({\n      where: { id },\n      data: { deletedAt: new Date() },\n    });\n\n    return this.responseService.success(null, 'Utilisateur supprimé avec succès (soft delete)');\n  }\n\n  async changePrivilege(id: number, changePrivilegeDto: ChangePrivilegeDto) {\n    await this.findOne(id);\n\n    const privilege = await this.prisma.privilege.findUnique({\n      where: { id: changePrivilegeDto.idPrivilege },\n    });\n\n    if (!privilege) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Le privilège #${changePrivilegeDto.idPrivilege} n'existe pas.`),\n      );\n    }\n\n    const updatedUtilisateur = await this.prisma.utilisateur.update({\n      where: { id },\n      data: {\n        idPrivilege: changePrivilegeDto.idPrivilege,\n        profil: privilege.libelle,\n      },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(updatedUtilisateur, 'Privilège mis à jour avec succès');\n  }\n\n  async findByEmail(email: string) {\n    return this.prisma.utilisateur.findFirst({ where: { email } });\n  }\n  async findAllWithoutAdminsAndClients() {\n    const utilisateurs = await this.prisma.utilisateur.findMany({\n      where: {\n        deletedAt: null,\n        NOT: {\n          privilege: {\n            libelle: {\n              in: ['Client', 'Admin'],\n            },\n          },\n        },\n      },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(\n      utilisateurs,\n      \"Liste des utilisateurs sans privilèges 'Client' et 'Admin' récupérée\",\n    );\n  }\n\n  async findAllClients() {\n    const utilisateurs = await this.prisma.utilisateur.findMany({\n      where: {\n        deletedAt: null,\n        privilege: {\n          libelle: 'Client',\n        },\n      },\n      include: { privilege: true },\n    });\n\n    return this.responseService.success(utilisateurs, 'Liste des utilisateurs avec le privilège Client');\n  }\n  async findUtilisateurByEmail(email: string) {\n    const user = await this.prisma.utilisateur.findFirst({\n      where: { email, deletedAt: null },\n      include: { privilege: true },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\n        this.responseService.notFound(`Aucun utilisateur trouvé avec l'email ${email}`)\n      );\n    }\n\n    return this.responseService.success(user, \"Utilisateur récupéré avec succès\");\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ValidationModule\n\n\n\ncluster_ValidationModule_exports\n\n\n\ncluster_ValidationModule_providers\n\n\n\n\nExceptionService \n\nExceptionService \n\n\n\nResponseService \n\nResponseService \n\n\n\nValidationService \n\nValidationService \n\n\n\nValidationModule\n\nValidationModule\n\nExceptionService  -->\n\nValidationModule->ExceptionService \n\n\n\nResponseService  -->\n\nValidationModule->ResponseService \n\n\n\nValidationService  -->\n\nValidationModule->ValidationService \n\n\n\n\n\nExceptionService\n\nExceptionService\n\nValidationModule -->\n\nExceptionService->ValidationModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nValidationModule -->\n\nResponseService->ValidationModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nValidationModule -->\n\nValidationService->ValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExceptionService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExceptionService\n                        \n                        \n                            ResponseService\n                        \n                        \n                            ValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ValidationService } from './validation.service';\nimport { ExceptionService } from './exception/exception.service';\nimport { ResponseService } from './exception/response/response.service';\n\n@Global() // Rend ce module accessible dans toute l'application\n@Module({\n  providers: [ValidationService, ExceptionService, ResponseService],\n  exports: [ValidationService, ExceptionService, ResponseService], // Exporte les services pour les autres modules\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationService.html":{"url":"injectables/ValidationService.html","title":"injectable - ValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/validation/validation.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(exceptionService: ExceptionService)\n                    \n                \n                        \n                            \n                                Defined in src/validation/validation.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        ExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ValidationPipe, ValidationPipeOptions } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { ExceptionService } from './exception/exception.service';\n@Injectable()\nexport class ValidationService extends ValidationPipe {\n  constructor(private readonly exceptionService: ExceptionService) {\n    const options: ValidationPipeOptions = {\n      whitelist: true,\n      transform: true,\n      forbidNonWhitelisted: true,\n      validationError: {\n        target: false,\n        value: false,\n      },\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        return this.exceptionService.createValidationException(errors);\n      },\n    };\n    super(options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/async-context/async-context.interceptor.ts\n            \n            injectable\n            AsyncContextInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/blacklist/blacklist.service.ts\n            \n            injectable\n            BlacklistService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/change-password.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/connect-utilisateur.dto.ts\n            \n            class\n            ConnectUtilisateurDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/reset-password.dto.ts\n            \n            class\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/optional-jwt-auth.guard.ts\n            \n            injectable\n            OptionalJwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middleware/async-context/async-context.middleware.ts\n            \n            injectable\n            AsyncContextMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/devise/devise.controller.ts\n            \n            controller\n            DeviseController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/devise/devise.service.ts\n            \n            injectable\n            DeviseService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/devise/dto/create-devise.dto.ts\n            \n            class\n            CreateDeviseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/devise/dto/update-devise.dto.ts\n            \n            class\n            UpdateDeviseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/disponibilite/disponibilite.controller.ts\n            \n            controller\n            DisponibiliteController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/disponibilite/disponibilite.service.ts\n            \n            injectable\n            DisponibiliteService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/disponibilite/dto/create-disponibilite.dto.ts\n            \n            class\n            CreateDisponibiliteDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/disponibilite/dto/update-disponibilite.dto.ts\n            \n            class\n            UpdateDisponibiliteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-devise.dto.ts\n            \n            class\n            ConnectDeviseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-disponibilite.dto.ts\n            \n            class\n            ConnectDisponibiliteDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-dossierMedical.dto.ts\n            \n            class\n            ConnectDossierMedicalDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-log.dto.ts\n            \n            class\n            ConnectLogDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-medecinSousService.dto.ts\n            \n            class\n            ConnectMedecinSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-modePaiement.dto.ts\n            \n            class\n            ConnectModePaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-ordonnance.dto.ts\n            \n            class\n            ConnectOrdonnanceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-paiement.dto.ts\n            \n            class\n            ConnectPaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-privilege.dto.ts\n            \n            class\n            ConnectPrivilegeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-reservation.dto.ts\n            \n            class\n            ConnectReservationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-service.dto.ts\n            \n            class\n            ConnectServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-sousService.dto.ts\n            \n            class\n            ConnectSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-statutReservation.dto.ts\n            \n            class\n            ConnectStatutReservationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-tarif.dto.ts\n            \n            class\n            ConnectTarifDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/connect-utilisateur.dto.ts\n            \n            class\n            ConnectUtilisateurDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-devise.dto.ts\n            \n            class\n            CreateDeviseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-disponibilite.dto.ts\n            \n            class\n            CreateDisponibiliteDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-dossierMedical.dto.ts\n            \n            class\n            CreateDossierMedicalDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-log.dto.ts\n            \n            class\n            CreateLogDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-medecinSousService.dto.ts\n            \n            class\n            CreateMedecinSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-modePaiement.dto.ts\n            \n            class\n            CreateModePaiementDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-ordonnance.dto.ts\n            \n            class\n            CreateOrdonnanceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-paiement.dto.ts\n            \n            class\n            CreatePaiementDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-privilege.dto.ts\n            \n            class\n            CreatePrivilegeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-reservation.dto.ts\n            \n            class\n            CreateReservationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-sousService.dto.ts\n            \n            class\n            CreateSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-statutReservation.dto.ts\n            \n            class\n            CreateStatutReservationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-tarif.dto.ts\n            \n            class\n            CreateTarifDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/devise.dto.ts\n            \n            class\n            DeviseDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/devise.entity.ts\n            \n            class\n            Devise\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/disponibilite.dto.ts\n            \n            class\n            DisponibiliteDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/disponibilite.entity.ts\n            \n            class\n            Disponibilite\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/dossierMedical.dto.ts\n            \n            class\n            DossierMedicalDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/dossierMedical.entity.ts\n            \n            class\n            DossierMedical\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/log.dto.ts\n            \n            class\n            LogDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/log.entity.ts\n            \n            class\n            Log\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/medecinSousService.dto.ts\n            \n            class\n            MedecinSousServiceDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/medecinSousService.entity.ts\n            \n            class\n            MedecinSousService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/modePaiement.dto.ts\n            \n            class\n            ModePaiementDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/modePaiement.entity.ts\n            \n            class\n            ModePaiement\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/ordonnance.dto.ts\n            \n            class\n            OrdonnanceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/ordonnance.entity.ts\n            \n            class\n            Ordonnance\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/paiement.dto.ts\n            \n            class\n            PaiementDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/paiement.entity.ts\n            \n            class\n            Paiement\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/privilege.dto.ts\n            \n            class\n            PrivilegeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/privilege.entity.ts\n            \n            class\n            Privilege\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/reservation.dto.ts\n            \n            class\n            ReservationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/reservation.entity.ts\n            \n            class\n            Reservation\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/service.dto.ts\n            \n            class\n            ServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/service.entity.ts\n            \n            class\n            Service\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/sousService.dto.ts\n            \n            class\n            SousServiceDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/sousService.entity.ts\n            \n            class\n            SousService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/statutReservation.dto.ts\n            \n            class\n            StatutReservationDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/statutReservation.entity.ts\n            \n            class\n            StatutReservation\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/tarif.dto.ts\n            \n            class\n            TarifDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/tarif.entity.ts\n            \n            class\n            Tarif\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-devise.dto.ts\n            \n            class\n            UpdateDeviseDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-disponibilite.dto.ts\n            \n            class\n            UpdateDisponibiliteDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-dossierMedical.dto.ts\n            \n            class\n            UpdateDossierMedicalDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-log.dto.ts\n            \n            class\n            UpdateLogDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-medecinSousService.dto.ts\n            \n            class\n            UpdateMedecinSousServiceDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-modePaiement.dto.ts\n            \n            class\n            UpdateModePaiementDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-ordonnance.dto.ts\n            \n            class\n            UpdateOrdonnanceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-paiement.dto.ts\n            \n            class\n            UpdatePaiementDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-privilege.dto.ts\n            \n            class\n            UpdatePrivilegeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-reservation.dto.ts\n            \n            class\n            UpdateReservationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-sousService.dto.ts\n            \n            class\n            UpdateSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-statutReservation.dto.ts\n            \n            class\n            UpdateStatutReservationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-tarif.dto.ts\n            \n            class\n            UpdateTarifDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/utilisateur.dto.ts\n            \n            class\n            UtilisateurDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/generated/nestjs-dto/utilisateur.entity.ts\n            \n            class\n            Utilisateur\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/log-listener/log-listener.ts\n            \n            injectable\n            LogListener\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/log/log.controller.ts\n            \n            controller\n            LogController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/log/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/dto/create-medecin-sous-service.ts\n            \n            class\n            CreateMedecinSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/dto/update-medecin-sous-service.ts\n            \n            class\n            UpdateMedecinSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/medecin-sousservice.controller.ts\n            \n            controller\n            MedecinSousServiceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/medecin-sousservice/medecin-sousservice.service.ts\n            \n            injectable\n            MedecinSousServiceService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/mode-paiement/dto/create-mode-paiement.dto..ts\n            \n            class\n            CreateModePaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mode-paiement/dto/update-mode-paiement.dto.ts\n            \n            class\n            UpdateModePaiementDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mode-paiement/mode-paiement.controller.ts\n            \n            controller\n            ModePaiementController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mode-paiement/mode-paiement.service.ts\n            \n            injectable\n            ModePaiementService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/paiement/dto/create-paiement-naboo.dto.ts\n            \n            class\n            CreatePaiementNabooDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/paiement/dto/create-paiement.dto.ts\n            \n            class\n            CreatePaiementDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paiement/dto/update-paiement.dto.ts\n            \n            class\n            UpdatePaiementDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/paiement/paiement-naboo/paiement-naboo.service.ts\n            \n            injectable\n            PaiementNabooService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/paiement/paiement.controller.ts\n            \n            controller\n            PaiementController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paiement/paiement.interface.ts\n            \n            interface\n            IPaiementResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/paiement/paiement.service.ts\n            \n            injectable\n            PaiementService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/prisma/prisma.middleware.ts\n            \n            variable\n            asyncLocalStorage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/prisma/prisma.middleware.ts\n            \n            variable\n            loggingMiddleware\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/privilege/dto/create-privilege.dto.ts\n            \n            class\n            CreatePrivilegeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/privilege/dto/find-privilege.dto.ts\n            \n            class\n            FindPrivilegeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/privilege/dto/update-privilege.dto.ts\n            \n            class\n            UpdatePrivilegeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/privilege/entities/privilege.entity.ts\n            \n            class\n            Privilege\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/privilege/privilege.controller.ts\n            \n            controller\n            PrivilegeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/privilege/privilege.service.ts\n            \n            injectable\n            PrivilegeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/reservation/dto/create-reservation.dto.ts\n            \n            class\n            CreateReservationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/reservation/dto/update-reservation.dto.ts\n            \n            class\n            UpdateReservationDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/reservation/reservation-document/reservation-document.service.ts\n            \n            injectable\n            ReservationDocumentService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reservation/reservation.controller.ts\n            \n            controller\n            ReservationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reservation/reservation.service.ts\n            \n            injectable\n            ReservationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/service/dto/create-service.dto.ts\n            \n            class\n            CreateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/service/dto/update-service.dto.ts\n            \n            class\n            UpdateServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/service/service.controller.ts\n            \n            controller\n            ServiceController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/service/service.service.ts\n            \n            injectable\n            ServiceService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/sous-service/dto/create-sous-service.dto.ts\n            \n            class\n            CreateSousServiceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/sous-service/dto/update-sous-service.dto.ts\n            \n            class\n            UpdateSousServiceDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/sous-service/sous-service.controller.ts\n            \n            controller\n            SousServiceController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/sous-service/sous-service.service.ts\n            \n            injectable\n            SousServiceService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/statut-reservation/dto/create-statut-reservation.dto.ts\n            \n            class\n            CreateStatutReservationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/statut-reservation/dto/update-statut-reservation.dto.ts\n            \n            class\n            UpdateStatutReservationDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/statut-reservation/statut-reservation.controller.ts\n            \n            controller\n            StatutReservationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/statut-reservation/statut-reservation.service.ts\n            \n            injectable\n            StatutReservationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tarif/dto/create-tarif.dto.ts\n            \n            class\n            CreateTarifDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tarif/dto/update-tarif.dto.ts\n            \n            class\n            UpdateTarifDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tarif/tarif.controller.ts\n            \n            controller\n            TarifController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tarif/tarif.service.ts\n            \n            injectable\n            TarifService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/upload/cloudinary/cloudinary.service.ts\n            \n            injectable\n            CloudinaryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/upload/interfaces/upload.interface.ts\n            \n            interface\n            FileStorageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/upload/interfaces/upload.interface.ts\n            \n            interface\n            FileUploadResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/upload/interfaces/upload.interface.ts\n            \n            variable\n            DATABASE_CONNECTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/upload/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/change-privilege.dto.ts\n            \n            class\n            ChangePrivilegeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/find-utilisateur.dto.ts\n            \n            class\n            FindUtilisateurDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utilisateur/dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utilisateur/entities/utilisateur.entity.ts\n            \n            class\n            Utilisateur\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateur/utilisateur.controller.ts\n            \n            controller\n            UtilisateurController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utilisateur/utilisateur.service.ts\n            \n            injectable\n            UtilisateurService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/validation/exception/exception.service.ts\n            \n            injectable\n            ExceptionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/validation/exception/response/response.interface.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/validation/exception/response/response.service.ts\n            \n            injectable\n            ResponseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/validation/validation.service.ts\n            \n            injectable\n            ValidationService\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/event-emitter : ^3.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.0.6\n        \n            @prisma/client : ^6.5.0\n        \n            axios : ^1.8.4\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cloudinary : ^2.6.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pdfkit : ^0.17.0\n        \n            prisma : ^6.5.0\n        \n            qrcode : ^1.5.4\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DisponibiliteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MedecinSousserviceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModePaiementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaiementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivilegeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReservationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SousServiceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatutReservationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TarifModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilisateurModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LogModule\n\n\n\ncluster_LogModule_exports\n\n\n\ncluster_LogModule_providers\n\n\n\ncluster_MedecinSousserviceModule\n\n\n\ncluster_MedecinSousserviceModule_providers\n\n\n\ncluster_ModePaiementModule\n\n\n\ncluster_ModePaiementModule_providers\n\n\n\ncluster_PaiementModule\n\n\n\ncluster_PaiementModule_imports\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrivilegeModule\n\n\n\ncluster_PrivilegeModule_providers\n\n\n\ncluster_ReservationModule\n\n\n\ncluster_ReservationModule_exports\n\n\n\ncluster_ReservationModule_providers\n\n\n\ncluster_ServiceModule\n\n\n\ncluster_ServiceModule_exports\n\n\n\ncluster_SousServiceModule\n\n\n\ncluster_SousServiceModule_exports\n\n\n\ncluster_SousServiceModule_providers\n\n\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_exports\n\n\n\ncluster_UtilisateurModule\n\n\n\ncluster_UtilisateurModule_exports\n\n\n\ncluster_ValidationModule\n\n\n\ncluster_ValidationModule_exports\n\n\n\ncluster_ValidationModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUtilisateurModule\n\nUtilisateurModule\n\nUtilisateurModule -->\n\nAuthModule->UtilisateurModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nDisponibiliteModule\n\nDisponibiliteModule\n\nAppModule -->\n\nDisponibiliteModule->AppModule\n\n\n\n\n\nLogModule\n\nLogModule\n\nAppModule -->\n\nLogModule->AppModule\n\n\n\n\n\nLogService \n\nLogService \n\nLogService  -->\n\nLogModule->LogService \n\n\n\n\n\nMedecinSousserviceModule\n\nMedecinSousserviceModule\n\nAppModule -->\n\nMedecinSousserviceModule->AppModule\n\n\n\n\n\nModePaiementModule\n\nModePaiementModule\n\nAppModule -->\n\nModePaiementModule->AppModule\n\n\n\n\n\nPaiementModule\n\nPaiementModule\n\nAppModule -->\n\nPaiementModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nLogModule -->\n\nPrismaModule->LogModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrivilegeModule\n\nPrivilegeModule\n\nAppModule -->\n\nPrivilegeModule->AppModule\n\n\n\n\n\nServiceModule\n\nServiceModule\n\nAppModule -->\n\nServiceModule->AppModule\n\n\n\n\n\nServiceService \n\nServiceService \n\nServiceService  -->\n\nServiceModule->ServiceService \n\n\n\n\n\nSousServiceModule\n\nSousServiceModule\n\nAppModule -->\n\nSousServiceModule->AppModule\n\n\n\n\n\nSousServiceService \n\nSousServiceService \n\nSousServiceService  -->\n\nSousServiceModule->SousServiceService \n\n\n\n\n\nStatutReservationModule\n\nStatutReservationModule\n\nAppModule -->\n\nStatutReservationModule->AppModule\n\n\n\n\n\nTarifModule\n\nTarifModule\n\nAppModule -->\n\nTarifModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nModePaiementModule -->\n\nUploadModule->ModePaiementModule\n\n\n\nServiceModule -->\n\nUploadModule->ServiceModule\n\n\n\nSousServiceModule -->\n\nUploadModule->SousServiceModule\n\n\n\nUtilisateurModule -->\n\nUploadModule->UtilisateurModule\n\n\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nUploadService \n\nUploadService \n\nUploadService  -->\n\nUploadModule->UploadService \n\n\n\nAppModule -->\n\nUtilisateurModule->AppModule\n\n\n\n\n\nUtilisateurService \n\nUtilisateurService \n\nUtilisateurService  -->\n\nUtilisateurModule->UtilisateurService \n\n\n\n\n\nValidationModule\n\nValidationModule\n\nAppModule -->\n\nValidationModule->AppModule\n\n\n\n\n\nExceptionService \n\nExceptionService \n\nExceptionService  -->\n\nValidationModule->ExceptionService \n\n\n\n\n\nResponseService \n\nResponseService \n\nResponseService  -->\n\nValidationModule->ResponseService \n\n\n\n\n\nValidationService \n\nValidationService \n\nValidationService  -->\n\nValidationModule->ValidationService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nDeviseService\n\nDeviseService\n\nAppModule -->\n\nDeviseService->AppModule\n\n\n\n\n\nDisponibiliteService\n\nDisponibiliteService\n\nDisponibiliteModule -->\n\nDisponibiliteService->DisponibiliteModule\n\n\n\nAppModule -->\n\nDisponibiliteService->AppModule\n\n\n\n\n\nPaiementNabooService\n\nPaiementNabooService\n\nPaiementModule -->\n\nPaiementNabooService->PaiementModule\n\n\n\nAppModule -->\n\nPaiementNabooService->AppModule\n\n\n\n\n\nPaiementService\n\nPaiementService\n\nPaiementModule -->\n\nPaiementService->PaiementModule\n\n\n\nAppModule -->\n\nPaiementService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\nPaiementModule -->\n\nPrismaService->PaiementModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nServiceModule -->\n\nPrismaService->ServiceModule\n\n\n\nSousServiceModule -->\n\nPrismaService->SousServiceModule\n\n\n\nUtilisateurModule -->\n\nPrismaService->UtilisateurModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nReservationModule\n\nReservationModule\n\nReservationModule -->\n\nPrismaService->ReservationModule\n\n\n\n\n\nServiceService\n\nServiceService\n\nServiceModule -->\n\nServiceService->ServiceModule\n\n\n\nAppModule -->\n\nServiceService->AppModule\n\n\n\n\n\nStatutReservationService\n\nStatutReservationService\n\nStatutReservationModule -->\n\nStatutReservationService->StatutReservationModule\n\n\n\nAppModule -->\n\nStatutReservationService->AppModule\n\n\n\n\n\nTarifService\n\nTarifService\n\nTarifModule -->\n\nTarifService->TarifModule\n\n\n\nAppModule -->\n\nTarifService->AppModule\n\n\n\n\n\nUploadService\n\nUploadService\n\nUploadModule -->\n\nUploadService->UploadModule\n\n\n\nAppModule -->\n\nUploadService->AppModule\n\n\n\n\n\nValidationService\n\nValidationService\n\nValidationModule -->\n\nValidationService->ValidationModule\n\n\n\nAppModule -->\n\nValidationService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBlacklistService\n\nBlacklistService\n\nAuthModule -->\n\nBlacklistService->AuthModule\n\n\n\n\n\nJwtAuthGuard\n\nJwtAuthGuard\n\nAuthModule -->\n\nJwtAuthGuard->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nResponseService\n\nResponseService\n\nAuthModule -->\n\nResponseService->AuthModule\n\n\n\nDisponibiliteModule -->\n\nResponseService->DisponibiliteModule\n\n\n\nLogModule -->\n\nResponseService->LogModule\n\n\n\nPaiementModule -->\n\nResponseService->PaiementModule\n\n\n\nServiceModule -->\n\nResponseService->ServiceModule\n\n\n\nSousServiceModule -->\n\nResponseService->SousServiceModule\n\n\n\nValidationModule -->\n\nResponseService->ValidationModule\n\n\n\nReservationModule -->\n\nResponseService->ReservationModule\n\n\n\n\n\nUtilisateurService\n\nUtilisateurService\n\nAuthModule -->\n\nUtilisateurService->AuthModule\n\n\n\nUtilisateurModule -->\n\nUtilisateurService->UtilisateurModule\n\n\n\n\n\nLogListener\n\nLogListener\n\nLogModule -->\n\nLogListener->LogModule\n\n\n\n\n\nLogService\n\nLogService\n\nLogModule -->\n\nLogService->LogModule\n\n\n\n\n\nMedecinSousServiceService\n\nMedecinSousServiceService\n\nMedecinSousserviceModule -->\n\nMedecinSousServiceService->MedecinSousserviceModule\n\n\n\n\n\nModePaiementService\n\nModePaiementService\n\nModePaiementModule -->\n\nModePaiementService->ModePaiementModule\n\n\n\nPaiementModule -->\n\nReservationModule->PaiementModule\n\n\n\n\n\nReservationDocumentService \n\nReservationDocumentService \n\nReservationDocumentService  -->\n\nReservationModule->ReservationDocumentService \n\n\n\n\n\nReservationService \n\nReservationService \n\nReservationService  -->\n\nReservationModule->ReservationService \n\n\n\n\n\nPrivilegeService\n\nPrivilegeService\n\nPrivilegeModule -->\n\nPrivilegeService->PrivilegeModule\n\n\n\n\n\nCloudinaryService\n\nCloudinaryService\n\nUploadModule -->\n\nCloudinaryService->UploadModule\n\n\n\nReservationModule -->\n\nCloudinaryService->ReservationModule\n\n\n\n\n\nReservationDocumentService\n\nReservationDocumentService\n\nReservationModule -->\n\nReservationDocumentService->ReservationModule\n\n\n\n\n\nReservationService\n\nReservationService\n\nReservationModule -->\n\nReservationService->ReservationModule\n\n\n\n\n\nSousServiceService\n\nSousServiceService\n\nSousServiceModule -->\n\nSousServiceService->SousServiceModule\n\n\n\n\n\nExceptionService\n\nExceptionService\n\nValidationModule -->\n\nExceptionService->ValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    30 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    108 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            asyncLocalStorage   (src/.../prisma.middleware.ts)\n                        \n                        \n                            DATABASE_CONNECTION   (src/.../upload.interface.ts)\n                        \n                        \n                            loggingMiddleware   (src/.../prisma.middleware.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/prisma/prisma.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        asyncLocalStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AsyncLocalStorage()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggingMiddleware\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (eventEmitter: EventEmitter2) => {\n  return async (\n    params: Prisma.MiddlewareParams,\n    next: (params: Prisma.MiddlewareParams) => Promise,\n  ) => {\n    const result = await next(params);\n    const store = asyncLocalStorage.getStore();\n\n    // ✅ Crée un log uniquement si l'utilisateur est connecté (userId !== 0)\n    if (params.model !== 'Log' && store?.userId) {\n      eventEmitter.emit('prisma.log', {\n        idUtilisateur: store.userId,\n        action: `${params.action} on ${params.model}`,\n        ip: store.ip || '0.0.0.0',\n        details: params.args,\n      });\n    }\n\n    return result;\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/upload/interfaces/upload.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATABASE_CONNECTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UPLOAD'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
